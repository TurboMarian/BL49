
BL49.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00002000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001fac  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00002000  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002030  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  00002070  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000014b9  00000000  00000000  00002190  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000e5c  00000000  00000000  00003649  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000019b8  00000000  00000000  000044a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000304  00000000  00000000  00005e60  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000a2a2  00000000  00000000  00006164  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000058a  00000000  00000000  00010406  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  00010990  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00004192  00000000  00000000  00010a60  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 49 00 	jmp	0x92	; 0x92 <__ctors_end>
       4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
       8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
       c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      58:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      5c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      60:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      68:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      6c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      70:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      74:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      78:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      7c:	19 02       	muls	r17, r25
      7e:	0f 03       	fmul	r16, r23
      80:	f9 03       	fmulsu	r23, r17
      82:	c7 04       	cpc	r12, r7
      84:	4a 05       	cpc	r20, r10
      86:	da 05       	cpc	r29, r10
      88:	74 06       	cpc	r7, r20
      8a:	9a 07       	cpc	r25, r26
      8c:	cd 08       	sbc	r12, r13
      8e:	0a 0a       	sbc	r0, r26
      90:	c0 0a       	sbc	r12, r16

00000092 <__ctors_end>:
      92:	11 24       	eor	r1, r1
      94:	1f be       	out	0x3f, r1	; 63
      96:	cf ef       	ldi	r28, 0xFF	; 255
      98:	d8 e0       	ldi	r29, 0x08	; 8
      9a:	de bf       	out	0x3e, r29	; 62
      9c:	cd bf       	out	0x3d, r28	; 61
      9e:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <main>
      a2:	0c 94 d4 0f 	jmp	0x1fa8	; 0x1fa8 <_exit>

000000a6 <__bad_interrupt>:
      a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <adc_init>:
	ADCSRA |= (1<<ADSC);		// start single conversion
	while(ADCSRA & (1<<ADSC));	// wait till done
	
	temp1 = ADC * (5.0/1024)*1000.0/25;	
	return temp1;
}
      aa:	cf 93       	push	r28
      ac:	df 93       	push	r29
      ae:	cd b7       	in	r28, 0x3d	; 61
      b0:	de b7       	in	r29, 0x3e	; 62
      b2:	8b e7       	ldi	r24, 0x7B	; 123
      b4:	90 e0       	ldi	r25, 0x00	; 0
      b6:	2b e7       	ldi	r18, 0x7B	; 123
      b8:	30 e0       	ldi	r19, 0x00	; 0
      ba:	f9 01       	movw	r30, r18
      bc:	20 81       	ld	r18, Z
      be:	20 62       	ori	r18, 0x20	; 32
      c0:	fc 01       	movw	r30, r24
      c2:	20 83       	st	Z, r18
      c4:	8c e7       	ldi	r24, 0x7C	; 124
      c6:	90 e0       	ldi	r25, 0x00	; 0
      c8:	20 e4       	ldi	r18, 0x40	; 64
      ca:	fc 01       	movw	r30, r24
      cc:	20 83       	st	Z, r18
      ce:	8a e7       	ldi	r24, 0x7A	; 122
      d0:	90 e0       	ldi	r25, 0x00	; 0
      d2:	2a e7       	ldi	r18, 0x7A	; 122
      d4:	30 e0       	ldi	r19, 0x00	; 0
      d6:	f9 01       	movw	r30, r18
      d8:	20 81       	ld	r18, Z
      da:	27 68       	ori	r18, 0x87	; 135
      dc:	fc 01       	movw	r30, r24
      de:	20 83       	st	Z, r18
      e0:	00 00       	nop
      e2:	df 91       	pop	r29
      e4:	cf 91       	pop	r28
      e6:	08 95       	ret

000000e8 <adc_ad12v>:

uint16_t adc_ad12v (void)	// adc channel 5
{
      e8:	cf 93       	push	r28
      ea:	df 93       	push	r29
      ec:	cd b7       	in	r28, 0x3d	; 61
      ee:	de b7       	in	r29, 0x3e	; 62
	ADMUX = (1 << REFS0)|(1 << MUX2)|(1 << MUX0);			// select channel
      f0:	8c e7       	ldi	r24, 0x7C	; 124
      f2:	90 e0       	ldi	r25, 0x00	; 0
      f4:	25 e4       	ldi	r18, 0x45	; 69
      f6:	fc 01       	movw	r30, r24
      f8:	20 83       	st	Z, r18
	ADCSRA |= (1<<ADSC);		// start single conversion
      fa:	8a e7       	ldi	r24, 0x7A	; 122
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	2a e7       	ldi	r18, 0x7A	; 122
     100:	30 e0       	ldi	r19, 0x00	; 0
     102:	f9 01       	movw	r30, r18
     104:	20 81       	ld	r18, Z
     106:	20 64       	ori	r18, 0x40	; 64
     108:	fc 01       	movw	r30, r24
     10a:	20 83       	st	Z, r18
	while(ADCSRA & (1<<ADSC));	// wait till done
     10c:	00 00       	nop
     10e:	8a e7       	ldi	r24, 0x7A	; 122
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	fc 01       	movw	r30, r24
     114:	80 81       	ld	r24, Z
     116:	88 2f       	mov	r24, r24
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	80 74       	andi	r24, 0x40	; 64
     11c:	99 27       	eor	r25, r25
     11e:	89 2b       	or	r24, r25
     120:	b1 f7       	brne	.-20     	; 0x10e <adc_ad12v+0x26>
	return ADC;
     122:	88 e7       	ldi	r24, 0x78	; 120
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	fc 01       	movw	r30, r24
     128:	80 81       	ld	r24, Z
     12a:	91 81       	ldd	r25, Z+1	; 0x01
}
     12c:	df 91       	pop	r29
     12e:	cf 91       	pop	r28
     130:	08 95       	ret

00000132 <can_clear_all_mob>:
            }
        } // while (evaluate ...
    } // while (bt_not_found ...

    return (bt_performed);
}
     132:	cf 93       	push	r28
     134:	df 93       	push	r29
     136:	00 d0       	rcall	.+0      	; 0x138 <can_clear_all_mob+0x6>
     138:	1f 92       	push	r1
     13a:	cd b7       	in	r28, 0x3d	; 61
     13c:	de b7       	in	r29, 0x3e	; 62
     13e:	19 82       	std	Y+1, r1	; 0x01
     140:	1d c0       	rjmp	.+58     	; 0x17c <can_clear_all_mob+0x4a>
     142:	8d ee       	ldi	r24, 0xED	; 237
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	29 81       	ldd	r18, Y+1	; 0x01
     148:	22 95       	swap	r18
     14a:	20 7f       	andi	r18, 0xF0	; 240
     14c:	fc 01       	movw	r30, r24
     14e:	20 83       	st	Z, r18
     150:	8e ee       	ldi	r24, 0xEE	; 238
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	9b 83       	std	Y+3, r25	; 0x03
     156:	8a 83       	std	Y+2, r24	; 0x02
     158:	09 c0       	rjmp	.+18     	; 0x16c <can_clear_all_mob+0x3a>
     15a:	8a 81       	ldd	r24, Y+2	; 0x02
     15c:	9b 81       	ldd	r25, Y+3	; 0x03
     15e:	fc 01       	movw	r30, r24
     160:	10 82       	st	Z, r1
     162:	8a 81       	ldd	r24, Y+2	; 0x02
     164:	9b 81       	ldd	r25, Y+3	; 0x03
     166:	01 96       	adiw	r24, 0x01	; 1
     168:	9b 83       	std	Y+3, r25	; 0x03
     16a:	8a 83       	std	Y+2, r24	; 0x02
     16c:	8a 81       	ldd	r24, Y+2	; 0x02
     16e:	9b 81       	ldd	r25, Y+3	; 0x03
     170:	88 3f       	cpi	r24, 0xF8	; 248
     172:	91 05       	cpc	r25, r1
     174:	90 f3       	brcs	.-28     	; 0x15a <can_clear_all_mob+0x28>
     176:	89 81       	ldd	r24, Y+1	; 0x01
     178:	8f 5f       	subi	r24, 0xFF	; 255
     17a:	89 83       	std	Y+1, r24	; 0x01
     17c:	89 81       	ldd	r24, Y+1	; 0x01
     17e:	86 30       	cpi	r24, 0x06	; 6
     180:	00 f3       	brcs	.-64     	; 0x142 <can_clear_all_mob+0x10>
     182:	00 00       	nop
     184:	0f 90       	pop	r0
     186:	0f 90       	pop	r0
     188:	0f 90       	pop	r0
     18a:	df 91       	pop	r29
     18c:	cf 91       	pop	r28
     18e:	08 95       	ret

00000190 <can_get_mob_free>:
     190:	cf 93       	push	r28
     192:	df 93       	push	r29
     194:	00 d0       	rcall	.+0      	; 0x196 <can_get_mob_free+0x6>
     196:	cd b7       	in	r28, 0x3d	; 61
     198:	de b7       	in	r29, 0x3e	; 62
     19a:	8d ee       	ldi	r24, 0xED	; 237
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	fc 01       	movw	r30, r24
     1a0:	80 81       	ld	r24, Z
     1a2:	8a 83       	std	Y+2, r24	; 0x02
     1a4:	19 82       	std	Y+1, r1	; 0x01
     1a6:	1b c0       	rjmp	.+54     	; 0x1de <can_get_mob_free+0x4e>
     1a8:	8d ee       	ldi	r24, 0xED	; 237
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	29 81       	ldd	r18, Y+1	; 0x01
     1ae:	22 95       	swap	r18
     1b0:	20 7f       	andi	r18, 0xF0	; 240
     1b2:	fc 01       	movw	r30, r24
     1b4:	20 83       	st	Z, r18
     1b6:	8f ee       	ldi	r24, 0xEF	; 239
     1b8:	90 e0       	ldi	r25, 0x00	; 0
     1ba:	fc 01       	movw	r30, r24
     1bc:	80 81       	ld	r24, Z
     1be:	88 2f       	mov	r24, r24
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	80 7c       	andi	r24, 0xC0	; 192
     1c4:	99 27       	eor	r25, r25
     1c6:	89 2b       	or	r24, r25
     1c8:	39 f4       	brne	.+14     	; 0x1d8 <can_get_mob_free+0x48>
     1ca:	8d ee       	ldi	r24, 0xED	; 237
     1cc:	90 e0       	ldi	r25, 0x00	; 0
     1ce:	2a 81       	ldd	r18, Y+2	; 0x02
     1d0:	fc 01       	movw	r30, r24
     1d2:	20 83       	st	Z, r18
     1d4:	89 81       	ldd	r24, Y+1	; 0x01
     1d6:	0c c0       	rjmp	.+24     	; 0x1f0 <can_get_mob_free+0x60>
     1d8:	89 81       	ldd	r24, Y+1	; 0x01
     1da:	8f 5f       	subi	r24, 0xFF	; 255
     1dc:	89 83       	std	Y+1, r24	; 0x01
     1de:	89 81       	ldd	r24, Y+1	; 0x01
     1e0:	86 30       	cpi	r24, 0x06	; 6
     1e2:	10 f3       	brcs	.-60     	; 0x1a8 <can_get_mob_free+0x18>
     1e4:	8d ee       	ldi	r24, 0xED	; 237
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	2a 81       	ldd	r18, Y+2	; 0x02
     1ea:	fc 01       	movw	r30, r24
     1ec:	20 83       	st	Z, r18
     1ee:	8f ef       	ldi	r24, 0xFF	; 255
     1f0:	0f 90       	pop	r0
     1f2:	0f 90       	pop	r0
     1f4:	df 91       	pop	r29
     1f6:	cf 91       	pop	r28
     1f8:	08 95       	ret

000001fa <can_get_mob_status>:
     1fa:	cf 93       	push	r28
     1fc:	df 93       	push	r29
     1fe:	00 d0       	rcall	.+0      	; 0x200 <can_get_mob_status+0x6>
     200:	cd b7       	in	r28, 0x3d	; 61
     202:	de b7       	in	r29, 0x3e	; 62
     204:	8f ee       	ldi	r24, 0xEF	; 239
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	fc 01       	movw	r30, r24
     20a:	80 81       	ld	r24, Z
     20c:	88 2f       	mov	r24, r24
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	80 7c       	andi	r24, 0xC0	; 192
     212:	99 27       	eor	r25, r25
     214:	89 2b       	or	r24, r25
     216:	11 f4       	brne	.+4      	; 0x21c <can_get_mob_status+0x22>
     218:	8f ef       	ldi	r24, 0xFF	; 255
     21a:	1c c0       	rjmp	.+56     	; 0x254 <can_get_mob_status+0x5a>
     21c:	8e ee       	ldi	r24, 0xEE	; 238
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	fc 01       	movw	r30, r24
     222:	80 81       	ld	r24, Z
     224:	89 83       	std	Y+1, r24	; 0x01
     226:	89 81       	ldd	r24, Y+1	; 0x01
     228:	80 7e       	andi	r24, 0xE0	; 224
     22a:	8a 83       	std	Y+2, r24	; 0x02
     22c:	8a 81       	ldd	r24, Y+2	; 0x02
     22e:	80 32       	cpi	r24, 0x20	; 32
     230:	31 f0       	breq	.+12     	; 0x23e <can_get_mob_status+0x44>
     232:	8a 81       	ldd	r24, Y+2	; 0x02
     234:	80 34       	cpi	r24, 0x40	; 64
     236:	19 f0       	breq	.+6      	; 0x23e <can_get_mob_status+0x44>
     238:	8a 81       	ldd	r24, Y+2	; 0x02
     23a:	80 3a       	cpi	r24, 0xA0	; 160
     23c:	11 f4       	brne	.+4      	; 0x242 <can_get_mob_status+0x48>
     23e:	8a 81       	ldd	r24, Y+2	; 0x02
     240:	09 c0       	rjmp	.+18     	; 0x254 <can_get_mob_status+0x5a>
     242:	89 81       	ldd	r24, Y+1	; 0x01
     244:	8f 71       	andi	r24, 0x1F	; 31
     246:	8a 83       	std	Y+2, r24	; 0x02
     248:	8a 81       	ldd	r24, Y+2	; 0x02
     24a:	88 23       	and	r24, r24
     24c:	11 f0       	breq	.+4      	; 0x252 <can_get_mob_status+0x58>
     24e:	8a 81       	ldd	r24, Y+2	; 0x02
     250:	01 c0       	rjmp	.+2      	; 0x254 <can_get_mob_status+0x5a>
     252:	80 e0       	ldi	r24, 0x00	; 0
     254:	0f 90       	pop	r0
     256:	0f 90       	pop	r0
     258:	df 91       	pop	r29
     25a:	cf 91       	pop	r28
     25c:	08 95       	ret

0000025e <can_get_data>:
     25e:	cf 93       	push	r28
     260:	df 93       	push	r29
     262:	00 d0       	rcall	.+0      	; 0x264 <can_get_data+0x6>
     264:	1f 92       	push	r1
     266:	cd b7       	in	r28, 0x3d	; 61
     268:	de b7       	in	r29, 0x3e	; 62
     26a:	9b 83       	std	Y+3, r25	; 0x03
     26c:	8a 83       	std	Y+2, r24	; 0x02
     26e:	19 82       	std	Y+1, r1	; 0x01
     270:	10 c0       	rjmp	.+32     	; 0x292 <can_get_data+0x34>
     272:	89 81       	ldd	r24, Y+1	; 0x01
     274:	88 2f       	mov	r24, r24
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	2a 81       	ldd	r18, Y+2	; 0x02
     27a:	3b 81       	ldd	r19, Y+3	; 0x03
     27c:	82 0f       	add	r24, r18
     27e:	93 1f       	adc	r25, r19
     280:	2a ef       	ldi	r18, 0xFA	; 250
     282:	30 e0       	ldi	r19, 0x00	; 0
     284:	f9 01       	movw	r30, r18
     286:	20 81       	ld	r18, Z
     288:	fc 01       	movw	r30, r24
     28a:	20 83       	st	Z, r18
     28c:	89 81       	ldd	r24, Y+1	; 0x01
     28e:	8f 5f       	subi	r24, 0xFF	; 255
     290:	89 83       	std	Y+1, r24	; 0x01
     292:	89 81       	ldd	r24, Y+1	; 0x01
     294:	28 2f       	mov	r18, r24
     296:	30 e0       	ldi	r19, 0x00	; 0
     298:	8f ee       	ldi	r24, 0xEF	; 239
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	fc 01       	movw	r30, r24
     29e:	80 81       	ld	r24, Z
     2a0:	88 2f       	mov	r24, r24
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	8f 70       	andi	r24, 0x0F	; 15
     2a6:	99 27       	eor	r25, r25
     2a8:	28 17       	cp	r18, r24
     2aa:	39 07       	cpc	r19, r25
     2ac:	14 f3       	brlt	.-60     	; 0x272 <can_get_data+0x14>
     2ae:	00 00       	nop
     2b0:	0f 90       	pop	r0
     2b2:	0f 90       	pop	r0
     2b4:	0f 90       	pop	r0
     2b6:	df 91       	pop	r29
     2b8:	cf 91       	pop	r28
     2ba:	08 95       	ret

000002bc <can_fixed_baudrate>:
//!
//! @return Baudrate Status
//!         fixed = 1: baudrate performed
//------------------------------------------------------------------------------
uint8_t can_fixed_baudrate(uint8_t mode)
{
     2bc:	cf 93       	push	r28
     2be:	df 93       	push	r29
     2c0:	1f 92       	push	r1
     2c2:	cd b7       	in	r28, 0x3d	; 61
     2c4:	de b7       	in	r29, 0x3e	; 62
     2c6:	89 83       	std	Y+1, r24	; 0x01
    Can_reset();
     2c8:	88 ed       	ldi	r24, 0xD8	; 216
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	21 e0       	ldi	r18, 0x01	; 1
     2ce:	fc 01       	movw	r30, r24
     2d0:	20 83       	st	Z, r18
    Can_conf_bt();
     2d2:	82 ee       	ldi	r24, 0xE2	; 226
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	26 e0       	ldi	r18, 0x06	; 6
     2d8:	fc 01       	movw	r30, r24
     2da:	20 83       	st	Z, r18
     2dc:	83 ee       	ldi	r24, 0xE3	; 227
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	24 e0       	ldi	r18, 0x04	; 4
     2e2:	fc 01       	movw	r30, r24
     2e4:	20 83       	st	Z, r18
     2e6:	84 ee       	ldi	r24, 0xE4	; 228
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	23 e1       	ldi	r18, 0x13	; 19
     2ec:	fc 01       	movw	r30, r24
     2ee:	20 83       	st	Z, r18
    return 1;
     2f0:	81 e0       	ldi	r24, 0x01	; 1
     2f2:	0f 90       	pop	r0
     2f4:	df 91       	pop	r29
     2f6:	cf 91       	pop	r28
     2f8:	08 95       	ret

000002fa <can_init>:
//!         ==0: research of bit timing configuration failed
//!         ==1: baudrate performed 
//!
//------------------------------------------------------------------------------
uint8_t can_init(uint8_t mode)
{
     2fa:	cf 93       	push	r28
     2fc:	df 93       	push	r29
     2fe:	1f 92       	push	r1
     300:	cd b7       	in	r28, 0x3d	; 61
     302:	de b7       	in	r29, 0x3e	; 62
     304:	89 83       	std	Y+1, r24	; 0x01
    if ((Can_bit_timing(mode))==0) return (0);  // c.f. macro in "can_drv.h"
     306:	89 81       	ldd	r24, Y+1	; 0x01
     308:	0e 94 5e 01 	call	0x2bc	; 0x2bc <can_fixed_baudrate>
     30c:	88 23       	and	r24, r24
     30e:	11 f4       	brne	.+4      	; 0x314 <can_init+0x1a>
     310:	80 e0       	ldi	r24, 0x00	; 0
     312:	0c c0       	rjmp	.+24     	; 0x32c <can_init+0x32>
    can_clear_all_mob();                        // c.f. function in "can_drv.c"
     314:	0e 94 99 00 	call	0x132	; 0x132 <can_clear_all_mob>
    Can_enable();                               // c.f. macro in "can_drv.h" 
     318:	88 ed       	ldi	r24, 0xD8	; 216
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	28 ed       	ldi	r18, 0xD8	; 216
     31e:	30 e0       	ldi	r19, 0x00	; 0
     320:	f9 01       	movw	r30, r18
     322:	20 81       	ld	r18, Z
     324:	22 60       	ori	r18, 0x02	; 2
     326:	fc 01       	movw	r30, r24
     328:	20 83       	st	Z, r18
    return (1);
     32a:	81 e0       	ldi	r24, 0x01	; 1
}
     32c:	0f 90       	pop	r0
     32e:	df 91       	pop	r29
     330:	cf 91       	pop	r28
     332:	08 95       	ret

00000334 <can_cmd>:
//! @return CAN_CMD_ACCEPTED - command is accepted
//!         CAN_CMD_REFUSED  - command is refused
//!
//------------------------------------------------------------------------------
uint8_t can_cmd(st_cmd_t* cmd)
{
     334:	cf 93       	push	r28
     336:	df 93       	push	r29
     338:	cd b7       	in	r28, 0x3d	; 61
     33a:	de b7       	in	r29, 0x3e	; 62
     33c:	2a 97       	sbiw	r28, 0x0a	; 10
     33e:	0f b6       	in	r0, 0x3f	; 63
     340:	f8 94       	cli
     342:	de bf       	out	0x3e, r29	; 62
     344:	0f be       	out	0x3f, r0	; 63
     346:	cd bf       	out	0x3d, r28	; 61
     348:	9a 87       	std	Y+10, r25	; 0x0a
     34a:	89 87       	std	Y+9, r24	; 0x09
  uint8_t mob_handle, cpt;
  uint32_t u32_temp;
  
  if (cmd->cmd == CMD_ABORT)
     34c:	89 85       	ldd	r24, Y+9	; 0x09
     34e:	9a 85       	ldd	r25, Y+10	; 0x0a
     350:	fc 01       	movw	r30, r24
     352:	81 81       	ldd	r24, Z+1	; 0x01
     354:	8c 30       	cpi	r24, 0x0C	; 12
     356:	39 f5       	brne	.+78     	; 0x3a6 <can_cmd+0x72>
  {
    if (cmd->status == MOB_PENDING)
     358:	89 85       	ldd	r24, Y+9	; 0x09
     35a:	9a 85       	ldd	r25, Y+10	; 0x0a
     35c:	fc 01       	movw	r30, r24
     35e:	81 85       	ldd	r24, Z+9	; 0x09
     360:	80 36       	cpi	r24, 0x60	; 96
     362:	d9 f4       	brne	.+54     	; 0x39a <can_cmd+0x66>
    {
      // Rx or Tx not yet performed
      Can_set_mob(cmd->handle);
     364:	8d ee       	ldi	r24, 0xED	; 237
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	29 85       	ldd	r18, Y+9	; 0x09
     36a:	3a 85       	ldd	r19, Y+10	; 0x0a
     36c:	f9 01       	movw	r30, r18
     36e:	20 81       	ld	r18, Z
     370:	22 95       	swap	r18
     372:	20 7f       	andi	r18, 0xF0	; 240
     374:	fc 01       	movw	r30, r24
     376:	20 83       	st	Z, r18
      Can_mob_abort();
     378:	8f ee       	ldi	r24, 0xEF	; 239
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	2f ee       	ldi	r18, 0xEF	; 239
     37e:	30 e0       	ldi	r19, 0x00	; 0
     380:	f9 01       	movw	r30, r18
     382:	20 81       	ld	r18, Z
     384:	2f 73       	andi	r18, 0x3F	; 63
     386:	fc 01       	movw	r30, r24
     388:	20 83       	st	Z, r18
      Can_clear_status_mob();       // To be sure !
     38a:	8e ee       	ldi	r24, 0xEE	; 238
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	fc 01       	movw	r30, r24
     390:	10 82       	st	Z, r1
      cmd->handle = 0;
     392:	89 85       	ldd	r24, Y+9	; 0x09
     394:	9a 85       	ldd	r25, Y+10	; 0x0a
     396:	fc 01       	movw	r30, r24
     398:	10 82       	st	Z, r1
    }
    cmd->status = STATUS_CLEARED; 
     39a:	89 85       	ldd	r24, Y+9	; 0x09
     39c:	9a 85       	ldd	r25, Y+10	; 0x0a
     39e:	fc 01       	movw	r30, r24
     3a0:	11 86       	std	Z+9, r1	; 0x09
     3a2:	0c 94 26 0c 	jmp	0x184c	; 0x184c <__stack+0xf4d>
  }
  else
  {
    mob_handle = can_get_mob_free();
     3a6:	0e 94 c8 00 	call	0x190	; 0x190 <can_get_mob_free>
     3aa:	8c 83       	std	Y+4, r24	; 0x04
    if (mob_handle!= NO_MOB)
     3ac:	8c 81       	ldd	r24, Y+4	; 0x04
     3ae:	8f 3f       	cpi	r24, 0xFF	; 255
     3b0:	11 f4       	brne	.+4      	; 0x3b6 <can_cmd+0x82>
     3b2:	0c 94 1f 0c 	jmp	0x183e	; 0x183e <__stack+0xf3f>
    {
      cmd->status = MOB_PENDING; 
     3b6:	89 85       	ldd	r24, Y+9	; 0x09
     3b8:	9a 85       	ldd	r25, Y+10	; 0x0a
     3ba:	20 e6       	ldi	r18, 0x60	; 96
     3bc:	fc 01       	movw	r30, r24
     3be:	21 87       	std	Z+9, r18	; 0x09
      cmd->handle = mob_handle;
     3c0:	89 85       	ldd	r24, Y+9	; 0x09
     3c2:	9a 85       	ldd	r25, Y+10	; 0x0a
     3c4:	2c 81       	ldd	r18, Y+4	; 0x04
     3c6:	fc 01       	movw	r30, r24
     3c8:	20 83       	st	Z, r18
      Can_set_mob(mob_handle);
     3ca:	8d ee       	ldi	r24, 0xED	; 237
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	2c 81       	ldd	r18, Y+4	; 0x04
     3d0:	22 95       	swap	r18
     3d2:	20 7f       	andi	r18, 0xF0	; 240
     3d4:	fc 01       	movw	r30, r24
     3d6:	20 83       	st	Z, r18
      Can_clear_mob();
     3d8:	8e ee       	ldi	r24, 0xEE	; 238
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	9b 83       	std	Y+3, r25	; 0x03
     3de:	8a 83       	std	Y+2, r24	; 0x02
     3e0:	09 c0       	rjmp	.+18     	; 0x3f4 <can_cmd+0xc0>
     3e2:	8a 81       	ldd	r24, Y+2	; 0x02
     3e4:	9b 81       	ldd	r25, Y+3	; 0x03
     3e6:	fc 01       	movw	r30, r24
     3e8:	10 82       	st	Z, r1
     3ea:	8a 81       	ldd	r24, Y+2	; 0x02
     3ec:	9b 81       	ldd	r25, Y+3	; 0x03
     3ee:	01 96       	adiw	r24, 0x01	; 1
     3f0:	9b 83       	std	Y+3, r25	; 0x03
     3f2:	8a 83       	std	Y+2, r24	; 0x02
     3f4:	8a 81       	ldd	r24, Y+2	; 0x02
     3f6:	9b 81       	ldd	r25, Y+3	; 0x03
     3f8:	88 3f       	cpi	r24, 0xF8	; 248
     3fa:	91 05       	cpc	r25, r1
     3fc:	90 f3       	brcs	.-28     	; 0x3e2 <can_cmd+0xae>
          
      switch (cmd->cmd)
     3fe:	89 85       	ldd	r24, Y+9	; 0x09
     400:	9a 85       	ldd	r25, Y+10	; 0x0a
     402:	fc 01       	movw	r30, r24
     404:	81 81       	ldd	r24, Z+1	; 0x01
     406:	88 2f       	mov	r24, r24
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	09 2e       	mov	r0, r25
     40c:	00 0c       	add	r0, r0
     40e:	aa 0b       	sbc	r26, r26
     410:	bb 0b       	sbc	r27, r27
     412:	41 e0       	ldi	r20, 0x01	; 1
     414:	50 e0       	ldi	r21, 0x00	; 0
     416:	2a e0       	ldi	r18, 0x0A	; 10
     418:	30 e0       	ldi	r19, 0x00	; 0
     41a:	84 1b       	sub	r24, r20
     41c:	95 0b       	sbc	r25, r21
     41e:	28 17       	cp	r18, r24
     420:	39 07       	cpc	r19, r25
     422:	10 f4       	brcc	.+4      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     424:	0c 94 19 0c 	jmp	0x1832	; 0x1832 <__stack+0xf33>
     428:	82 5c       	subi	r24, 0xC2	; 194
     42a:	9f 4f       	sbci	r25, 0xFF	; 255
     42c:	fc 01       	movw	r30, r24
     42e:	0c 94 b4 0f 	jmp	0x1f68	; 0x1f68 <__tablejump2__>
      {
        //------------      
        case CMD_TX:    
          if (cmd->ctrl.ide){ Can_set_ext_id(cmd->id.ext);}
     432:	89 85       	ldd	r24, Y+9	; 0x09
     434:	9a 85       	ldd	r25, Y+10	; 0x0a
     436:	fc 01       	movw	r30, r24
     438:	83 85       	ldd	r24, Z+11	; 0x0b
     43a:	88 23       	and	r24, r24
     43c:	09 f4       	brne	.+2      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
     43e:	69 c0       	rjmp	.+210    	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
     440:	83 ef       	ldi	r24, 0xF3	; 243
     442:	90 e0       	ldi	r25, 0x00	; 0
     444:	29 85       	ldd	r18, Y+9	; 0x09
     446:	3a 85       	ldd	r19, Y+10	; 0x0a
     448:	2e 5f       	subi	r18, 0xFE	; 254
     44a:	3f 4f       	sbci	r19, 0xFF	; 255
     44c:	2d 5f       	subi	r18, 0xFD	; 253
     44e:	3f 4f       	sbci	r19, 0xFF	; 255
     450:	f9 01       	movw	r30, r18
     452:	20 81       	ld	r18, Z
     454:	42 2f       	mov	r20, r18
     456:	44 0f       	add	r20, r20
     458:	44 0f       	add	r20, r20
     45a:	44 0f       	add	r20, r20
     45c:	29 85       	ldd	r18, Y+9	; 0x09
     45e:	3a 85       	ldd	r19, Y+10	; 0x0a
     460:	2e 5f       	subi	r18, 0xFE	; 254
     462:	3f 4f       	sbci	r19, 0xFF	; 255
     464:	2e 5f       	subi	r18, 0xFE	; 254
     466:	3f 4f       	sbci	r19, 0xFF	; 255
     468:	f9 01       	movw	r30, r18
     46a:	20 81       	ld	r18, Z
     46c:	22 95       	swap	r18
     46e:	26 95       	lsr	r18
     470:	27 70       	andi	r18, 0x07	; 7
     472:	24 0f       	add	r18, r20
     474:	fc 01       	movw	r30, r24
     476:	20 83       	st	Z, r18
     478:	82 ef       	ldi	r24, 0xF2	; 242
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	29 85       	ldd	r18, Y+9	; 0x09
     47e:	3a 85       	ldd	r19, Y+10	; 0x0a
     480:	2e 5f       	subi	r18, 0xFE	; 254
     482:	3f 4f       	sbci	r19, 0xFF	; 255
     484:	2e 5f       	subi	r18, 0xFE	; 254
     486:	3f 4f       	sbci	r19, 0xFF	; 255
     488:	f9 01       	movw	r30, r18
     48a:	20 81       	ld	r18, Z
     48c:	42 2f       	mov	r20, r18
     48e:	44 0f       	add	r20, r20
     490:	44 0f       	add	r20, r20
     492:	44 0f       	add	r20, r20
     494:	29 85       	ldd	r18, Y+9	; 0x09
     496:	3a 85       	ldd	r19, Y+10	; 0x0a
     498:	2e 5f       	subi	r18, 0xFE	; 254
     49a:	3f 4f       	sbci	r19, 0xFF	; 255
     49c:	2f 5f       	subi	r18, 0xFF	; 255
     49e:	3f 4f       	sbci	r19, 0xFF	; 255
     4a0:	f9 01       	movw	r30, r18
     4a2:	20 81       	ld	r18, Z
     4a4:	22 95       	swap	r18
     4a6:	26 95       	lsr	r18
     4a8:	27 70       	andi	r18, 0x07	; 7
     4aa:	24 0f       	add	r18, r20
     4ac:	fc 01       	movw	r30, r24
     4ae:	20 83       	st	Z, r18
     4b0:	81 ef       	ldi	r24, 0xF1	; 241
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	29 85       	ldd	r18, Y+9	; 0x09
     4b6:	3a 85       	ldd	r19, Y+10	; 0x0a
     4b8:	2e 5f       	subi	r18, 0xFE	; 254
     4ba:	3f 4f       	sbci	r19, 0xFF	; 255
     4bc:	2f 5f       	subi	r18, 0xFF	; 255
     4be:	3f 4f       	sbci	r19, 0xFF	; 255
     4c0:	f9 01       	movw	r30, r18
     4c2:	20 81       	ld	r18, Z
     4c4:	42 2f       	mov	r20, r18
     4c6:	44 0f       	add	r20, r20
     4c8:	44 0f       	add	r20, r20
     4ca:	44 0f       	add	r20, r20
     4cc:	29 85       	ldd	r18, Y+9	; 0x09
     4ce:	3a 85       	ldd	r19, Y+10	; 0x0a
     4d0:	2e 5f       	subi	r18, 0xFE	; 254
     4d2:	3f 4f       	sbci	r19, 0xFF	; 255
     4d4:	f9 01       	movw	r30, r18
     4d6:	20 81       	ld	r18, Z
     4d8:	22 95       	swap	r18
     4da:	26 95       	lsr	r18
     4dc:	27 70       	andi	r18, 0x07	; 7
     4de:	24 0f       	add	r18, r20
     4e0:	fc 01       	movw	r30, r24
     4e2:	20 83       	st	Z, r18
     4e4:	80 ef       	ldi	r24, 0xF0	; 240
     4e6:	90 e0       	ldi	r25, 0x00	; 0
     4e8:	29 85       	ldd	r18, Y+9	; 0x09
     4ea:	3a 85       	ldd	r19, Y+10	; 0x0a
     4ec:	2e 5f       	subi	r18, 0xFE	; 254
     4ee:	3f 4f       	sbci	r19, 0xFF	; 255
     4f0:	f9 01       	movw	r30, r18
     4f2:	20 81       	ld	r18, Z
     4f4:	22 0f       	add	r18, r18
     4f6:	22 0f       	add	r18, r18
     4f8:	22 0f       	add	r18, r18
     4fa:	fc 01       	movw	r30, r24
     4fc:	20 83       	st	Z, r18
     4fe:	8f ee       	ldi	r24, 0xEF	; 239
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	2f ee       	ldi	r18, 0xEF	; 239
     504:	30 e0       	ldi	r19, 0x00	; 0
     506:	f9 01       	movw	r30, r18
     508:	20 81       	ld	r18, Z
     50a:	20 61       	ori	r18, 0x10	; 16
     50c:	fc 01       	movw	r30, r24
     50e:	20 83       	st	Z, r18
     510:	30 c0       	rjmp	.+96     	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
          else              { Can_set_std_id(cmd->id.std);}
     512:	83 ef       	ldi	r24, 0xF3	; 243
     514:	90 e0       	ldi	r25, 0x00	; 0
     516:	29 85       	ldd	r18, Y+9	; 0x09
     518:	3a 85       	ldd	r19, Y+10	; 0x0a
     51a:	2e 5f       	subi	r18, 0xFE	; 254
     51c:	3f 4f       	sbci	r19, 0xFF	; 255
     51e:	2f 5f       	subi	r18, 0xFF	; 255
     520:	3f 4f       	sbci	r19, 0xFF	; 255
     522:	f9 01       	movw	r30, r18
     524:	20 81       	ld	r18, Z
     526:	42 2f       	mov	r20, r18
     528:	42 95       	swap	r20
     52a:	44 0f       	add	r20, r20
     52c:	40 7e       	andi	r20, 0xE0	; 224
     52e:	29 85       	ldd	r18, Y+9	; 0x09
     530:	3a 85       	ldd	r19, Y+10	; 0x0a
     532:	2e 5f       	subi	r18, 0xFE	; 254
     534:	3f 4f       	sbci	r19, 0xFF	; 255
     536:	f9 01       	movw	r30, r18
     538:	20 81       	ld	r18, Z
     53a:	26 95       	lsr	r18
     53c:	26 95       	lsr	r18
     53e:	26 95       	lsr	r18
     540:	24 0f       	add	r18, r20
     542:	fc 01       	movw	r30, r24
     544:	20 83       	st	Z, r18
     546:	82 ef       	ldi	r24, 0xF2	; 242
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	29 85       	ldd	r18, Y+9	; 0x09
     54c:	3a 85       	ldd	r19, Y+10	; 0x0a
     54e:	2e 5f       	subi	r18, 0xFE	; 254
     550:	3f 4f       	sbci	r19, 0xFF	; 255
     552:	f9 01       	movw	r30, r18
     554:	20 81       	ld	r18, Z
     556:	22 95       	swap	r18
     558:	22 0f       	add	r18, r18
     55a:	20 7e       	andi	r18, 0xE0	; 224
     55c:	fc 01       	movw	r30, r24
     55e:	20 83       	st	Z, r18
     560:	8f ee       	ldi	r24, 0xEF	; 239
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	2f ee       	ldi	r18, 0xEF	; 239
     566:	30 e0       	ldi	r19, 0x00	; 0
     568:	f9 01       	movw	r30, r18
     56a:	20 81       	ld	r18, Z
     56c:	2f 7e       	andi	r18, 0xEF	; 239
     56e:	fc 01       	movw	r30, r24
     570:	20 83       	st	Z, r18
          for (cpt=0;cpt<cmd->dlc;cpt++) CANMSG = *(cmd->pt_data + cpt);
     572:	19 82       	std	Y+1, r1	; 0x01
     574:	13 c0       	rjmp	.+38     	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
     576:	8a ef       	ldi	r24, 0xFA	; 250
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	29 85       	ldd	r18, Y+9	; 0x09
     57c:	3a 85       	ldd	r19, Y+10	; 0x0a
     57e:	f9 01       	movw	r30, r18
     580:	47 81       	ldd	r20, Z+7	; 0x07
     582:	50 85       	ldd	r21, Z+8	; 0x08
     584:	29 81       	ldd	r18, Y+1	; 0x01
     586:	22 2f       	mov	r18, r18
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	24 0f       	add	r18, r20
     58c:	35 1f       	adc	r19, r21
     58e:	f9 01       	movw	r30, r18
     590:	20 81       	ld	r18, Z
     592:	fc 01       	movw	r30, r24
     594:	20 83       	st	Z, r18
     596:	89 81       	ldd	r24, Y+1	; 0x01
     598:	8f 5f       	subi	r24, 0xFF	; 255
     59a:	89 83       	std	Y+1, r24	; 0x01
     59c:	89 85       	ldd	r24, Y+9	; 0x09
     59e:	9a 85       	ldd	r25, Y+10	; 0x0a
     5a0:	fc 01       	movw	r30, r24
     5a2:	96 81       	ldd	r25, Z+6	; 0x06
     5a4:	89 81       	ldd	r24, Y+1	; 0x01
     5a6:	89 17       	cp	r24, r25
     5a8:	30 f3       	brcs	.-52     	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
          if (cmd->ctrl.rtr) Can_set_rtr(); 
     5aa:	89 85       	ldd	r24, Y+9	; 0x09
     5ac:	9a 85       	ldd	r25, Y+10	; 0x0a
     5ae:	fc 01       	movw	r30, r24
     5b0:	82 85       	ldd	r24, Z+10	; 0x0a
     5b2:	88 23       	and	r24, r24
     5b4:	51 f0       	breq	.+20     	; 0x5ca <__EEPROM_REGION_LENGTH__+0x1ca>
     5b6:	80 ef       	ldi	r24, 0xF0	; 240
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	20 ef       	ldi	r18, 0xF0	; 240
     5bc:	30 e0       	ldi	r19, 0x00	; 0
     5be:	f9 01       	movw	r30, r18
     5c0:	20 81       	ld	r18, Z
     5c2:	24 60       	ori	r18, 0x04	; 4
     5c4:	fc 01       	movw	r30, r24
     5c6:	20 83       	st	Z, r18
     5c8:	09 c0       	rjmp	.+18     	; 0x5dc <__EEPROM_REGION_LENGTH__+0x1dc>
            else Can_clear_rtr();    
     5ca:	80 ef       	ldi	r24, 0xF0	; 240
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	20 ef       	ldi	r18, 0xF0	; 240
     5d0:	30 e0       	ldi	r19, 0x00	; 0
     5d2:	f9 01       	movw	r30, r18
     5d4:	20 81       	ld	r18, Z
     5d6:	2b 7f       	andi	r18, 0xFB	; 251
     5d8:	fc 01       	movw	r30, r24
     5da:	20 83       	st	Z, r18
          Can_set_dlc(cmd->dlc);
     5dc:	8f ee       	ldi	r24, 0xEF	; 239
     5de:	90 e0       	ldi	r25, 0x00	; 0
     5e0:	2f ee       	ldi	r18, 0xEF	; 239
     5e2:	30 e0       	ldi	r19, 0x00	; 0
     5e4:	f9 01       	movw	r30, r18
     5e6:	40 81       	ld	r20, Z
     5e8:	29 85       	ldd	r18, Y+9	; 0x09
     5ea:	3a 85       	ldd	r19, Y+10	; 0x0a
     5ec:	f9 01       	movw	r30, r18
     5ee:	26 81       	ldd	r18, Z+6	; 0x06
     5f0:	24 2b       	or	r18, r20
     5f2:	fc 01       	movw	r30, r24
     5f4:	20 83       	st	Z, r18
          Can_config_tx();
     5f6:	8f ee       	ldi	r24, 0xEF	; 239
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	2f ee       	ldi	r18, 0xEF	; 239
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	f9 01       	movw	r30, r18
     600:	20 81       	ld	r18, Z
     602:	2f 73       	andi	r18, 0x3F	; 63
     604:	fc 01       	movw	r30, r24
     606:	20 83       	st	Z, r18
     608:	8f ee       	ldi	r24, 0xEF	; 239
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	2f ee       	ldi	r18, 0xEF	; 239
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	f9 01       	movw	r30, r18
     612:	20 81       	ld	r18, Z
     614:	20 64       	ori	r18, 0x40	; 64
     616:	fc 01       	movw	r30, r24
     618:	20 83       	st	Z, r18
          break;
     61a:	0c 94 26 0c 	jmp	0x184c	; 0x184c <__stack+0xf4d>
        //------------      
        case CMD_TX_DATA:    
          if (cmd->ctrl.ide){ Can_set_ext_id(cmd->id.ext);}
     61e:	89 85       	ldd	r24, Y+9	; 0x09
     620:	9a 85       	ldd	r25, Y+10	; 0x0a
     622:	fc 01       	movw	r30, r24
     624:	83 85       	ldd	r24, Z+11	; 0x0b
     626:	88 23       	and	r24, r24
     628:	09 f4       	brne	.+2      	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
     62a:	69 c0       	rjmp	.+210    	; 0x6fe <__EEPROM_REGION_LENGTH__+0x2fe>
     62c:	83 ef       	ldi	r24, 0xF3	; 243
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	29 85       	ldd	r18, Y+9	; 0x09
     632:	3a 85       	ldd	r19, Y+10	; 0x0a
     634:	2e 5f       	subi	r18, 0xFE	; 254
     636:	3f 4f       	sbci	r19, 0xFF	; 255
     638:	2d 5f       	subi	r18, 0xFD	; 253
     63a:	3f 4f       	sbci	r19, 0xFF	; 255
     63c:	f9 01       	movw	r30, r18
     63e:	20 81       	ld	r18, Z
     640:	42 2f       	mov	r20, r18
     642:	44 0f       	add	r20, r20
     644:	44 0f       	add	r20, r20
     646:	44 0f       	add	r20, r20
     648:	29 85       	ldd	r18, Y+9	; 0x09
     64a:	3a 85       	ldd	r19, Y+10	; 0x0a
     64c:	2e 5f       	subi	r18, 0xFE	; 254
     64e:	3f 4f       	sbci	r19, 0xFF	; 255
     650:	2e 5f       	subi	r18, 0xFE	; 254
     652:	3f 4f       	sbci	r19, 0xFF	; 255
     654:	f9 01       	movw	r30, r18
     656:	20 81       	ld	r18, Z
     658:	22 95       	swap	r18
     65a:	26 95       	lsr	r18
     65c:	27 70       	andi	r18, 0x07	; 7
     65e:	24 0f       	add	r18, r20
     660:	fc 01       	movw	r30, r24
     662:	20 83       	st	Z, r18
     664:	82 ef       	ldi	r24, 0xF2	; 242
     666:	90 e0       	ldi	r25, 0x00	; 0
     668:	29 85       	ldd	r18, Y+9	; 0x09
     66a:	3a 85       	ldd	r19, Y+10	; 0x0a
     66c:	2e 5f       	subi	r18, 0xFE	; 254
     66e:	3f 4f       	sbci	r19, 0xFF	; 255
     670:	2e 5f       	subi	r18, 0xFE	; 254
     672:	3f 4f       	sbci	r19, 0xFF	; 255
     674:	f9 01       	movw	r30, r18
     676:	20 81       	ld	r18, Z
     678:	42 2f       	mov	r20, r18
     67a:	44 0f       	add	r20, r20
     67c:	44 0f       	add	r20, r20
     67e:	44 0f       	add	r20, r20
     680:	29 85       	ldd	r18, Y+9	; 0x09
     682:	3a 85       	ldd	r19, Y+10	; 0x0a
     684:	2e 5f       	subi	r18, 0xFE	; 254
     686:	3f 4f       	sbci	r19, 0xFF	; 255
     688:	2f 5f       	subi	r18, 0xFF	; 255
     68a:	3f 4f       	sbci	r19, 0xFF	; 255
     68c:	f9 01       	movw	r30, r18
     68e:	20 81       	ld	r18, Z
     690:	22 95       	swap	r18
     692:	26 95       	lsr	r18
     694:	27 70       	andi	r18, 0x07	; 7
     696:	24 0f       	add	r18, r20
     698:	fc 01       	movw	r30, r24
     69a:	20 83       	st	Z, r18
     69c:	81 ef       	ldi	r24, 0xF1	; 241
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	29 85       	ldd	r18, Y+9	; 0x09
     6a2:	3a 85       	ldd	r19, Y+10	; 0x0a
     6a4:	2e 5f       	subi	r18, 0xFE	; 254
     6a6:	3f 4f       	sbci	r19, 0xFF	; 255
     6a8:	2f 5f       	subi	r18, 0xFF	; 255
     6aa:	3f 4f       	sbci	r19, 0xFF	; 255
     6ac:	f9 01       	movw	r30, r18
     6ae:	20 81       	ld	r18, Z
     6b0:	42 2f       	mov	r20, r18
     6b2:	44 0f       	add	r20, r20
     6b4:	44 0f       	add	r20, r20
     6b6:	44 0f       	add	r20, r20
     6b8:	29 85       	ldd	r18, Y+9	; 0x09
     6ba:	3a 85       	ldd	r19, Y+10	; 0x0a
     6bc:	2e 5f       	subi	r18, 0xFE	; 254
     6be:	3f 4f       	sbci	r19, 0xFF	; 255
     6c0:	f9 01       	movw	r30, r18
     6c2:	20 81       	ld	r18, Z
     6c4:	22 95       	swap	r18
     6c6:	26 95       	lsr	r18
     6c8:	27 70       	andi	r18, 0x07	; 7
     6ca:	24 0f       	add	r18, r20
     6cc:	fc 01       	movw	r30, r24
     6ce:	20 83       	st	Z, r18
     6d0:	80 ef       	ldi	r24, 0xF0	; 240
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	29 85       	ldd	r18, Y+9	; 0x09
     6d6:	3a 85       	ldd	r19, Y+10	; 0x0a
     6d8:	2e 5f       	subi	r18, 0xFE	; 254
     6da:	3f 4f       	sbci	r19, 0xFF	; 255
     6dc:	f9 01       	movw	r30, r18
     6de:	20 81       	ld	r18, Z
     6e0:	22 0f       	add	r18, r18
     6e2:	22 0f       	add	r18, r18
     6e4:	22 0f       	add	r18, r18
     6e6:	fc 01       	movw	r30, r24
     6e8:	20 83       	st	Z, r18
     6ea:	8f ee       	ldi	r24, 0xEF	; 239
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	2f ee       	ldi	r18, 0xEF	; 239
     6f0:	30 e0       	ldi	r19, 0x00	; 0
     6f2:	f9 01       	movw	r30, r18
     6f4:	20 81       	ld	r18, Z
     6f6:	20 61       	ori	r18, 0x10	; 16
     6f8:	fc 01       	movw	r30, r24
     6fa:	20 83       	st	Z, r18
     6fc:	30 c0       	rjmp	.+96     	; 0x75e <__EEPROM_REGION_LENGTH__+0x35e>
          else              { Can_set_std_id(cmd->id.std);}
     6fe:	83 ef       	ldi	r24, 0xF3	; 243
     700:	90 e0       	ldi	r25, 0x00	; 0
     702:	29 85       	ldd	r18, Y+9	; 0x09
     704:	3a 85       	ldd	r19, Y+10	; 0x0a
     706:	2e 5f       	subi	r18, 0xFE	; 254
     708:	3f 4f       	sbci	r19, 0xFF	; 255
     70a:	2f 5f       	subi	r18, 0xFF	; 255
     70c:	3f 4f       	sbci	r19, 0xFF	; 255
     70e:	f9 01       	movw	r30, r18
     710:	20 81       	ld	r18, Z
     712:	42 2f       	mov	r20, r18
     714:	42 95       	swap	r20
     716:	44 0f       	add	r20, r20
     718:	40 7e       	andi	r20, 0xE0	; 224
     71a:	29 85       	ldd	r18, Y+9	; 0x09
     71c:	3a 85       	ldd	r19, Y+10	; 0x0a
     71e:	2e 5f       	subi	r18, 0xFE	; 254
     720:	3f 4f       	sbci	r19, 0xFF	; 255
     722:	f9 01       	movw	r30, r18
     724:	20 81       	ld	r18, Z
     726:	26 95       	lsr	r18
     728:	26 95       	lsr	r18
     72a:	26 95       	lsr	r18
     72c:	24 0f       	add	r18, r20
     72e:	fc 01       	movw	r30, r24
     730:	20 83       	st	Z, r18
     732:	82 ef       	ldi	r24, 0xF2	; 242
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	29 85       	ldd	r18, Y+9	; 0x09
     738:	3a 85       	ldd	r19, Y+10	; 0x0a
     73a:	2e 5f       	subi	r18, 0xFE	; 254
     73c:	3f 4f       	sbci	r19, 0xFF	; 255
     73e:	f9 01       	movw	r30, r18
     740:	20 81       	ld	r18, Z
     742:	22 95       	swap	r18
     744:	22 0f       	add	r18, r18
     746:	20 7e       	andi	r18, 0xE0	; 224
     748:	fc 01       	movw	r30, r24
     74a:	20 83       	st	Z, r18
     74c:	8f ee       	ldi	r24, 0xEF	; 239
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	2f ee       	ldi	r18, 0xEF	; 239
     752:	30 e0       	ldi	r19, 0x00	; 0
     754:	f9 01       	movw	r30, r18
     756:	20 81       	ld	r18, Z
     758:	2f 7e       	andi	r18, 0xEF	; 239
     75a:	fc 01       	movw	r30, r24
     75c:	20 83       	st	Z, r18
          for (cpt=0;cpt<cmd->dlc;cpt++) CANMSG = *(cmd->pt_data + cpt);
     75e:	19 82       	std	Y+1, r1	; 0x01
     760:	13 c0       	rjmp	.+38     	; 0x788 <__EEPROM_REGION_LENGTH__+0x388>
     762:	8a ef       	ldi	r24, 0xFA	; 250
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	29 85       	ldd	r18, Y+9	; 0x09
     768:	3a 85       	ldd	r19, Y+10	; 0x0a
     76a:	f9 01       	movw	r30, r18
     76c:	47 81       	ldd	r20, Z+7	; 0x07
     76e:	50 85       	ldd	r21, Z+8	; 0x08
     770:	29 81       	ldd	r18, Y+1	; 0x01
     772:	22 2f       	mov	r18, r18
     774:	30 e0       	ldi	r19, 0x00	; 0
     776:	24 0f       	add	r18, r20
     778:	35 1f       	adc	r19, r21
     77a:	f9 01       	movw	r30, r18
     77c:	20 81       	ld	r18, Z
     77e:	fc 01       	movw	r30, r24
     780:	20 83       	st	Z, r18
     782:	89 81       	ldd	r24, Y+1	; 0x01
     784:	8f 5f       	subi	r24, 0xFF	; 255
     786:	89 83       	std	Y+1, r24	; 0x01
     788:	89 85       	ldd	r24, Y+9	; 0x09
     78a:	9a 85       	ldd	r25, Y+10	; 0x0a
     78c:	fc 01       	movw	r30, r24
     78e:	96 81       	ldd	r25, Z+6	; 0x06
     790:	89 81       	ldd	r24, Y+1	; 0x01
     792:	89 17       	cp	r24, r25
     794:	30 f3       	brcs	.-52     	; 0x762 <__EEPROM_REGION_LENGTH__+0x362>
          cmd->ctrl.rtr=0; Can_clear_rtr();
     796:	89 85       	ldd	r24, Y+9	; 0x09
     798:	9a 85       	ldd	r25, Y+10	; 0x0a
     79a:	fc 01       	movw	r30, r24
     79c:	12 86       	std	Z+10, r1	; 0x0a
     79e:	80 ef       	ldi	r24, 0xF0	; 240
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	20 ef       	ldi	r18, 0xF0	; 240
     7a4:	30 e0       	ldi	r19, 0x00	; 0
     7a6:	f9 01       	movw	r30, r18
     7a8:	20 81       	ld	r18, Z
     7aa:	2b 7f       	andi	r18, 0xFB	; 251
     7ac:	fc 01       	movw	r30, r24
     7ae:	20 83       	st	Z, r18
          Can_set_dlc(cmd->dlc);
     7b0:	8f ee       	ldi	r24, 0xEF	; 239
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	2f ee       	ldi	r18, 0xEF	; 239
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	f9 01       	movw	r30, r18
     7ba:	40 81       	ld	r20, Z
     7bc:	29 85       	ldd	r18, Y+9	; 0x09
     7be:	3a 85       	ldd	r19, Y+10	; 0x0a
     7c0:	f9 01       	movw	r30, r18
     7c2:	26 81       	ldd	r18, Z+6	; 0x06
     7c4:	24 2b       	or	r18, r20
     7c6:	fc 01       	movw	r30, r24
     7c8:	20 83       	st	Z, r18
          Can_config_tx();
     7ca:	8f ee       	ldi	r24, 0xEF	; 239
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	2f ee       	ldi	r18, 0xEF	; 239
     7d0:	30 e0       	ldi	r19, 0x00	; 0
     7d2:	f9 01       	movw	r30, r18
     7d4:	20 81       	ld	r18, Z
     7d6:	2f 73       	andi	r18, 0x3F	; 63
     7d8:	fc 01       	movw	r30, r24
     7da:	20 83       	st	Z, r18
     7dc:	8f ee       	ldi	r24, 0xEF	; 239
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	2f ee       	ldi	r18, 0xEF	; 239
     7e2:	30 e0       	ldi	r19, 0x00	; 0
     7e4:	f9 01       	movw	r30, r18
     7e6:	20 81       	ld	r18, Z
     7e8:	20 64       	ori	r18, 0x40	; 64
     7ea:	fc 01       	movw	r30, r24
     7ec:	20 83       	st	Z, r18
          break;
     7ee:	0c 94 26 0c 	jmp	0x184c	; 0x184c <__stack+0xf4d>
        //------------      
        case CMD_TX_REMOTE:       
          if (cmd->ctrl.ide){ Can_set_ext_id(cmd->id.ext);}
     7f2:	89 85       	ldd	r24, Y+9	; 0x09
     7f4:	9a 85       	ldd	r25, Y+10	; 0x0a
     7f6:	fc 01       	movw	r30, r24
     7f8:	83 85       	ldd	r24, Z+11	; 0x0b
     7fa:	88 23       	and	r24, r24
     7fc:	09 f4       	brne	.+2      	; 0x800 <__DATA_REGION_LENGTH__>
     7fe:	69 c0       	rjmp	.+210    	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
     800:	83 ef       	ldi	r24, 0xF3	; 243
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	29 85       	ldd	r18, Y+9	; 0x09
     806:	3a 85       	ldd	r19, Y+10	; 0x0a
     808:	2e 5f       	subi	r18, 0xFE	; 254
     80a:	3f 4f       	sbci	r19, 0xFF	; 255
     80c:	2d 5f       	subi	r18, 0xFD	; 253
     80e:	3f 4f       	sbci	r19, 0xFF	; 255
     810:	f9 01       	movw	r30, r18
     812:	20 81       	ld	r18, Z
     814:	42 2f       	mov	r20, r18
     816:	44 0f       	add	r20, r20
     818:	44 0f       	add	r20, r20
     81a:	44 0f       	add	r20, r20
     81c:	29 85       	ldd	r18, Y+9	; 0x09
     81e:	3a 85       	ldd	r19, Y+10	; 0x0a
     820:	2e 5f       	subi	r18, 0xFE	; 254
     822:	3f 4f       	sbci	r19, 0xFF	; 255
     824:	2e 5f       	subi	r18, 0xFE	; 254
     826:	3f 4f       	sbci	r19, 0xFF	; 255
     828:	f9 01       	movw	r30, r18
     82a:	20 81       	ld	r18, Z
     82c:	22 95       	swap	r18
     82e:	26 95       	lsr	r18
     830:	27 70       	andi	r18, 0x07	; 7
     832:	24 0f       	add	r18, r20
     834:	fc 01       	movw	r30, r24
     836:	20 83       	st	Z, r18
     838:	82 ef       	ldi	r24, 0xF2	; 242
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	29 85       	ldd	r18, Y+9	; 0x09
     83e:	3a 85       	ldd	r19, Y+10	; 0x0a
     840:	2e 5f       	subi	r18, 0xFE	; 254
     842:	3f 4f       	sbci	r19, 0xFF	; 255
     844:	2e 5f       	subi	r18, 0xFE	; 254
     846:	3f 4f       	sbci	r19, 0xFF	; 255
     848:	f9 01       	movw	r30, r18
     84a:	20 81       	ld	r18, Z
     84c:	42 2f       	mov	r20, r18
     84e:	44 0f       	add	r20, r20
     850:	44 0f       	add	r20, r20
     852:	44 0f       	add	r20, r20
     854:	29 85       	ldd	r18, Y+9	; 0x09
     856:	3a 85       	ldd	r19, Y+10	; 0x0a
     858:	2e 5f       	subi	r18, 0xFE	; 254
     85a:	3f 4f       	sbci	r19, 0xFF	; 255
     85c:	2f 5f       	subi	r18, 0xFF	; 255
     85e:	3f 4f       	sbci	r19, 0xFF	; 255
     860:	f9 01       	movw	r30, r18
     862:	20 81       	ld	r18, Z
     864:	22 95       	swap	r18
     866:	26 95       	lsr	r18
     868:	27 70       	andi	r18, 0x07	; 7
     86a:	24 0f       	add	r18, r20
     86c:	fc 01       	movw	r30, r24
     86e:	20 83       	st	Z, r18
     870:	81 ef       	ldi	r24, 0xF1	; 241
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	29 85       	ldd	r18, Y+9	; 0x09
     876:	3a 85       	ldd	r19, Y+10	; 0x0a
     878:	2e 5f       	subi	r18, 0xFE	; 254
     87a:	3f 4f       	sbci	r19, 0xFF	; 255
     87c:	2f 5f       	subi	r18, 0xFF	; 255
     87e:	3f 4f       	sbci	r19, 0xFF	; 255
     880:	f9 01       	movw	r30, r18
     882:	20 81       	ld	r18, Z
     884:	42 2f       	mov	r20, r18
     886:	44 0f       	add	r20, r20
     888:	44 0f       	add	r20, r20
     88a:	44 0f       	add	r20, r20
     88c:	29 85       	ldd	r18, Y+9	; 0x09
     88e:	3a 85       	ldd	r19, Y+10	; 0x0a
     890:	2e 5f       	subi	r18, 0xFE	; 254
     892:	3f 4f       	sbci	r19, 0xFF	; 255
     894:	f9 01       	movw	r30, r18
     896:	20 81       	ld	r18, Z
     898:	22 95       	swap	r18
     89a:	26 95       	lsr	r18
     89c:	27 70       	andi	r18, 0x07	; 7
     89e:	24 0f       	add	r18, r20
     8a0:	fc 01       	movw	r30, r24
     8a2:	20 83       	st	Z, r18
     8a4:	80 ef       	ldi	r24, 0xF0	; 240
     8a6:	90 e0       	ldi	r25, 0x00	; 0
     8a8:	29 85       	ldd	r18, Y+9	; 0x09
     8aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     8ac:	2e 5f       	subi	r18, 0xFE	; 254
     8ae:	3f 4f       	sbci	r19, 0xFF	; 255
     8b0:	f9 01       	movw	r30, r18
     8b2:	20 81       	ld	r18, Z
     8b4:	22 0f       	add	r18, r18
     8b6:	22 0f       	add	r18, r18
     8b8:	22 0f       	add	r18, r18
     8ba:	fc 01       	movw	r30, r24
     8bc:	20 83       	st	Z, r18
     8be:	8f ee       	ldi	r24, 0xEF	; 239
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	2f ee       	ldi	r18, 0xEF	; 239
     8c4:	30 e0       	ldi	r19, 0x00	; 0
     8c6:	f9 01       	movw	r30, r18
     8c8:	20 81       	ld	r18, Z
     8ca:	20 61       	ori	r18, 0x10	; 16
     8cc:	fc 01       	movw	r30, r24
     8ce:	20 83       	st	Z, r18
     8d0:	30 c0       	rjmp	.+96     	; 0x932 <__stack+0x33>
          else              { Can_set_std_id(cmd->id.std);}
     8d2:	83 ef       	ldi	r24, 0xF3	; 243
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	29 85       	ldd	r18, Y+9	; 0x09
     8d8:	3a 85       	ldd	r19, Y+10	; 0x0a
     8da:	2e 5f       	subi	r18, 0xFE	; 254
     8dc:	3f 4f       	sbci	r19, 0xFF	; 255
     8de:	2f 5f       	subi	r18, 0xFF	; 255
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	f9 01       	movw	r30, r18
     8e4:	20 81       	ld	r18, Z
     8e6:	42 2f       	mov	r20, r18
     8e8:	42 95       	swap	r20
     8ea:	44 0f       	add	r20, r20
     8ec:	40 7e       	andi	r20, 0xE0	; 224
     8ee:	29 85       	ldd	r18, Y+9	; 0x09
     8f0:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f2:	2e 5f       	subi	r18, 0xFE	; 254
     8f4:	3f 4f       	sbci	r19, 0xFF	; 255
     8f6:	f9 01       	movw	r30, r18
     8f8:	20 81       	ld	r18, Z
     8fa:	26 95       	lsr	r18
     8fc:	26 95       	lsr	r18
     8fe:	26 95       	lsr	r18
     900:	24 0f       	add	r18, r20
     902:	fc 01       	movw	r30, r24
     904:	20 83       	st	Z, r18
     906:	82 ef       	ldi	r24, 0xF2	; 242
     908:	90 e0       	ldi	r25, 0x00	; 0
     90a:	29 85       	ldd	r18, Y+9	; 0x09
     90c:	3a 85       	ldd	r19, Y+10	; 0x0a
     90e:	2e 5f       	subi	r18, 0xFE	; 254
     910:	3f 4f       	sbci	r19, 0xFF	; 255
     912:	f9 01       	movw	r30, r18
     914:	20 81       	ld	r18, Z
     916:	22 95       	swap	r18
     918:	22 0f       	add	r18, r18
     91a:	20 7e       	andi	r18, 0xE0	; 224
     91c:	fc 01       	movw	r30, r24
     91e:	20 83       	st	Z, r18
     920:	8f ee       	ldi	r24, 0xEF	; 239
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	2f ee       	ldi	r18, 0xEF	; 239
     926:	30 e0       	ldi	r19, 0x00	; 0
     928:	f9 01       	movw	r30, r18
     92a:	20 81       	ld	r18, Z
     92c:	2f 7e       	andi	r18, 0xEF	; 239
     92e:	fc 01       	movw	r30, r24
     930:	20 83       	st	Z, r18
          cmd->ctrl.rtr=1; Can_set_rtr();
     932:	89 85       	ldd	r24, Y+9	; 0x09
     934:	9a 85       	ldd	r25, Y+10	; 0x0a
     936:	21 e0       	ldi	r18, 0x01	; 1
     938:	fc 01       	movw	r30, r24
     93a:	22 87       	std	Z+10, r18	; 0x0a
     93c:	80 ef       	ldi	r24, 0xF0	; 240
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	20 ef       	ldi	r18, 0xF0	; 240
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	f9 01       	movw	r30, r18
     946:	20 81       	ld	r18, Z
     948:	24 60       	ori	r18, 0x04	; 4
     94a:	fc 01       	movw	r30, r24
     94c:	20 83       	st	Z, r18
          Can_set_dlc(cmd->dlc);
     94e:	8f ee       	ldi	r24, 0xEF	; 239
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	2f ee       	ldi	r18, 0xEF	; 239
     954:	30 e0       	ldi	r19, 0x00	; 0
     956:	f9 01       	movw	r30, r18
     958:	40 81       	ld	r20, Z
     95a:	29 85       	ldd	r18, Y+9	; 0x09
     95c:	3a 85       	ldd	r19, Y+10	; 0x0a
     95e:	f9 01       	movw	r30, r18
     960:	26 81       	ldd	r18, Z+6	; 0x06
     962:	24 2b       	or	r18, r20
     964:	fc 01       	movw	r30, r24
     966:	20 83       	st	Z, r18
          Can_config_tx();
     968:	8f ee       	ldi	r24, 0xEF	; 239
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	2f ee       	ldi	r18, 0xEF	; 239
     96e:	30 e0       	ldi	r19, 0x00	; 0
     970:	f9 01       	movw	r30, r18
     972:	20 81       	ld	r18, Z
     974:	2f 73       	andi	r18, 0x3F	; 63
     976:	fc 01       	movw	r30, r24
     978:	20 83       	st	Z, r18
     97a:	8f ee       	ldi	r24, 0xEF	; 239
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	2f ee       	ldi	r18, 0xEF	; 239
     980:	30 e0       	ldi	r19, 0x00	; 0
     982:	f9 01       	movw	r30, r18
     984:	20 81       	ld	r18, Z
     986:	20 64       	ori	r18, 0x40	; 64
     988:	fc 01       	movw	r30, r24
     98a:	20 83       	st	Z, r18
          break;
     98c:	5f c7       	rjmp	.+3774   	; 0x184c <__stack+0xf4d>
        //------------      
        case CMD_RX:
          u32_temp=0; Can_set_ext_msk(u32_temp);
     98e:	1d 82       	std	Y+5, r1	; 0x05
     990:	1e 82       	std	Y+6, r1	; 0x06
     992:	1f 82       	std	Y+7, r1	; 0x07
     994:	18 86       	std	Y+8, r1	; 0x08
     996:	27 ef       	ldi	r18, 0xF7	; 247
     998:	30 e0       	ldi	r19, 0x00	; 0
     99a:	ce 01       	movw	r24, r28
     99c:	05 96       	adiw	r24, 0x05	; 5
     99e:	03 96       	adiw	r24, 0x03	; 3
     9a0:	fc 01       	movw	r30, r24
     9a2:	80 81       	ld	r24, Z
     9a4:	48 2f       	mov	r20, r24
     9a6:	44 0f       	add	r20, r20
     9a8:	44 0f       	add	r20, r20
     9aa:	44 0f       	add	r20, r20
     9ac:	ce 01       	movw	r24, r28
     9ae:	05 96       	adiw	r24, 0x05	; 5
     9b0:	02 96       	adiw	r24, 0x02	; 2
     9b2:	fc 01       	movw	r30, r24
     9b4:	80 81       	ld	r24, Z
     9b6:	82 95       	swap	r24
     9b8:	86 95       	lsr	r24
     9ba:	87 70       	andi	r24, 0x07	; 7
     9bc:	84 0f       	add	r24, r20
     9be:	f9 01       	movw	r30, r18
     9c0:	80 83       	st	Z, r24
     9c2:	26 ef       	ldi	r18, 0xF6	; 246
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	ce 01       	movw	r24, r28
     9c8:	05 96       	adiw	r24, 0x05	; 5
     9ca:	02 96       	adiw	r24, 0x02	; 2
     9cc:	fc 01       	movw	r30, r24
     9ce:	80 81       	ld	r24, Z
     9d0:	48 2f       	mov	r20, r24
     9d2:	44 0f       	add	r20, r20
     9d4:	44 0f       	add	r20, r20
     9d6:	44 0f       	add	r20, r20
     9d8:	ce 01       	movw	r24, r28
     9da:	05 96       	adiw	r24, 0x05	; 5
     9dc:	01 96       	adiw	r24, 0x01	; 1
     9de:	fc 01       	movw	r30, r24
     9e0:	80 81       	ld	r24, Z
     9e2:	82 95       	swap	r24
     9e4:	86 95       	lsr	r24
     9e6:	87 70       	andi	r24, 0x07	; 7
     9e8:	84 0f       	add	r24, r20
     9ea:	f9 01       	movw	r30, r18
     9ec:	80 83       	st	Z, r24
     9ee:	25 ef       	ldi	r18, 0xF5	; 245
     9f0:	30 e0       	ldi	r19, 0x00	; 0
     9f2:	ce 01       	movw	r24, r28
     9f4:	05 96       	adiw	r24, 0x05	; 5
     9f6:	01 96       	adiw	r24, 0x01	; 1
     9f8:	fc 01       	movw	r30, r24
     9fa:	80 81       	ld	r24, Z
     9fc:	48 2f       	mov	r20, r24
     9fe:	44 0f       	add	r20, r20
     a00:	44 0f       	add	r20, r20
     a02:	44 0f       	add	r20, r20
     a04:	ce 01       	movw	r24, r28
     a06:	05 96       	adiw	r24, 0x05	; 5
     a08:	fc 01       	movw	r30, r24
     a0a:	80 81       	ld	r24, Z
     a0c:	82 95       	swap	r24
     a0e:	86 95       	lsr	r24
     a10:	87 70       	andi	r24, 0x07	; 7
     a12:	84 0f       	add	r24, r20
     a14:	f9 01       	movw	r30, r18
     a16:	80 83       	st	Z, r24
     a18:	84 ef       	ldi	r24, 0xF4	; 244
     a1a:	90 e0       	ldi	r25, 0x00	; 0
     a1c:	9e 01       	movw	r18, r28
     a1e:	2b 5f       	subi	r18, 0xFB	; 251
     a20:	3f 4f       	sbci	r19, 0xFF	; 255
     a22:	f9 01       	movw	r30, r18
     a24:	20 81       	ld	r18, Z
     a26:	22 0f       	add	r18, r18
     a28:	22 0f       	add	r18, r18
     a2a:	22 0f       	add	r18, r18
     a2c:	fc 01       	movw	r30, r24
     a2e:	20 83       	st	Z, r18
          Can_set_dlc(cmd->dlc);
     a30:	8f ee       	ldi	r24, 0xEF	; 239
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	2f ee       	ldi	r18, 0xEF	; 239
     a36:	30 e0       	ldi	r19, 0x00	; 0
     a38:	f9 01       	movw	r30, r18
     a3a:	40 81       	ld	r20, Z
     a3c:	29 85       	ldd	r18, Y+9	; 0x09
     a3e:	3a 85       	ldd	r19, Y+10	; 0x0a
     a40:	f9 01       	movw	r30, r18
     a42:	26 81       	ldd	r18, Z+6	; 0x06
     a44:	24 2b       	or	r18, r20
     a46:	fc 01       	movw	r30, r24
     a48:	20 83       	st	Z, r18
          Can_clear_rtrmsk();
     a4a:	84 ef       	ldi	r24, 0xF4	; 244
     a4c:	90 e0       	ldi	r25, 0x00	; 0
     a4e:	24 ef       	ldi	r18, 0xF4	; 244
     a50:	30 e0       	ldi	r19, 0x00	; 0
     a52:	f9 01       	movw	r30, r18
     a54:	20 81       	ld	r18, Z
     a56:	2b 7f       	andi	r18, 0xFB	; 251
     a58:	fc 01       	movw	r30, r24
     a5a:	20 83       	st	Z, r18
          Can_clear_idemsk();
     a5c:	84 ef       	ldi	r24, 0xF4	; 244
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	24 ef       	ldi	r18, 0xF4	; 244
     a62:	30 e0       	ldi	r19, 0x00	; 0
     a64:	f9 01       	movw	r30, r18
     a66:	20 81       	ld	r18, Z
     a68:	2e 7f       	andi	r18, 0xFE	; 254
     a6a:	fc 01       	movw	r30, r24
     a6c:	20 83       	st	Z, r18
          Can_config_rx();       
     a6e:	8f ee       	ldi	r24, 0xEF	; 239
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	2f ee       	ldi	r18, 0xEF	; 239
     a74:	30 e0       	ldi	r19, 0x00	; 0
     a76:	f9 01       	movw	r30, r18
     a78:	20 81       	ld	r18, Z
     a7a:	2f 73       	andi	r18, 0x3F	; 63
     a7c:	fc 01       	movw	r30, r24
     a7e:	20 83       	st	Z, r18
     a80:	8f ee       	ldi	r24, 0xEF	; 239
     a82:	90 e0       	ldi	r25, 0x00	; 0
     a84:	2f ee       	ldi	r18, 0xEF	; 239
     a86:	30 e0       	ldi	r19, 0x00	; 0
     a88:	f9 01       	movw	r30, r18
     a8a:	20 81       	ld	r18, Z
     a8c:	20 68       	ori	r18, 0x80	; 128
     a8e:	fc 01       	movw	r30, r24
     a90:	20 83       	st	Z, r18
          break;
     a92:	dc c6       	rjmp	.+3512   	; 0x184c <__stack+0xf4d>
        //------------      
        case CMD_RX_DATA:
          u32_temp=0; Can_set_ext_msk(u32_temp);
     a94:	1d 82       	std	Y+5, r1	; 0x05
     a96:	1e 82       	std	Y+6, r1	; 0x06
     a98:	1f 82       	std	Y+7, r1	; 0x07
     a9a:	18 86       	std	Y+8, r1	; 0x08
     a9c:	27 ef       	ldi	r18, 0xF7	; 247
     a9e:	30 e0       	ldi	r19, 0x00	; 0
     aa0:	ce 01       	movw	r24, r28
     aa2:	05 96       	adiw	r24, 0x05	; 5
     aa4:	03 96       	adiw	r24, 0x03	; 3
     aa6:	fc 01       	movw	r30, r24
     aa8:	80 81       	ld	r24, Z
     aaa:	48 2f       	mov	r20, r24
     aac:	44 0f       	add	r20, r20
     aae:	44 0f       	add	r20, r20
     ab0:	44 0f       	add	r20, r20
     ab2:	ce 01       	movw	r24, r28
     ab4:	05 96       	adiw	r24, 0x05	; 5
     ab6:	02 96       	adiw	r24, 0x02	; 2
     ab8:	fc 01       	movw	r30, r24
     aba:	80 81       	ld	r24, Z
     abc:	82 95       	swap	r24
     abe:	86 95       	lsr	r24
     ac0:	87 70       	andi	r24, 0x07	; 7
     ac2:	84 0f       	add	r24, r20
     ac4:	f9 01       	movw	r30, r18
     ac6:	80 83       	st	Z, r24
     ac8:	26 ef       	ldi	r18, 0xF6	; 246
     aca:	30 e0       	ldi	r19, 0x00	; 0
     acc:	ce 01       	movw	r24, r28
     ace:	05 96       	adiw	r24, 0x05	; 5
     ad0:	02 96       	adiw	r24, 0x02	; 2
     ad2:	fc 01       	movw	r30, r24
     ad4:	80 81       	ld	r24, Z
     ad6:	48 2f       	mov	r20, r24
     ad8:	44 0f       	add	r20, r20
     ada:	44 0f       	add	r20, r20
     adc:	44 0f       	add	r20, r20
     ade:	ce 01       	movw	r24, r28
     ae0:	05 96       	adiw	r24, 0x05	; 5
     ae2:	01 96       	adiw	r24, 0x01	; 1
     ae4:	fc 01       	movw	r30, r24
     ae6:	80 81       	ld	r24, Z
     ae8:	82 95       	swap	r24
     aea:	86 95       	lsr	r24
     aec:	87 70       	andi	r24, 0x07	; 7
     aee:	84 0f       	add	r24, r20
     af0:	f9 01       	movw	r30, r18
     af2:	80 83       	st	Z, r24
     af4:	25 ef       	ldi	r18, 0xF5	; 245
     af6:	30 e0       	ldi	r19, 0x00	; 0
     af8:	ce 01       	movw	r24, r28
     afa:	05 96       	adiw	r24, 0x05	; 5
     afc:	01 96       	adiw	r24, 0x01	; 1
     afe:	fc 01       	movw	r30, r24
     b00:	80 81       	ld	r24, Z
     b02:	48 2f       	mov	r20, r24
     b04:	44 0f       	add	r20, r20
     b06:	44 0f       	add	r20, r20
     b08:	44 0f       	add	r20, r20
     b0a:	ce 01       	movw	r24, r28
     b0c:	05 96       	adiw	r24, 0x05	; 5
     b0e:	fc 01       	movw	r30, r24
     b10:	80 81       	ld	r24, Z
     b12:	82 95       	swap	r24
     b14:	86 95       	lsr	r24
     b16:	87 70       	andi	r24, 0x07	; 7
     b18:	84 0f       	add	r24, r20
     b1a:	f9 01       	movw	r30, r18
     b1c:	80 83       	st	Z, r24
     b1e:	84 ef       	ldi	r24, 0xF4	; 244
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	9e 01       	movw	r18, r28
     b24:	2b 5f       	subi	r18, 0xFB	; 251
     b26:	3f 4f       	sbci	r19, 0xFF	; 255
     b28:	f9 01       	movw	r30, r18
     b2a:	20 81       	ld	r18, Z
     b2c:	22 0f       	add	r18, r18
     b2e:	22 0f       	add	r18, r18
     b30:	22 0f       	add	r18, r18
     b32:	fc 01       	movw	r30, r24
     b34:	20 83       	st	Z, r18
          Can_set_dlc(cmd->dlc);
     b36:	8f ee       	ldi	r24, 0xEF	; 239
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	2f ee       	ldi	r18, 0xEF	; 239
     b3c:	30 e0       	ldi	r19, 0x00	; 0
     b3e:	f9 01       	movw	r30, r18
     b40:	40 81       	ld	r20, Z
     b42:	29 85       	ldd	r18, Y+9	; 0x09
     b44:	3a 85       	ldd	r19, Y+10	; 0x0a
     b46:	f9 01       	movw	r30, r18
     b48:	26 81       	ldd	r18, Z+6	; 0x06
     b4a:	24 2b       	or	r18, r20
     b4c:	fc 01       	movw	r30, r24
     b4e:	20 83       	st	Z, r18
          cmd->ctrl.rtr=0; Can_set_rtrmsk(); Can_clear_rtr();
     b50:	89 85       	ldd	r24, Y+9	; 0x09
     b52:	9a 85       	ldd	r25, Y+10	; 0x0a
     b54:	fc 01       	movw	r30, r24
     b56:	12 86       	std	Z+10, r1	; 0x0a
     b58:	84 ef       	ldi	r24, 0xF4	; 244
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	24 ef       	ldi	r18, 0xF4	; 244
     b5e:	30 e0       	ldi	r19, 0x00	; 0
     b60:	f9 01       	movw	r30, r18
     b62:	20 81       	ld	r18, Z
     b64:	24 60       	ori	r18, 0x04	; 4
     b66:	fc 01       	movw	r30, r24
     b68:	20 83       	st	Z, r18
     b6a:	80 ef       	ldi	r24, 0xF0	; 240
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	20 ef       	ldi	r18, 0xF0	; 240
     b70:	30 e0       	ldi	r19, 0x00	; 0
     b72:	f9 01       	movw	r30, r18
     b74:	20 81       	ld	r18, Z
     b76:	2b 7f       	andi	r18, 0xFB	; 251
     b78:	fc 01       	movw	r30, r24
     b7a:	20 83       	st	Z, r18
          Can_clear_idemsk();
     b7c:	84 ef       	ldi	r24, 0xF4	; 244
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	24 ef       	ldi	r18, 0xF4	; 244
     b82:	30 e0       	ldi	r19, 0x00	; 0
     b84:	f9 01       	movw	r30, r18
     b86:	20 81       	ld	r18, Z
     b88:	2e 7f       	andi	r18, 0xFE	; 254
     b8a:	fc 01       	movw	r30, r24
     b8c:	20 83       	st	Z, r18
          Can_config_rx();       
     b8e:	8f ee       	ldi	r24, 0xEF	; 239
     b90:	90 e0       	ldi	r25, 0x00	; 0
     b92:	2f ee       	ldi	r18, 0xEF	; 239
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	f9 01       	movw	r30, r18
     b98:	20 81       	ld	r18, Z
     b9a:	2f 73       	andi	r18, 0x3F	; 63
     b9c:	fc 01       	movw	r30, r24
     b9e:	20 83       	st	Z, r18
     ba0:	8f ee       	ldi	r24, 0xEF	; 239
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	2f ee       	ldi	r18, 0xEF	; 239
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	f9 01       	movw	r30, r18
     baa:	20 81       	ld	r18, Z
     bac:	20 68       	ori	r18, 0x80	; 128
     bae:	fc 01       	movw	r30, r24
     bb0:	20 83       	st	Z, r18
          break;
     bb2:	4c c6       	rjmp	.+3224   	; 0x184c <__stack+0xf4d>
        //------------      
        case CMD_RX_REMOTE:
          u32_temp=0; Can_set_ext_msk(u32_temp);
     bb4:	1d 82       	std	Y+5, r1	; 0x05
     bb6:	1e 82       	std	Y+6, r1	; 0x06
     bb8:	1f 82       	std	Y+7, r1	; 0x07
     bba:	18 86       	std	Y+8, r1	; 0x08
     bbc:	27 ef       	ldi	r18, 0xF7	; 247
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	ce 01       	movw	r24, r28
     bc2:	05 96       	adiw	r24, 0x05	; 5
     bc4:	03 96       	adiw	r24, 0x03	; 3
     bc6:	fc 01       	movw	r30, r24
     bc8:	80 81       	ld	r24, Z
     bca:	48 2f       	mov	r20, r24
     bcc:	44 0f       	add	r20, r20
     bce:	44 0f       	add	r20, r20
     bd0:	44 0f       	add	r20, r20
     bd2:	ce 01       	movw	r24, r28
     bd4:	05 96       	adiw	r24, 0x05	; 5
     bd6:	02 96       	adiw	r24, 0x02	; 2
     bd8:	fc 01       	movw	r30, r24
     bda:	80 81       	ld	r24, Z
     bdc:	82 95       	swap	r24
     bde:	86 95       	lsr	r24
     be0:	87 70       	andi	r24, 0x07	; 7
     be2:	84 0f       	add	r24, r20
     be4:	f9 01       	movw	r30, r18
     be6:	80 83       	st	Z, r24
     be8:	26 ef       	ldi	r18, 0xF6	; 246
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	ce 01       	movw	r24, r28
     bee:	05 96       	adiw	r24, 0x05	; 5
     bf0:	02 96       	adiw	r24, 0x02	; 2
     bf2:	fc 01       	movw	r30, r24
     bf4:	80 81       	ld	r24, Z
     bf6:	48 2f       	mov	r20, r24
     bf8:	44 0f       	add	r20, r20
     bfa:	44 0f       	add	r20, r20
     bfc:	44 0f       	add	r20, r20
     bfe:	ce 01       	movw	r24, r28
     c00:	05 96       	adiw	r24, 0x05	; 5
     c02:	01 96       	adiw	r24, 0x01	; 1
     c04:	fc 01       	movw	r30, r24
     c06:	80 81       	ld	r24, Z
     c08:	82 95       	swap	r24
     c0a:	86 95       	lsr	r24
     c0c:	87 70       	andi	r24, 0x07	; 7
     c0e:	84 0f       	add	r24, r20
     c10:	f9 01       	movw	r30, r18
     c12:	80 83       	st	Z, r24
     c14:	25 ef       	ldi	r18, 0xF5	; 245
     c16:	30 e0       	ldi	r19, 0x00	; 0
     c18:	ce 01       	movw	r24, r28
     c1a:	05 96       	adiw	r24, 0x05	; 5
     c1c:	01 96       	adiw	r24, 0x01	; 1
     c1e:	fc 01       	movw	r30, r24
     c20:	80 81       	ld	r24, Z
     c22:	48 2f       	mov	r20, r24
     c24:	44 0f       	add	r20, r20
     c26:	44 0f       	add	r20, r20
     c28:	44 0f       	add	r20, r20
     c2a:	ce 01       	movw	r24, r28
     c2c:	05 96       	adiw	r24, 0x05	; 5
     c2e:	fc 01       	movw	r30, r24
     c30:	80 81       	ld	r24, Z
     c32:	82 95       	swap	r24
     c34:	86 95       	lsr	r24
     c36:	87 70       	andi	r24, 0x07	; 7
     c38:	84 0f       	add	r24, r20
     c3a:	f9 01       	movw	r30, r18
     c3c:	80 83       	st	Z, r24
     c3e:	84 ef       	ldi	r24, 0xF4	; 244
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	9e 01       	movw	r18, r28
     c44:	2b 5f       	subi	r18, 0xFB	; 251
     c46:	3f 4f       	sbci	r19, 0xFF	; 255
     c48:	f9 01       	movw	r30, r18
     c4a:	20 81       	ld	r18, Z
     c4c:	22 0f       	add	r18, r18
     c4e:	22 0f       	add	r18, r18
     c50:	22 0f       	add	r18, r18
     c52:	fc 01       	movw	r30, r24
     c54:	20 83       	st	Z, r18
          Can_set_dlc(cmd->dlc);
     c56:	8f ee       	ldi	r24, 0xEF	; 239
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	2f ee       	ldi	r18, 0xEF	; 239
     c5c:	30 e0       	ldi	r19, 0x00	; 0
     c5e:	f9 01       	movw	r30, r18
     c60:	40 81       	ld	r20, Z
     c62:	29 85       	ldd	r18, Y+9	; 0x09
     c64:	3a 85       	ldd	r19, Y+10	; 0x0a
     c66:	f9 01       	movw	r30, r18
     c68:	26 81       	ldd	r18, Z+6	; 0x06
     c6a:	24 2b       	or	r18, r20
     c6c:	fc 01       	movw	r30, r24
     c6e:	20 83       	st	Z, r18
          cmd->ctrl.rtr=1; Can_set_rtrmsk(); Can_set_rtr();
     c70:	89 85       	ldd	r24, Y+9	; 0x09
     c72:	9a 85       	ldd	r25, Y+10	; 0x0a
     c74:	21 e0       	ldi	r18, 0x01	; 1
     c76:	fc 01       	movw	r30, r24
     c78:	22 87       	std	Z+10, r18	; 0x0a
     c7a:	84 ef       	ldi	r24, 0xF4	; 244
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	24 ef       	ldi	r18, 0xF4	; 244
     c80:	30 e0       	ldi	r19, 0x00	; 0
     c82:	f9 01       	movw	r30, r18
     c84:	20 81       	ld	r18, Z
     c86:	24 60       	ori	r18, 0x04	; 4
     c88:	fc 01       	movw	r30, r24
     c8a:	20 83       	st	Z, r18
     c8c:	80 ef       	ldi	r24, 0xF0	; 240
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	20 ef       	ldi	r18, 0xF0	; 240
     c92:	30 e0       	ldi	r19, 0x00	; 0
     c94:	f9 01       	movw	r30, r18
     c96:	20 81       	ld	r18, Z
     c98:	24 60       	ori	r18, 0x04	; 4
     c9a:	fc 01       	movw	r30, r24
     c9c:	20 83       	st	Z, r18
          Can_clear_rplv();
     c9e:	8f ee       	ldi	r24, 0xEF	; 239
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	2f ee       	ldi	r18, 0xEF	; 239
     ca4:	30 e0       	ldi	r19, 0x00	; 0
     ca6:	f9 01       	movw	r30, r18
     ca8:	20 81       	ld	r18, Z
     caa:	2f 7d       	andi	r18, 0xDF	; 223
     cac:	fc 01       	movw	r30, r24
     cae:	20 83       	st	Z, r18
          Can_clear_idemsk();
     cb0:	84 ef       	ldi	r24, 0xF4	; 244
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	24 ef       	ldi	r18, 0xF4	; 244
     cb6:	30 e0       	ldi	r19, 0x00	; 0
     cb8:	f9 01       	movw	r30, r18
     cba:	20 81       	ld	r18, Z
     cbc:	2e 7f       	andi	r18, 0xFE	; 254
     cbe:	fc 01       	movw	r30, r24
     cc0:	20 83       	st	Z, r18
          Can_config_rx();       
     cc2:	8f ee       	ldi	r24, 0xEF	; 239
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	2f ee       	ldi	r18, 0xEF	; 239
     cc8:	30 e0       	ldi	r19, 0x00	; 0
     cca:	f9 01       	movw	r30, r18
     ccc:	20 81       	ld	r18, Z
     cce:	2f 73       	andi	r18, 0x3F	; 63
     cd0:	fc 01       	movw	r30, r24
     cd2:	20 83       	st	Z, r18
     cd4:	8f ee       	ldi	r24, 0xEF	; 239
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	2f ee       	ldi	r18, 0xEF	; 239
     cda:	30 e0       	ldi	r19, 0x00	; 0
     cdc:	f9 01       	movw	r30, r18
     cde:	20 81       	ld	r18, Z
     ce0:	20 68       	ori	r18, 0x80	; 128
     ce2:	fc 01       	movw	r30, r24
     ce4:	20 83       	st	Z, r18
          break;
     ce6:	b2 c5       	rjmp	.+2916   	; 0x184c <__stack+0xf4d>
        //------------      
        case CMD_RX_MASKED:
          if (cmd->ctrl.ide){ Can_set_ext_id(cmd->id.ext);}
     ce8:	89 85       	ldd	r24, Y+9	; 0x09
     cea:	9a 85       	ldd	r25, Y+10	; 0x0a
     cec:	fc 01       	movw	r30, r24
     cee:	83 85       	ldd	r24, Z+11	; 0x0b
     cf0:	88 23       	and	r24, r24
     cf2:	09 f4       	brne	.+2      	; 0xcf6 <__stack+0x3f7>
     cf4:	69 c0       	rjmp	.+210    	; 0xdc8 <__stack+0x4c9>
     cf6:	83 ef       	ldi	r24, 0xF3	; 243
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	29 85       	ldd	r18, Y+9	; 0x09
     cfc:	3a 85       	ldd	r19, Y+10	; 0x0a
     cfe:	2e 5f       	subi	r18, 0xFE	; 254
     d00:	3f 4f       	sbci	r19, 0xFF	; 255
     d02:	2d 5f       	subi	r18, 0xFD	; 253
     d04:	3f 4f       	sbci	r19, 0xFF	; 255
     d06:	f9 01       	movw	r30, r18
     d08:	20 81       	ld	r18, Z
     d0a:	42 2f       	mov	r20, r18
     d0c:	44 0f       	add	r20, r20
     d0e:	44 0f       	add	r20, r20
     d10:	44 0f       	add	r20, r20
     d12:	29 85       	ldd	r18, Y+9	; 0x09
     d14:	3a 85       	ldd	r19, Y+10	; 0x0a
     d16:	2e 5f       	subi	r18, 0xFE	; 254
     d18:	3f 4f       	sbci	r19, 0xFF	; 255
     d1a:	2e 5f       	subi	r18, 0xFE	; 254
     d1c:	3f 4f       	sbci	r19, 0xFF	; 255
     d1e:	f9 01       	movw	r30, r18
     d20:	20 81       	ld	r18, Z
     d22:	22 95       	swap	r18
     d24:	26 95       	lsr	r18
     d26:	27 70       	andi	r18, 0x07	; 7
     d28:	24 0f       	add	r18, r20
     d2a:	fc 01       	movw	r30, r24
     d2c:	20 83       	st	Z, r18
     d2e:	82 ef       	ldi	r24, 0xF2	; 242
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	29 85       	ldd	r18, Y+9	; 0x09
     d34:	3a 85       	ldd	r19, Y+10	; 0x0a
     d36:	2e 5f       	subi	r18, 0xFE	; 254
     d38:	3f 4f       	sbci	r19, 0xFF	; 255
     d3a:	2e 5f       	subi	r18, 0xFE	; 254
     d3c:	3f 4f       	sbci	r19, 0xFF	; 255
     d3e:	f9 01       	movw	r30, r18
     d40:	20 81       	ld	r18, Z
     d42:	42 2f       	mov	r20, r18
     d44:	44 0f       	add	r20, r20
     d46:	44 0f       	add	r20, r20
     d48:	44 0f       	add	r20, r20
     d4a:	29 85       	ldd	r18, Y+9	; 0x09
     d4c:	3a 85       	ldd	r19, Y+10	; 0x0a
     d4e:	2e 5f       	subi	r18, 0xFE	; 254
     d50:	3f 4f       	sbci	r19, 0xFF	; 255
     d52:	2f 5f       	subi	r18, 0xFF	; 255
     d54:	3f 4f       	sbci	r19, 0xFF	; 255
     d56:	f9 01       	movw	r30, r18
     d58:	20 81       	ld	r18, Z
     d5a:	22 95       	swap	r18
     d5c:	26 95       	lsr	r18
     d5e:	27 70       	andi	r18, 0x07	; 7
     d60:	24 0f       	add	r18, r20
     d62:	fc 01       	movw	r30, r24
     d64:	20 83       	st	Z, r18
     d66:	81 ef       	ldi	r24, 0xF1	; 241
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	29 85       	ldd	r18, Y+9	; 0x09
     d6c:	3a 85       	ldd	r19, Y+10	; 0x0a
     d6e:	2e 5f       	subi	r18, 0xFE	; 254
     d70:	3f 4f       	sbci	r19, 0xFF	; 255
     d72:	2f 5f       	subi	r18, 0xFF	; 255
     d74:	3f 4f       	sbci	r19, 0xFF	; 255
     d76:	f9 01       	movw	r30, r18
     d78:	20 81       	ld	r18, Z
     d7a:	42 2f       	mov	r20, r18
     d7c:	44 0f       	add	r20, r20
     d7e:	44 0f       	add	r20, r20
     d80:	44 0f       	add	r20, r20
     d82:	29 85       	ldd	r18, Y+9	; 0x09
     d84:	3a 85       	ldd	r19, Y+10	; 0x0a
     d86:	2e 5f       	subi	r18, 0xFE	; 254
     d88:	3f 4f       	sbci	r19, 0xFF	; 255
     d8a:	f9 01       	movw	r30, r18
     d8c:	20 81       	ld	r18, Z
     d8e:	22 95       	swap	r18
     d90:	26 95       	lsr	r18
     d92:	27 70       	andi	r18, 0x07	; 7
     d94:	24 0f       	add	r18, r20
     d96:	fc 01       	movw	r30, r24
     d98:	20 83       	st	Z, r18
     d9a:	80 ef       	ldi	r24, 0xF0	; 240
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	29 85       	ldd	r18, Y+9	; 0x09
     da0:	3a 85       	ldd	r19, Y+10	; 0x0a
     da2:	2e 5f       	subi	r18, 0xFE	; 254
     da4:	3f 4f       	sbci	r19, 0xFF	; 255
     da6:	f9 01       	movw	r30, r18
     da8:	20 81       	ld	r18, Z
     daa:	22 0f       	add	r18, r18
     dac:	22 0f       	add	r18, r18
     dae:	22 0f       	add	r18, r18
     db0:	fc 01       	movw	r30, r24
     db2:	20 83       	st	Z, r18
     db4:	8f ee       	ldi	r24, 0xEF	; 239
     db6:	90 e0       	ldi	r25, 0x00	; 0
     db8:	2f ee       	ldi	r18, 0xEF	; 239
     dba:	30 e0       	ldi	r19, 0x00	; 0
     dbc:	f9 01       	movw	r30, r18
     dbe:	20 81       	ld	r18, Z
     dc0:	20 61       	ori	r18, 0x10	; 16
     dc2:	fc 01       	movw	r30, r24
     dc4:	20 83       	st	Z, r18
     dc6:	30 c0       	rjmp	.+96     	; 0xe28 <__stack+0x529>
          else              { Can_set_std_id(cmd->id.std);}
     dc8:	83 ef       	ldi	r24, 0xF3	; 243
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	29 85       	ldd	r18, Y+9	; 0x09
     dce:	3a 85       	ldd	r19, Y+10	; 0x0a
     dd0:	2e 5f       	subi	r18, 0xFE	; 254
     dd2:	3f 4f       	sbci	r19, 0xFF	; 255
     dd4:	2f 5f       	subi	r18, 0xFF	; 255
     dd6:	3f 4f       	sbci	r19, 0xFF	; 255
     dd8:	f9 01       	movw	r30, r18
     dda:	20 81       	ld	r18, Z
     ddc:	42 2f       	mov	r20, r18
     dde:	42 95       	swap	r20
     de0:	44 0f       	add	r20, r20
     de2:	40 7e       	andi	r20, 0xE0	; 224
     de4:	29 85       	ldd	r18, Y+9	; 0x09
     de6:	3a 85       	ldd	r19, Y+10	; 0x0a
     de8:	2e 5f       	subi	r18, 0xFE	; 254
     dea:	3f 4f       	sbci	r19, 0xFF	; 255
     dec:	f9 01       	movw	r30, r18
     dee:	20 81       	ld	r18, Z
     df0:	26 95       	lsr	r18
     df2:	26 95       	lsr	r18
     df4:	26 95       	lsr	r18
     df6:	24 0f       	add	r18, r20
     df8:	fc 01       	movw	r30, r24
     dfa:	20 83       	st	Z, r18
     dfc:	82 ef       	ldi	r24, 0xF2	; 242
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	29 85       	ldd	r18, Y+9	; 0x09
     e02:	3a 85       	ldd	r19, Y+10	; 0x0a
     e04:	2e 5f       	subi	r18, 0xFE	; 254
     e06:	3f 4f       	sbci	r19, 0xFF	; 255
     e08:	f9 01       	movw	r30, r18
     e0a:	20 81       	ld	r18, Z
     e0c:	22 95       	swap	r18
     e0e:	22 0f       	add	r18, r18
     e10:	20 7e       	andi	r18, 0xE0	; 224
     e12:	fc 01       	movw	r30, r24
     e14:	20 83       	st	Z, r18
     e16:	8f ee       	ldi	r24, 0xEF	; 239
     e18:	90 e0       	ldi	r25, 0x00	; 0
     e1a:	2f ee       	ldi	r18, 0xEF	; 239
     e1c:	30 e0       	ldi	r19, 0x00	; 0
     e1e:	f9 01       	movw	r30, r18
     e20:	20 81       	ld	r18, Z
     e22:	2f 7e       	andi	r18, 0xEF	; 239
     e24:	fc 01       	movw	r30, r24
     e26:	20 83       	st	Z, r18
          u32_temp=~0; Can_set_ext_msk(u32_temp);
     e28:	8f ef       	ldi	r24, 0xFF	; 255
     e2a:	9f ef       	ldi	r25, 0xFF	; 255
     e2c:	dc 01       	movw	r26, r24
     e2e:	8d 83       	std	Y+5, r24	; 0x05
     e30:	9e 83       	std	Y+6, r25	; 0x06
     e32:	af 83       	std	Y+7, r26	; 0x07
     e34:	b8 87       	std	Y+8, r27	; 0x08
     e36:	27 ef       	ldi	r18, 0xF7	; 247
     e38:	30 e0       	ldi	r19, 0x00	; 0
     e3a:	ce 01       	movw	r24, r28
     e3c:	05 96       	adiw	r24, 0x05	; 5
     e3e:	03 96       	adiw	r24, 0x03	; 3
     e40:	fc 01       	movw	r30, r24
     e42:	80 81       	ld	r24, Z
     e44:	48 2f       	mov	r20, r24
     e46:	44 0f       	add	r20, r20
     e48:	44 0f       	add	r20, r20
     e4a:	44 0f       	add	r20, r20
     e4c:	ce 01       	movw	r24, r28
     e4e:	05 96       	adiw	r24, 0x05	; 5
     e50:	02 96       	adiw	r24, 0x02	; 2
     e52:	fc 01       	movw	r30, r24
     e54:	80 81       	ld	r24, Z
     e56:	82 95       	swap	r24
     e58:	86 95       	lsr	r24
     e5a:	87 70       	andi	r24, 0x07	; 7
     e5c:	84 0f       	add	r24, r20
     e5e:	f9 01       	movw	r30, r18
     e60:	80 83       	st	Z, r24
     e62:	26 ef       	ldi	r18, 0xF6	; 246
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	ce 01       	movw	r24, r28
     e68:	05 96       	adiw	r24, 0x05	; 5
     e6a:	02 96       	adiw	r24, 0x02	; 2
     e6c:	fc 01       	movw	r30, r24
     e6e:	80 81       	ld	r24, Z
     e70:	48 2f       	mov	r20, r24
     e72:	44 0f       	add	r20, r20
     e74:	44 0f       	add	r20, r20
     e76:	44 0f       	add	r20, r20
     e78:	ce 01       	movw	r24, r28
     e7a:	05 96       	adiw	r24, 0x05	; 5
     e7c:	01 96       	adiw	r24, 0x01	; 1
     e7e:	fc 01       	movw	r30, r24
     e80:	80 81       	ld	r24, Z
     e82:	82 95       	swap	r24
     e84:	86 95       	lsr	r24
     e86:	87 70       	andi	r24, 0x07	; 7
     e88:	84 0f       	add	r24, r20
     e8a:	f9 01       	movw	r30, r18
     e8c:	80 83       	st	Z, r24
     e8e:	25 ef       	ldi	r18, 0xF5	; 245
     e90:	30 e0       	ldi	r19, 0x00	; 0
     e92:	ce 01       	movw	r24, r28
     e94:	05 96       	adiw	r24, 0x05	; 5
     e96:	01 96       	adiw	r24, 0x01	; 1
     e98:	fc 01       	movw	r30, r24
     e9a:	80 81       	ld	r24, Z
     e9c:	48 2f       	mov	r20, r24
     e9e:	44 0f       	add	r20, r20
     ea0:	44 0f       	add	r20, r20
     ea2:	44 0f       	add	r20, r20
     ea4:	ce 01       	movw	r24, r28
     ea6:	05 96       	adiw	r24, 0x05	; 5
     ea8:	fc 01       	movw	r30, r24
     eaa:	80 81       	ld	r24, Z
     eac:	82 95       	swap	r24
     eae:	86 95       	lsr	r24
     eb0:	87 70       	andi	r24, 0x07	; 7
     eb2:	84 0f       	add	r24, r20
     eb4:	f9 01       	movw	r30, r18
     eb6:	80 83       	st	Z, r24
     eb8:	84 ef       	ldi	r24, 0xF4	; 244
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	9e 01       	movw	r18, r28
     ebe:	2b 5f       	subi	r18, 0xFB	; 251
     ec0:	3f 4f       	sbci	r19, 0xFF	; 255
     ec2:	f9 01       	movw	r30, r18
     ec4:	20 81       	ld	r18, Z
     ec6:	22 0f       	add	r18, r18
     ec8:	22 0f       	add	r18, r18
     eca:	22 0f       	add	r18, r18
     ecc:	fc 01       	movw	r30, r24
     ece:	20 83       	st	Z, r18
          Can_set_dlc(cmd->dlc);
     ed0:	8f ee       	ldi	r24, 0xEF	; 239
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	2f ee       	ldi	r18, 0xEF	; 239
     ed6:	30 e0       	ldi	r19, 0x00	; 0
     ed8:	f9 01       	movw	r30, r18
     eda:	40 81       	ld	r20, Z
     edc:	29 85       	ldd	r18, Y+9	; 0x09
     ede:	3a 85       	ldd	r19, Y+10	; 0x0a
     ee0:	f9 01       	movw	r30, r18
     ee2:	26 81       	ldd	r18, Z+6	; 0x06
     ee4:	24 2b       	or	r18, r20
     ee6:	fc 01       	movw	r30, r24
     ee8:	20 83       	st	Z, r18
          Can_clear_rtrmsk();
     eea:	84 ef       	ldi	r24, 0xF4	; 244
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	24 ef       	ldi	r18, 0xF4	; 244
     ef0:	30 e0       	ldi	r19, 0x00	; 0
     ef2:	f9 01       	movw	r30, r18
     ef4:	20 81       	ld	r18, Z
     ef6:	2b 7f       	andi	r18, 0xFB	; 251
     ef8:	fc 01       	movw	r30, r24
     efa:	20 83       	st	Z, r18
          Can_set_idemsk();
     efc:	84 ef       	ldi	r24, 0xF4	; 244
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	24 ef       	ldi	r18, 0xF4	; 244
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	f9 01       	movw	r30, r18
     f06:	20 81       	ld	r18, Z
     f08:	21 60       	ori	r18, 0x01	; 1
     f0a:	fc 01       	movw	r30, r24
     f0c:	20 83       	st	Z, r18
          Can_config_rx();       
     f0e:	8f ee       	ldi	r24, 0xEF	; 239
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	2f ee       	ldi	r18, 0xEF	; 239
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	f9 01       	movw	r30, r18
     f18:	20 81       	ld	r18, Z
     f1a:	2f 73       	andi	r18, 0x3F	; 63
     f1c:	fc 01       	movw	r30, r24
     f1e:	20 83       	st	Z, r18
     f20:	8f ee       	ldi	r24, 0xEF	; 239
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	2f ee       	ldi	r18, 0xEF	; 239
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	f9 01       	movw	r30, r18
     f2a:	20 81       	ld	r18, Z
     f2c:	20 68       	ori	r18, 0x80	; 128
     f2e:	fc 01       	movw	r30, r24
     f30:	20 83       	st	Z, r18
          break;
     f32:	8c c4       	rjmp	.+2328   	; 0x184c <__stack+0xf4d>
        //------------      
        case CMD_RX_DATA_MASKED:
          if (cmd->ctrl.ide){ Can_set_ext_id(cmd->id.ext);}
     f34:	89 85       	ldd	r24, Y+9	; 0x09
     f36:	9a 85       	ldd	r25, Y+10	; 0x0a
     f38:	fc 01       	movw	r30, r24
     f3a:	83 85       	ldd	r24, Z+11	; 0x0b
     f3c:	88 23       	and	r24, r24
     f3e:	09 f4       	brne	.+2      	; 0xf42 <__stack+0x643>
     f40:	69 c0       	rjmp	.+210    	; 0x1014 <__stack+0x715>
     f42:	83 ef       	ldi	r24, 0xF3	; 243
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	29 85       	ldd	r18, Y+9	; 0x09
     f48:	3a 85       	ldd	r19, Y+10	; 0x0a
     f4a:	2e 5f       	subi	r18, 0xFE	; 254
     f4c:	3f 4f       	sbci	r19, 0xFF	; 255
     f4e:	2d 5f       	subi	r18, 0xFD	; 253
     f50:	3f 4f       	sbci	r19, 0xFF	; 255
     f52:	f9 01       	movw	r30, r18
     f54:	20 81       	ld	r18, Z
     f56:	42 2f       	mov	r20, r18
     f58:	44 0f       	add	r20, r20
     f5a:	44 0f       	add	r20, r20
     f5c:	44 0f       	add	r20, r20
     f5e:	29 85       	ldd	r18, Y+9	; 0x09
     f60:	3a 85       	ldd	r19, Y+10	; 0x0a
     f62:	2e 5f       	subi	r18, 0xFE	; 254
     f64:	3f 4f       	sbci	r19, 0xFF	; 255
     f66:	2e 5f       	subi	r18, 0xFE	; 254
     f68:	3f 4f       	sbci	r19, 0xFF	; 255
     f6a:	f9 01       	movw	r30, r18
     f6c:	20 81       	ld	r18, Z
     f6e:	22 95       	swap	r18
     f70:	26 95       	lsr	r18
     f72:	27 70       	andi	r18, 0x07	; 7
     f74:	24 0f       	add	r18, r20
     f76:	fc 01       	movw	r30, r24
     f78:	20 83       	st	Z, r18
     f7a:	82 ef       	ldi	r24, 0xF2	; 242
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	29 85       	ldd	r18, Y+9	; 0x09
     f80:	3a 85       	ldd	r19, Y+10	; 0x0a
     f82:	2e 5f       	subi	r18, 0xFE	; 254
     f84:	3f 4f       	sbci	r19, 0xFF	; 255
     f86:	2e 5f       	subi	r18, 0xFE	; 254
     f88:	3f 4f       	sbci	r19, 0xFF	; 255
     f8a:	f9 01       	movw	r30, r18
     f8c:	20 81       	ld	r18, Z
     f8e:	42 2f       	mov	r20, r18
     f90:	44 0f       	add	r20, r20
     f92:	44 0f       	add	r20, r20
     f94:	44 0f       	add	r20, r20
     f96:	29 85       	ldd	r18, Y+9	; 0x09
     f98:	3a 85       	ldd	r19, Y+10	; 0x0a
     f9a:	2e 5f       	subi	r18, 0xFE	; 254
     f9c:	3f 4f       	sbci	r19, 0xFF	; 255
     f9e:	2f 5f       	subi	r18, 0xFF	; 255
     fa0:	3f 4f       	sbci	r19, 0xFF	; 255
     fa2:	f9 01       	movw	r30, r18
     fa4:	20 81       	ld	r18, Z
     fa6:	22 95       	swap	r18
     fa8:	26 95       	lsr	r18
     faa:	27 70       	andi	r18, 0x07	; 7
     fac:	24 0f       	add	r18, r20
     fae:	fc 01       	movw	r30, r24
     fb0:	20 83       	st	Z, r18
     fb2:	81 ef       	ldi	r24, 0xF1	; 241
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	29 85       	ldd	r18, Y+9	; 0x09
     fb8:	3a 85       	ldd	r19, Y+10	; 0x0a
     fba:	2e 5f       	subi	r18, 0xFE	; 254
     fbc:	3f 4f       	sbci	r19, 0xFF	; 255
     fbe:	2f 5f       	subi	r18, 0xFF	; 255
     fc0:	3f 4f       	sbci	r19, 0xFF	; 255
     fc2:	f9 01       	movw	r30, r18
     fc4:	20 81       	ld	r18, Z
     fc6:	42 2f       	mov	r20, r18
     fc8:	44 0f       	add	r20, r20
     fca:	44 0f       	add	r20, r20
     fcc:	44 0f       	add	r20, r20
     fce:	29 85       	ldd	r18, Y+9	; 0x09
     fd0:	3a 85       	ldd	r19, Y+10	; 0x0a
     fd2:	2e 5f       	subi	r18, 0xFE	; 254
     fd4:	3f 4f       	sbci	r19, 0xFF	; 255
     fd6:	f9 01       	movw	r30, r18
     fd8:	20 81       	ld	r18, Z
     fda:	22 95       	swap	r18
     fdc:	26 95       	lsr	r18
     fde:	27 70       	andi	r18, 0x07	; 7
     fe0:	24 0f       	add	r18, r20
     fe2:	fc 01       	movw	r30, r24
     fe4:	20 83       	st	Z, r18
     fe6:	80 ef       	ldi	r24, 0xF0	; 240
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	29 85       	ldd	r18, Y+9	; 0x09
     fec:	3a 85       	ldd	r19, Y+10	; 0x0a
     fee:	2e 5f       	subi	r18, 0xFE	; 254
     ff0:	3f 4f       	sbci	r19, 0xFF	; 255
     ff2:	f9 01       	movw	r30, r18
     ff4:	20 81       	ld	r18, Z
     ff6:	22 0f       	add	r18, r18
     ff8:	22 0f       	add	r18, r18
     ffa:	22 0f       	add	r18, r18
     ffc:	fc 01       	movw	r30, r24
     ffe:	20 83       	st	Z, r18
    1000:	8f ee       	ldi	r24, 0xEF	; 239
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	2f ee       	ldi	r18, 0xEF	; 239
    1006:	30 e0       	ldi	r19, 0x00	; 0
    1008:	f9 01       	movw	r30, r18
    100a:	20 81       	ld	r18, Z
    100c:	20 61       	ori	r18, 0x10	; 16
    100e:	fc 01       	movw	r30, r24
    1010:	20 83       	st	Z, r18
    1012:	30 c0       	rjmp	.+96     	; 0x1074 <__stack+0x775>
          else              { Can_set_std_id(cmd->id.std);}
    1014:	83 ef       	ldi	r24, 0xF3	; 243
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	29 85       	ldd	r18, Y+9	; 0x09
    101a:	3a 85       	ldd	r19, Y+10	; 0x0a
    101c:	2e 5f       	subi	r18, 0xFE	; 254
    101e:	3f 4f       	sbci	r19, 0xFF	; 255
    1020:	2f 5f       	subi	r18, 0xFF	; 255
    1022:	3f 4f       	sbci	r19, 0xFF	; 255
    1024:	f9 01       	movw	r30, r18
    1026:	20 81       	ld	r18, Z
    1028:	42 2f       	mov	r20, r18
    102a:	42 95       	swap	r20
    102c:	44 0f       	add	r20, r20
    102e:	40 7e       	andi	r20, 0xE0	; 224
    1030:	29 85       	ldd	r18, Y+9	; 0x09
    1032:	3a 85       	ldd	r19, Y+10	; 0x0a
    1034:	2e 5f       	subi	r18, 0xFE	; 254
    1036:	3f 4f       	sbci	r19, 0xFF	; 255
    1038:	f9 01       	movw	r30, r18
    103a:	20 81       	ld	r18, Z
    103c:	26 95       	lsr	r18
    103e:	26 95       	lsr	r18
    1040:	26 95       	lsr	r18
    1042:	24 0f       	add	r18, r20
    1044:	fc 01       	movw	r30, r24
    1046:	20 83       	st	Z, r18
    1048:	82 ef       	ldi	r24, 0xF2	; 242
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	29 85       	ldd	r18, Y+9	; 0x09
    104e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1050:	2e 5f       	subi	r18, 0xFE	; 254
    1052:	3f 4f       	sbci	r19, 0xFF	; 255
    1054:	f9 01       	movw	r30, r18
    1056:	20 81       	ld	r18, Z
    1058:	22 95       	swap	r18
    105a:	22 0f       	add	r18, r18
    105c:	20 7e       	andi	r18, 0xE0	; 224
    105e:	fc 01       	movw	r30, r24
    1060:	20 83       	st	Z, r18
    1062:	8f ee       	ldi	r24, 0xEF	; 239
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	2f ee       	ldi	r18, 0xEF	; 239
    1068:	30 e0       	ldi	r19, 0x00	; 0
    106a:	f9 01       	movw	r30, r18
    106c:	20 81       	ld	r18, Z
    106e:	2f 7e       	andi	r18, 0xEF	; 239
    1070:	fc 01       	movw	r30, r24
    1072:	20 83       	st	Z, r18
          u32_temp=~0; Can_set_ext_msk(u32_temp);
    1074:	8f ef       	ldi	r24, 0xFF	; 255
    1076:	9f ef       	ldi	r25, 0xFF	; 255
    1078:	dc 01       	movw	r26, r24
    107a:	8d 83       	std	Y+5, r24	; 0x05
    107c:	9e 83       	std	Y+6, r25	; 0x06
    107e:	af 83       	std	Y+7, r26	; 0x07
    1080:	b8 87       	std	Y+8, r27	; 0x08
    1082:	27 ef       	ldi	r18, 0xF7	; 247
    1084:	30 e0       	ldi	r19, 0x00	; 0
    1086:	ce 01       	movw	r24, r28
    1088:	05 96       	adiw	r24, 0x05	; 5
    108a:	03 96       	adiw	r24, 0x03	; 3
    108c:	fc 01       	movw	r30, r24
    108e:	80 81       	ld	r24, Z
    1090:	48 2f       	mov	r20, r24
    1092:	44 0f       	add	r20, r20
    1094:	44 0f       	add	r20, r20
    1096:	44 0f       	add	r20, r20
    1098:	ce 01       	movw	r24, r28
    109a:	05 96       	adiw	r24, 0x05	; 5
    109c:	02 96       	adiw	r24, 0x02	; 2
    109e:	fc 01       	movw	r30, r24
    10a0:	80 81       	ld	r24, Z
    10a2:	82 95       	swap	r24
    10a4:	86 95       	lsr	r24
    10a6:	87 70       	andi	r24, 0x07	; 7
    10a8:	84 0f       	add	r24, r20
    10aa:	f9 01       	movw	r30, r18
    10ac:	80 83       	st	Z, r24
    10ae:	26 ef       	ldi	r18, 0xF6	; 246
    10b0:	30 e0       	ldi	r19, 0x00	; 0
    10b2:	ce 01       	movw	r24, r28
    10b4:	05 96       	adiw	r24, 0x05	; 5
    10b6:	02 96       	adiw	r24, 0x02	; 2
    10b8:	fc 01       	movw	r30, r24
    10ba:	80 81       	ld	r24, Z
    10bc:	48 2f       	mov	r20, r24
    10be:	44 0f       	add	r20, r20
    10c0:	44 0f       	add	r20, r20
    10c2:	44 0f       	add	r20, r20
    10c4:	ce 01       	movw	r24, r28
    10c6:	05 96       	adiw	r24, 0x05	; 5
    10c8:	01 96       	adiw	r24, 0x01	; 1
    10ca:	fc 01       	movw	r30, r24
    10cc:	80 81       	ld	r24, Z
    10ce:	82 95       	swap	r24
    10d0:	86 95       	lsr	r24
    10d2:	87 70       	andi	r24, 0x07	; 7
    10d4:	84 0f       	add	r24, r20
    10d6:	f9 01       	movw	r30, r18
    10d8:	80 83       	st	Z, r24
    10da:	25 ef       	ldi	r18, 0xF5	; 245
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	ce 01       	movw	r24, r28
    10e0:	05 96       	adiw	r24, 0x05	; 5
    10e2:	01 96       	adiw	r24, 0x01	; 1
    10e4:	fc 01       	movw	r30, r24
    10e6:	80 81       	ld	r24, Z
    10e8:	48 2f       	mov	r20, r24
    10ea:	44 0f       	add	r20, r20
    10ec:	44 0f       	add	r20, r20
    10ee:	44 0f       	add	r20, r20
    10f0:	ce 01       	movw	r24, r28
    10f2:	05 96       	adiw	r24, 0x05	; 5
    10f4:	fc 01       	movw	r30, r24
    10f6:	80 81       	ld	r24, Z
    10f8:	82 95       	swap	r24
    10fa:	86 95       	lsr	r24
    10fc:	87 70       	andi	r24, 0x07	; 7
    10fe:	84 0f       	add	r24, r20
    1100:	f9 01       	movw	r30, r18
    1102:	80 83       	st	Z, r24
    1104:	84 ef       	ldi	r24, 0xF4	; 244
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	9e 01       	movw	r18, r28
    110a:	2b 5f       	subi	r18, 0xFB	; 251
    110c:	3f 4f       	sbci	r19, 0xFF	; 255
    110e:	f9 01       	movw	r30, r18
    1110:	20 81       	ld	r18, Z
    1112:	22 0f       	add	r18, r18
    1114:	22 0f       	add	r18, r18
    1116:	22 0f       	add	r18, r18
    1118:	fc 01       	movw	r30, r24
    111a:	20 83       	st	Z, r18
          Can_set_dlc(cmd->dlc);
    111c:	8f ee       	ldi	r24, 0xEF	; 239
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	2f ee       	ldi	r18, 0xEF	; 239
    1122:	30 e0       	ldi	r19, 0x00	; 0
    1124:	f9 01       	movw	r30, r18
    1126:	40 81       	ld	r20, Z
    1128:	29 85       	ldd	r18, Y+9	; 0x09
    112a:	3a 85       	ldd	r19, Y+10	; 0x0a
    112c:	f9 01       	movw	r30, r18
    112e:	26 81       	ldd	r18, Z+6	; 0x06
    1130:	24 2b       	or	r18, r20
    1132:	fc 01       	movw	r30, r24
    1134:	20 83       	st	Z, r18
          cmd->ctrl.rtr=0; Can_set_rtrmsk(); Can_clear_rtr();
    1136:	89 85       	ldd	r24, Y+9	; 0x09
    1138:	9a 85       	ldd	r25, Y+10	; 0x0a
    113a:	fc 01       	movw	r30, r24
    113c:	12 86       	std	Z+10, r1	; 0x0a
    113e:	84 ef       	ldi	r24, 0xF4	; 244
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	24 ef       	ldi	r18, 0xF4	; 244
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	f9 01       	movw	r30, r18
    1148:	20 81       	ld	r18, Z
    114a:	24 60       	ori	r18, 0x04	; 4
    114c:	fc 01       	movw	r30, r24
    114e:	20 83       	st	Z, r18
    1150:	80 ef       	ldi	r24, 0xF0	; 240
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	20 ef       	ldi	r18, 0xF0	; 240
    1156:	30 e0       	ldi	r19, 0x00	; 0
    1158:	f9 01       	movw	r30, r18
    115a:	20 81       	ld	r18, Z
    115c:	2b 7f       	andi	r18, 0xFB	; 251
    115e:	fc 01       	movw	r30, r24
    1160:	20 83       	st	Z, r18
          Can_set_idemsk();
    1162:	84 ef       	ldi	r24, 0xF4	; 244
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	24 ef       	ldi	r18, 0xF4	; 244
    1168:	30 e0       	ldi	r19, 0x00	; 0
    116a:	f9 01       	movw	r30, r18
    116c:	20 81       	ld	r18, Z
    116e:	21 60       	ori	r18, 0x01	; 1
    1170:	fc 01       	movw	r30, r24
    1172:	20 83       	st	Z, r18
          Can_config_rx();       
    1174:	8f ee       	ldi	r24, 0xEF	; 239
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	2f ee       	ldi	r18, 0xEF	; 239
    117a:	30 e0       	ldi	r19, 0x00	; 0
    117c:	f9 01       	movw	r30, r18
    117e:	20 81       	ld	r18, Z
    1180:	2f 73       	andi	r18, 0x3F	; 63
    1182:	fc 01       	movw	r30, r24
    1184:	20 83       	st	Z, r18
    1186:	8f ee       	ldi	r24, 0xEF	; 239
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	2f ee       	ldi	r18, 0xEF	; 239
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	f9 01       	movw	r30, r18
    1190:	20 81       	ld	r18, Z
    1192:	20 68       	ori	r18, 0x80	; 128
    1194:	fc 01       	movw	r30, r24
    1196:	20 83       	st	Z, r18
          break;
    1198:	59 c3       	rjmp	.+1714   	; 0x184c <__stack+0xf4d>
        //------------      
        case CMD_RX_REMOTE_MASKED:
          if (cmd->ctrl.ide){ Can_set_ext_id(cmd->id.ext);}
    119a:	89 85       	ldd	r24, Y+9	; 0x09
    119c:	9a 85       	ldd	r25, Y+10	; 0x0a
    119e:	fc 01       	movw	r30, r24
    11a0:	83 85       	ldd	r24, Z+11	; 0x0b
    11a2:	88 23       	and	r24, r24
    11a4:	09 f4       	brne	.+2      	; 0x11a8 <__stack+0x8a9>
    11a6:	69 c0       	rjmp	.+210    	; 0x127a <__stack+0x97b>
    11a8:	83 ef       	ldi	r24, 0xF3	; 243
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	29 85       	ldd	r18, Y+9	; 0x09
    11ae:	3a 85       	ldd	r19, Y+10	; 0x0a
    11b0:	2e 5f       	subi	r18, 0xFE	; 254
    11b2:	3f 4f       	sbci	r19, 0xFF	; 255
    11b4:	2d 5f       	subi	r18, 0xFD	; 253
    11b6:	3f 4f       	sbci	r19, 0xFF	; 255
    11b8:	f9 01       	movw	r30, r18
    11ba:	20 81       	ld	r18, Z
    11bc:	42 2f       	mov	r20, r18
    11be:	44 0f       	add	r20, r20
    11c0:	44 0f       	add	r20, r20
    11c2:	44 0f       	add	r20, r20
    11c4:	29 85       	ldd	r18, Y+9	; 0x09
    11c6:	3a 85       	ldd	r19, Y+10	; 0x0a
    11c8:	2e 5f       	subi	r18, 0xFE	; 254
    11ca:	3f 4f       	sbci	r19, 0xFF	; 255
    11cc:	2e 5f       	subi	r18, 0xFE	; 254
    11ce:	3f 4f       	sbci	r19, 0xFF	; 255
    11d0:	f9 01       	movw	r30, r18
    11d2:	20 81       	ld	r18, Z
    11d4:	22 95       	swap	r18
    11d6:	26 95       	lsr	r18
    11d8:	27 70       	andi	r18, 0x07	; 7
    11da:	24 0f       	add	r18, r20
    11dc:	fc 01       	movw	r30, r24
    11de:	20 83       	st	Z, r18
    11e0:	82 ef       	ldi	r24, 0xF2	; 242
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	29 85       	ldd	r18, Y+9	; 0x09
    11e6:	3a 85       	ldd	r19, Y+10	; 0x0a
    11e8:	2e 5f       	subi	r18, 0xFE	; 254
    11ea:	3f 4f       	sbci	r19, 0xFF	; 255
    11ec:	2e 5f       	subi	r18, 0xFE	; 254
    11ee:	3f 4f       	sbci	r19, 0xFF	; 255
    11f0:	f9 01       	movw	r30, r18
    11f2:	20 81       	ld	r18, Z
    11f4:	42 2f       	mov	r20, r18
    11f6:	44 0f       	add	r20, r20
    11f8:	44 0f       	add	r20, r20
    11fa:	44 0f       	add	r20, r20
    11fc:	29 85       	ldd	r18, Y+9	; 0x09
    11fe:	3a 85       	ldd	r19, Y+10	; 0x0a
    1200:	2e 5f       	subi	r18, 0xFE	; 254
    1202:	3f 4f       	sbci	r19, 0xFF	; 255
    1204:	2f 5f       	subi	r18, 0xFF	; 255
    1206:	3f 4f       	sbci	r19, 0xFF	; 255
    1208:	f9 01       	movw	r30, r18
    120a:	20 81       	ld	r18, Z
    120c:	22 95       	swap	r18
    120e:	26 95       	lsr	r18
    1210:	27 70       	andi	r18, 0x07	; 7
    1212:	24 0f       	add	r18, r20
    1214:	fc 01       	movw	r30, r24
    1216:	20 83       	st	Z, r18
    1218:	81 ef       	ldi	r24, 0xF1	; 241
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	29 85       	ldd	r18, Y+9	; 0x09
    121e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1220:	2e 5f       	subi	r18, 0xFE	; 254
    1222:	3f 4f       	sbci	r19, 0xFF	; 255
    1224:	2f 5f       	subi	r18, 0xFF	; 255
    1226:	3f 4f       	sbci	r19, 0xFF	; 255
    1228:	f9 01       	movw	r30, r18
    122a:	20 81       	ld	r18, Z
    122c:	42 2f       	mov	r20, r18
    122e:	44 0f       	add	r20, r20
    1230:	44 0f       	add	r20, r20
    1232:	44 0f       	add	r20, r20
    1234:	29 85       	ldd	r18, Y+9	; 0x09
    1236:	3a 85       	ldd	r19, Y+10	; 0x0a
    1238:	2e 5f       	subi	r18, 0xFE	; 254
    123a:	3f 4f       	sbci	r19, 0xFF	; 255
    123c:	f9 01       	movw	r30, r18
    123e:	20 81       	ld	r18, Z
    1240:	22 95       	swap	r18
    1242:	26 95       	lsr	r18
    1244:	27 70       	andi	r18, 0x07	; 7
    1246:	24 0f       	add	r18, r20
    1248:	fc 01       	movw	r30, r24
    124a:	20 83       	st	Z, r18
    124c:	80 ef       	ldi	r24, 0xF0	; 240
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	29 85       	ldd	r18, Y+9	; 0x09
    1252:	3a 85       	ldd	r19, Y+10	; 0x0a
    1254:	2e 5f       	subi	r18, 0xFE	; 254
    1256:	3f 4f       	sbci	r19, 0xFF	; 255
    1258:	f9 01       	movw	r30, r18
    125a:	20 81       	ld	r18, Z
    125c:	22 0f       	add	r18, r18
    125e:	22 0f       	add	r18, r18
    1260:	22 0f       	add	r18, r18
    1262:	fc 01       	movw	r30, r24
    1264:	20 83       	st	Z, r18
    1266:	8f ee       	ldi	r24, 0xEF	; 239
    1268:	90 e0       	ldi	r25, 0x00	; 0
    126a:	2f ee       	ldi	r18, 0xEF	; 239
    126c:	30 e0       	ldi	r19, 0x00	; 0
    126e:	f9 01       	movw	r30, r18
    1270:	20 81       	ld	r18, Z
    1272:	20 61       	ori	r18, 0x10	; 16
    1274:	fc 01       	movw	r30, r24
    1276:	20 83       	st	Z, r18
    1278:	30 c0       	rjmp	.+96     	; 0x12da <__stack+0x9db>
          else              { Can_set_std_id(cmd->id.std);}
    127a:	83 ef       	ldi	r24, 0xF3	; 243
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	29 85       	ldd	r18, Y+9	; 0x09
    1280:	3a 85       	ldd	r19, Y+10	; 0x0a
    1282:	2e 5f       	subi	r18, 0xFE	; 254
    1284:	3f 4f       	sbci	r19, 0xFF	; 255
    1286:	2f 5f       	subi	r18, 0xFF	; 255
    1288:	3f 4f       	sbci	r19, 0xFF	; 255
    128a:	f9 01       	movw	r30, r18
    128c:	20 81       	ld	r18, Z
    128e:	42 2f       	mov	r20, r18
    1290:	42 95       	swap	r20
    1292:	44 0f       	add	r20, r20
    1294:	40 7e       	andi	r20, 0xE0	; 224
    1296:	29 85       	ldd	r18, Y+9	; 0x09
    1298:	3a 85       	ldd	r19, Y+10	; 0x0a
    129a:	2e 5f       	subi	r18, 0xFE	; 254
    129c:	3f 4f       	sbci	r19, 0xFF	; 255
    129e:	f9 01       	movw	r30, r18
    12a0:	20 81       	ld	r18, Z
    12a2:	26 95       	lsr	r18
    12a4:	26 95       	lsr	r18
    12a6:	26 95       	lsr	r18
    12a8:	24 0f       	add	r18, r20
    12aa:	fc 01       	movw	r30, r24
    12ac:	20 83       	st	Z, r18
    12ae:	82 ef       	ldi	r24, 0xF2	; 242
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	29 85       	ldd	r18, Y+9	; 0x09
    12b4:	3a 85       	ldd	r19, Y+10	; 0x0a
    12b6:	2e 5f       	subi	r18, 0xFE	; 254
    12b8:	3f 4f       	sbci	r19, 0xFF	; 255
    12ba:	f9 01       	movw	r30, r18
    12bc:	20 81       	ld	r18, Z
    12be:	22 95       	swap	r18
    12c0:	22 0f       	add	r18, r18
    12c2:	20 7e       	andi	r18, 0xE0	; 224
    12c4:	fc 01       	movw	r30, r24
    12c6:	20 83       	st	Z, r18
    12c8:	8f ee       	ldi	r24, 0xEF	; 239
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	2f ee       	ldi	r18, 0xEF	; 239
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	f9 01       	movw	r30, r18
    12d2:	20 81       	ld	r18, Z
    12d4:	2f 7e       	andi	r18, 0xEF	; 239
    12d6:	fc 01       	movw	r30, r24
    12d8:	20 83       	st	Z, r18
          u32_temp=~0; Can_set_ext_msk(u32_temp);
    12da:	8f ef       	ldi	r24, 0xFF	; 255
    12dc:	9f ef       	ldi	r25, 0xFF	; 255
    12de:	dc 01       	movw	r26, r24
    12e0:	8d 83       	std	Y+5, r24	; 0x05
    12e2:	9e 83       	std	Y+6, r25	; 0x06
    12e4:	af 83       	std	Y+7, r26	; 0x07
    12e6:	b8 87       	std	Y+8, r27	; 0x08
    12e8:	27 ef       	ldi	r18, 0xF7	; 247
    12ea:	30 e0       	ldi	r19, 0x00	; 0
    12ec:	ce 01       	movw	r24, r28
    12ee:	05 96       	adiw	r24, 0x05	; 5
    12f0:	03 96       	adiw	r24, 0x03	; 3
    12f2:	fc 01       	movw	r30, r24
    12f4:	80 81       	ld	r24, Z
    12f6:	48 2f       	mov	r20, r24
    12f8:	44 0f       	add	r20, r20
    12fa:	44 0f       	add	r20, r20
    12fc:	44 0f       	add	r20, r20
    12fe:	ce 01       	movw	r24, r28
    1300:	05 96       	adiw	r24, 0x05	; 5
    1302:	02 96       	adiw	r24, 0x02	; 2
    1304:	fc 01       	movw	r30, r24
    1306:	80 81       	ld	r24, Z
    1308:	82 95       	swap	r24
    130a:	86 95       	lsr	r24
    130c:	87 70       	andi	r24, 0x07	; 7
    130e:	84 0f       	add	r24, r20
    1310:	f9 01       	movw	r30, r18
    1312:	80 83       	st	Z, r24
    1314:	26 ef       	ldi	r18, 0xF6	; 246
    1316:	30 e0       	ldi	r19, 0x00	; 0
    1318:	ce 01       	movw	r24, r28
    131a:	05 96       	adiw	r24, 0x05	; 5
    131c:	02 96       	adiw	r24, 0x02	; 2
    131e:	fc 01       	movw	r30, r24
    1320:	80 81       	ld	r24, Z
    1322:	48 2f       	mov	r20, r24
    1324:	44 0f       	add	r20, r20
    1326:	44 0f       	add	r20, r20
    1328:	44 0f       	add	r20, r20
    132a:	ce 01       	movw	r24, r28
    132c:	05 96       	adiw	r24, 0x05	; 5
    132e:	01 96       	adiw	r24, 0x01	; 1
    1330:	fc 01       	movw	r30, r24
    1332:	80 81       	ld	r24, Z
    1334:	82 95       	swap	r24
    1336:	86 95       	lsr	r24
    1338:	87 70       	andi	r24, 0x07	; 7
    133a:	84 0f       	add	r24, r20
    133c:	f9 01       	movw	r30, r18
    133e:	80 83       	st	Z, r24
    1340:	25 ef       	ldi	r18, 0xF5	; 245
    1342:	30 e0       	ldi	r19, 0x00	; 0
    1344:	ce 01       	movw	r24, r28
    1346:	05 96       	adiw	r24, 0x05	; 5
    1348:	01 96       	adiw	r24, 0x01	; 1
    134a:	fc 01       	movw	r30, r24
    134c:	80 81       	ld	r24, Z
    134e:	48 2f       	mov	r20, r24
    1350:	44 0f       	add	r20, r20
    1352:	44 0f       	add	r20, r20
    1354:	44 0f       	add	r20, r20
    1356:	ce 01       	movw	r24, r28
    1358:	05 96       	adiw	r24, 0x05	; 5
    135a:	fc 01       	movw	r30, r24
    135c:	80 81       	ld	r24, Z
    135e:	82 95       	swap	r24
    1360:	86 95       	lsr	r24
    1362:	87 70       	andi	r24, 0x07	; 7
    1364:	84 0f       	add	r24, r20
    1366:	f9 01       	movw	r30, r18
    1368:	80 83       	st	Z, r24
    136a:	84 ef       	ldi	r24, 0xF4	; 244
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	9e 01       	movw	r18, r28
    1370:	2b 5f       	subi	r18, 0xFB	; 251
    1372:	3f 4f       	sbci	r19, 0xFF	; 255
    1374:	f9 01       	movw	r30, r18
    1376:	20 81       	ld	r18, Z
    1378:	22 0f       	add	r18, r18
    137a:	22 0f       	add	r18, r18
    137c:	22 0f       	add	r18, r18
    137e:	fc 01       	movw	r30, r24
    1380:	20 83       	st	Z, r18
          Can_set_dlc(cmd->dlc);
    1382:	8f ee       	ldi	r24, 0xEF	; 239
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	2f ee       	ldi	r18, 0xEF	; 239
    1388:	30 e0       	ldi	r19, 0x00	; 0
    138a:	f9 01       	movw	r30, r18
    138c:	40 81       	ld	r20, Z
    138e:	29 85       	ldd	r18, Y+9	; 0x09
    1390:	3a 85       	ldd	r19, Y+10	; 0x0a
    1392:	f9 01       	movw	r30, r18
    1394:	26 81       	ldd	r18, Z+6	; 0x06
    1396:	24 2b       	or	r18, r20
    1398:	fc 01       	movw	r30, r24
    139a:	20 83       	st	Z, r18
          cmd->ctrl.rtr=1; Can_set_rtrmsk(); Can_set_rtr();
    139c:	89 85       	ldd	r24, Y+9	; 0x09
    139e:	9a 85       	ldd	r25, Y+10	; 0x0a
    13a0:	21 e0       	ldi	r18, 0x01	; 1
    13a2:	fc 01       	movw	r30, r24
    13a4:	22 87       	std	Z+10, r18	; 0x0a
    13a6:	84 ef       	ldi	r24, 0xF4	; 244
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	24 ef       	ldi	r18, 0xF4	; 244
    13ac:	30 e0       	ldi	r19, 0x00	; 0
    13ae:	f9 01       	movw	r30, r18
    13b0:	20 81       	ld	r18, Z
    13b2:	24 60       	ori	r18, 0x04	; 4
    13b4:	fc 01       	movw	r30, r24
    13b6:	20 83       	st	Z, r18
    13b8:	80 ef       	ldi	r24, 0xF0	; 240
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	20 ef       	ldi	r18, 0xF0	; 240
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	f9 01       	movw	r30, r18
    13c2:	20 81       	ld	r18, Z
    13c4:	24 60       	ori	r18, 0x04	; 4
    13c6:	fc 01       	movw	r30, r24
    13c8:	20 83       	st	Z, r18
          Can_clear_rplv();
    13ca:	8f ee       	ldi	r24, 0xEF	; 239
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	2f ee       	ldi	r18, 0xEF	; 239
    13d0:	30 e0       	ldi	r19, 0x00	; 0
    13d2:	f9 01       	movw	r30, r18
    13d4:	20 81       	ld	r18, Z
    13d6:	2f 7d       	andi	r18, 0xDF	; 223
    13d8:	fc 01       	movw	r30, r24
    13da:	20 83       	st	Z, r18
          Can_set_idemsk();
    13dc:	84 ef       	ldi	r24, 0xF4	; 244
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	24 ef       	ldi	r18, 0xF4	; 244
    13e2:	30 e0       	ldi	r19, 0x00	; 0
    13e4:	f9 01       	movw	r30, r18
    13e6:	20 81       	ld	r18, Z
    13e8:	21 60       	ori	r18, 0x01	; 1
    13ea:	fc 01       	movw	r30, r24
    13ec:	20 83       	st	Z, r18
          Can_config_rx();       
    13ee:	8f ee       	ldi	r24, 0xEF	; 239
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	2f ee       	ldi	r18, 0xEF	; 239
    13f4:	30 e0       	ldi	r19, 0x00	; 0
    13f6:	f9 01       	movw	r30, r18
    13f8:	20 81       	ld	r18, Z
    13fa:	2f 73       	andi	r18, 0x3F	; 63
    13fc:	fc 01       	movw	r30, r24
    13fe:	20 83       	st	Z, r18
    1400:	8f ee       	ldi	r24, 0xEF	; 239
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	2f ee       	ldi	r18, 0xEF	; 239
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	f9 01       	movw	r30, r18
    140a:	20 81       	ld	r18, Z
    140c:	20 68       	ori	r18, 0x80	; 128
    140e:	fc 01       	movw	r30, r24
    1410:	20 83       	st	Z, r18
          break;
    1412:	1c c2       	rjmp	.+1080   	; 0x184c <__stack+0xf4d>
        //------------      
        case CMD_REPLY:
          for (cpt=0;cpt<cmd->dlc;cpt++) CANMSG = *(cmd->pt_data + cpt);
    1414:	19 82       	std	Y+1, r1	; 0x01
    1416:	13 c0       	rjmp	.+38     	; 0x143e <__stack+0xb3f>
    1418:	8a ef       	ldi	r24, 0xFA	; 250
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	29 85       	ldd	r18, Y+9	; 0x09
    141e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1420:	f9 01       	movw	r30, r18
    1422:	47 81       	ldd	r20, Z+7	; 0x07
    1424:	50 85       	ldd	r21, Z+8	; 0x08
    1426:	29 81       	ldd	r18, Y+1	; 0x01
    1428:	22 2f       	mov	r18, r18
    142a:	30 e0       	ldi	r19, 0x00	; 0
    142c:	24 0f       	add	r18, r20
    142e:	35 1f       	adc	r19, r21
    1430:	f9 01       	movw	r30, r18
    1432:	20 81       	ld	r18, Z
    1434:	fc 01       	movw	r30, r24
    1436:	20 83       	st	Z, r18
    1438:	89 81       	ldd	r24, Y+1	; 0x01
    143a:	8f 5f       	subi	r24, 0xFF	; 255
    143c:	89 83       	std	Y+1, r24	; 0x01
    143e:	89 85       	ldd	r24, Y+9	; 0x09
    1440:	9a 85       	ldd	r25, Y+10	; 0x0a
    1442:	fc 01       	movw	r30, r24
    1444:	96 81       	ldd	r25, Z+6	; 0x06
    1446:	89 81       	ldd	r24, Y+1	; 0x01
    1448:	89 17       	cp	r24, r25
    144a:	30 f3       	brcs	.-52     	; 0x1418 <__stack+0xb19>
          u32_temp=0; Can_set_ext_msk(u32_temp);
    144c:	1d 82       	std	Y+5, r1	; 0x05
    144e:	1e 82       	std	Y+6, r1	; 0x06
    1450:	1f 82       	std	Y+7, r1	; 0x07
    1452:	18 86       	std	Y+8, r1	; 0x08
    1454:	27 ef       	ldi	r18, 0xF7	; 247
    1456:	30 e0       	ldi	r19, 0x00	; 0
    1458:	ce 01       	movw	r24, r28
    145a:	05 96       	adiw	r24, 0x05	; 5
    145c:	03 96       	adiw	r24, 0x03	; 3
    145e:	fc 01       	movw	r30, r24
    1460:	80 81       	ld	r24, Z
    1462:	48 2f       	mov	r20, r24
    1464:	44 0f       	add	r20, r20
    1466:	44 0f       	add	r20, r20
    1468:	44 0f       	add	r20, r20
    146a:	ce 01       	movw	r24, r28
    146c:	05 96       	adiw	r24, 0x05	; 5
    146e:	02 96       	adiw	r24, 0x02	; 2
    1470:	fc 01       	movw	r30, r24
    1472:	80 81       	ld	r24, Z
    1474:	82 95       	swap	r24
    1476:	86 95       	lsr	r24
    1478:	87 70       	andi	r24, 0x07	; 7
    147a:	84 0f       	add	r24, r20
    147c:	f9 01       	movw	r30, r18
    147e:	80 83       	st	Z, r24
    1480:	26 ef       	ldi	r18, 0xF6	; 246
    1482:	30 e0       	ldi	r19, 0x00	; 0
    1484:	ce 01       	movw	r24, r28
    1486:	05 96       	adiw	r24, 0x05	; 5
    1488:	02 96       	adiw	r24, 0x02	; 2
    148a:	fc 01       	movw	r30, r24
    148c:	80 81       	ld	r24, Z
    148e:	48 2f       	mov	r20, r24
    1490:	44 0f       	add	r20, r20
    1492:	44 0f       	add	r20, r20
    1494:	44 0f       	add	r20, r20
    1496:	ce 01       	movw	r24, r28
    1498:	05 96       	adiw	r24, 0x05	; 5
    149a:	01 96       	adiw	r24, 0x01	; 1
    149c:	fc 01       	movw	r30, r24
    149e:	80 81       	ld	r24, Z
    14a0:	82 95       	swap	r24
    14a2:	86 95       	lsr	r24
    14a4:	87 70       	andi	r24, 0x07	; 7
    14a6:	84 0f       	add	r24, r20
    14a8:	f9 01       	movw	r30, r18
    14aa:	80 83       	st	Z, r24
    14ac:	25 ef       	ldi	r18, 0xF5	; 245
    14ae:	30 e0       	ldi	r19, 0x00	; 0
    14b0:	ce 01       	movw	r24, r28
    14b2:	05 96       	adiw	r24, 0x05	; 5
    14b4:	01 96       	adiw	r24, 0x01	; 1
    14b6:	fc 01       	movw	r30, r24
    14b8:	80 81       	ld	r24, Z
    14ba:	48 2f       	mov	r20, r24
    14bc:	44 0f       	add	r20, r20
    14be:	44 0f       	add	r20, r20
    14c0:	44 0f       	add	r20, r20
    14c2:	ce 01       	movw	r24, r28
    14c4:	05 96       	adiw	r24, 0x05	; 5
    14c6:	fc 01       	movw	r30, r24
    14c8:	80 81       	ld	r24, Z
    14ca:	82 95       	swap	r24
    14cc:	86 95       	lsr	r24
    14ce:	87 70       	andi	r24, 0x07	; 7
    14d0:	84 0f       	add	r24, r20
    14d2:	f9 01       	movw	r30, r18
    14d4:	80 83       	st	Z, r24
    14d6:	84 ef       	ldi	r24, 0xF4	; 244
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	9e 01       	movw	r18, r28
    14dc:	2b 5f       	subi	r18, 0xFB	; 251
    14de:	3f 4f       	sbci	r19, 0xFF	; 255
    14e0:	f9 01       	movw	r30, r18
    14e2:	20 81       	ld	r18, Z
    14e4:	22 0f       	add	r18, r18
    14e6:	22 0f       	add	r18, r18
    14e8:	22 0f       	add	r18, r18
    14ea:	fc 01       	movw	r30, r24
    14ec:	20 83       	st	Z, r18
          Can_set_dlc(cmd->dlc);
    14ee:	8f ee       	ldi	r24, 0xEF	; 239
    14f0:	90 e0       	ldi	r25, 0x00	; 0
    14f2:	2f ee       	ldi	r18, 0xEF	; 239
    14f4:	30 e0       	ldi	r19, 0x00	; 0
    14f6:	f9 01       	movw	r30, r18
    14f8:	40 81       	ld	r20, Z
    14fa:	29 85       	ldd	r18, Y+9	; 0x09
    14fc:	3a 85       	ldd	r19, Y+10	; 0x0a
    14fe:	f9 01       	movw	r30, r18
    1500:	26 81       	ldd	r18, Z+6	; 0x06
    1502:	24 2b       	or	r18, r20
    1504:	fc 01       	movw	r30, r24
    1506:	20 83       	st	Z, r18
          cmd->ctrl.rtr=1; Can_set_rtrmsk(); Can_set_rtr();
    1508:	89 85       	ldd	r24, Y+9	; 0x09
    150a:	9a 85       	ldd	r25, Y+10	; 0x0a
    150c:	21 e0       	ldi	r18, 0x01	; 1
    150e:	fc 01       	movw	r30, r24
    1510:	22 87       	std	Z+10, r18	; 0x0a
    1512:	84 ef       	ldi	r24, 0xF4	; 244
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	24 ef       	ldi	r18, 0xF4	; 244
    1518:	30 e0       	ldi	r19, 0x00	; 0
    151a:	f9 01       	movw	r30, r18
    151c:	20 81       	ld	r18, Z
    151e:	24 60       	ori	r18, 0x04	; 4
    1520:	fc 01       	movw	r30, r24
    1522:	20 83       	st	Z, r18
    1524:	80 ef       	ldi	r24, 0xF0	; 240
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	20 ef       	ldi	r18, 0xF0	; 240
    152a:	30 e0       	ldi	r19, 0x00	; 0
    152c:	f9 01       	movw	r30, r18
    152e:	20 81       	ld	r18, Z
    1530:	24 60       	ori	r18, 0x04	; 4
    1532:	fc 01       	movw	r30, r24
    1534:	20 83       	st	Z, r18
          Can_set_rplv();
    1536:	8f ee       	ldi	r24, 0xEF	; 239
    1538:	90 e0       	ldi	r25, 0x00	; 0
    153a:	2f ee       	ldi	r18, 0xEF	; 239
    153c:	30 e0       	ldi	r19, 0x00	; 0
    153e:	f9 01       	movw	r30, r18
    1540:	20 81       	ld	r18, Z
    1542:	20 62       	ori	r18, 0x20	; 32
    1544:	fc 01       	movw	r30, r24
    1546:	20 83       	st	Z, r18
          Can_clear_idemsk();
    1548:	84 ef       	ldi	r24, 0xF4	; 244
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	24 ef       	ldi	r18, 0xF4	; 244
    154e:	30 e0       	ldi	r19, 0x00	; 0
    1550:	f9 01       	movw	r30, r18
    1552:	20 81       	ld	r18, Z
    1554:	2e 7f       	andi	r18, 0xFE	; 254
    1556:	fc 01       	movw	r30, r24
    1558:	20 83       	st	Z, r18
          Can_config_rx();       
    155a:	8f ee       	ldi	r24, 0xEF	; 239
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	2f ee       	ldi	r18, 0xEF	; 239
    1560:	30 e0       	ldi	r19, 0x00	; 0
    1562:	f9 01       	movw	r30, r18
    1564:	20 81       	ld	r18, Z
    1566:	2f 73       	andi	r18, 0x3F	; 63
    1568:	fc 01       	movw	r30, r24
    156a:	20 83       	st	Z, r18
    156c:	8f ee       	ldi	r24, 0xEF	; 239
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	2f ee       	ldi	r18, 0xEF	; 239
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	f9 01       	movw	r30, r18
    1576:	20 81       	ld	r18, Z
    1578:	20 68       	ori	r18, 0x80	; 128
    157a:	fc 01       	movw	r30, r24
    157c:	20 83       	st	Z, r18
          break;
    157e:	66 c1       	rjmp	.+716    	; 0x184c <__stack+0xf4d>
        //------------      
        case CMD_REPLY_MASKED:
          if (cmd->ctrl.ide){ Can_set_ext_id(cmd->id.ext);}
    1580:	89 85       	ldd	r24, Y+9	; 0x09
    1582:	9a 85       	ldd	r25, Y+10	; 0x0a
    1584:	fc 01       	movw	r30, r24
    1586:	83 85       	ldd	r24, Z+11	; 0x0b
    1588:	88 23       	and	r24, r24
    158a:	09 f4       	brne	.+2      	; 0x158e <__stack+0xc8f>
    158c:	69 c0       	rjmp	.+210    	; 0x1660 <__stack+0xd61>
    158e:	83 ef       	ldi	r24, 0xF3	; 243
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	29 85       	ldd	r18, Y+9	; 0x09
    1594:	3a 85       	ldd	r19, Y+10	; 0x0a
    1596:	2e 5f       	subi	r18, 0xFE	; 254
    1598:	3f 4f       	sbci	r19, 0xFF	; 255
    159a:	2d 5f       	subi	r18, 0xFD	; 253
    159c:	3f 4f       	sbci	r19, 0xFF	; 255
    159e:	f9 01       	movw	r30, r18
    15a0:	20 81       	ld	r18, Z
    15a2:	42 2f       	mov	r20, r18
    15a4:	44 0f       	add	r20, r20
    15a6:	44 0f       	add	r20, r20
    15a8:	44 0f       	add	r20, r20
    15aa:	29 85       	ldd	r18, Y+9	; 0x09
    15ac:	3a 85       	ldd	r19, Y+10	; 0x0a
    15ae:	2e 5f       	subi	r18, 0xFE	; 254
    15b0:	3f 4f       	sbci	r19, 0xFF	; 255
    15b2:	2e 5f       	subi	r18, 0xFE	; 254
    15b4:	3f 4f       	sbci	r19, 0xFF	; 255
    15b6:	f9 01       	movw	r30, r18
    15b8:	20 81       	ld	r18, Z
    15ba:	22 95       	swap	r18
    15bc:	26 95       	lsr	r18
    15be:	27 70       	andi	r18, 0x07	; 7
    15c0:	24 0f       	add	r18, r20
    15c2:	fc 01       	movw	r30, r24
    15c4:	20 83       	st	Z, r18
    15c6:	82 ef       	ldi	r24, 0xF2	; 242
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	29 85       	ldd	r18, Y+9	; 0x09
    15cc:	3a 85       	ldd	r19, Y+10	; 0x0a
    15ce:	2e 5f       	subi	r18, 0xFE	; 254
    15d0:	3f 4f       	sbci	r19, 0xFF	; 255
    15d2:	2e 5f       	subi	r18, 0xFE	; 254
    15d4:	3f 4f       	sbci	r19, 0xFF	; 255
    15d6:	f9 01       	movw	r30, r18
    15d8:	20 81       	ld	r18, Z
    15da:	42 2f       	mov	r20, r18
    15dc:	44 0f       	add	r20, r20
    15de:	44 0f       	add	r20, r20
    15e0:	44 0f       	add	r20, r20
    15e2:	29 85       	ldd	r18, Y+9	; 0x09
    15e4:	3a 85       	ldd	r19, Y+10	; 0x0a
    15e6:	2e 5f       	subi	r18, 0xFE	; 254
    15e8:	3f 4f       	sbci	r19, 0xFF	; 255
    15ea:	2f 5f       	subi	r18, 0xFF	; 255
    15ec:	3f 4f       	sbci	r19, 0xFF	; 255
    15ee:	f9 01       	movw	r30, r18
    15f0:	20 81       	ld	r18, Z
    15f2:	22 95       	swap	r18
    15f4:	26 95       	lsr	r18
    15f6:	27 70       	andi	r18, 0x07	; 7
    15f8:	24 0f       	add	r18, r20
    15fa:	fc 01       	movw	r30, r24
    15fc:	20 83       	st	Z, r18
    15fe:	81 ef       	ldi	r24, 0xF1	; 241
    1600:	90 e0       	ldi	r25, 0x00	; 0
    1602:	29 85       	ldd	r18, Y+9	; 0x09
    1604:	3a 85       	ldd	r19, Y+10	; 0x0a
    1606:	2e 5f       	subi	r18, 0xFE	; 254
    1608:	3f 4f       	sbci	r19, 0xFF	; 255
    160a:	2f 5f       	subi	r18, 0xFF	; 255
    160c:	3f 4f       	sbci	r19, 0xFF	; 255
    160e:	f9 01       	movw	r30, r18
    1610:	20 81       	ld	r18, Z
    1612:	42 2f       	mov	r20, r18
    1614:	44 0f       	add	r20, r20
    1616:	44 0f       	add	r20, r20
    1618:	44 0f       	add	r20, r20
    161a:	29 85       	ldd	r18, Y+9	; 0x09
    161c:	3a 85       	ldd	r19, Y+10	; 0x0a
    161e:	2e 5f       	subi	r18, 0xFE	; 254
    1620:	3f 4f       	sbci	r19, 0xFF	; 255
    1622:	f9 01       	movw	r30, r18
    1624:	20 81       	ld	r18, Z
    1626:	22 95       	swap	r18
    1628:	26 95       	lsr	r18
    162a:	27 70       	andi	r18, 0x07	; 7
    162c:	24 0f       	add	r18, r20
    162e:	fc 01       	movw	r30, r24
    1630:	20 83       	st	Z, r18
    1632:	80 ef       	ldi	r24, 0xF0	; 240
    1634:	90 e0       	ldi	r25, 0x00	; 0
    1636:	29 85       	ldd	r18, Y+9	; 0x09
    1638:	3a 85       	ldd	r19, Y+10	; 0x0a
    163a:	2e 5f       	subi	r18, 0xFE	; 254
    163c:	3f 4f       	sbci	r19, 0xFF	; 255
    163e:	f9 01       	movw	r30, r18
    1640:	20 81       	ld	r18, Z
    1642:	22 0f       	add	r18, r18
    1644:	22 0f       	add	r18, r18
    1646:	22 0f       	add	r18, r18
    1648:	fc 01       	movw	r30, r24
    164a:	20 83       	st	Z, r18
    164c:	8f ee       	ldi	r24, 0xEF	; 239
    164e:	90 e0       	ldi	r25, 0x00	; 0
    1650:	2f ee       	ldi	r18, 0xEF	; 239
    1652:	30 e0       	ldi	r19, 0x00	; 0
    1654:	f9 01       	movw	r30, r18
    1656:	20 81       	ld	r18, Z
    1658:	20 61       	ori	r18, 0x10	; 16
    165a:	fc 01       	movw	r30, r24
    165c:	20 83       	st	Z, r18
    165e:	30 c0       	rjmp	.+96     	; 0x16c0 <__stack+0xdc1>
          else              { Can_set_std_id(cmd->id.std);}
    1660:	83 ef       	ldi	r24, 0xF3	; 243
    1662:	90 e0       	ldi	r25, 0x00	; 0
    1664:	29 85       	ldd	r18, Y+9	; 0x09
    1666:	3a 85       	ldd	r19, Y+10	; 0x0a
    1668:	2e 5f       	subi	r18, 0xFE	; 254
    166a:	3f 4f       	sbci	r19, 0xFF	; 255
    166c:	2f 5f       	subi	r18, 0xFF	; 255
    166e:	3f 4f       	sbci	r19, 0xFF	; 255
    1670:	f9 01       	movw	r30, r18
    1672:	20 81       	ld	r18, Z
    1674:	42 2f       	mov	r20, r18
    1676:	42 95       	swap	r20
    1678:	44 0f       	add	r20, r20
    167a:	40 7e       	andi	r20, 0xE0	; 224
    167c:	29 85       	ldd	r18, Y+9	; 0x09
    167e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1680:	2e 5f       	subi	r18, 0xFE	; 254
    1682:	3f 4f       	sbci	r19, 0xFF	; 255
    1684:	f9 01       	movw	r30, r18
    1686:	20 81       	ld	r18, Z
    1688:	26 95       	lsr	r18
    168a:	26 95       	lsr	r18
    168c:	26 95       	lsr	r18
    168e:	24 0f       	add	r18, r20
    1690:	fc 01       	movw	r30, r24
    1692:	20 83       	st	Z, r18
    1694:	82 ef       	ldi	r24, 0xF2	; 242
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	29 85       	ldd	r18, Y+9	; 0x09
    169a:	3a 85       	ldd	r19, Y+10	; 0x0a
    169c:	2e 5f       	subi	r18, 0xFE	; 254
    169e:	3f 4f       	sbci	r19, 0xFF	; 255
    16a0:	f9 01       	movw	r30, r18
    16a2:	20 81       	ld	r18, Z
    16a4:	22 95       	swap	r18
    16a6:	22 0f       	add	r18, r18
    16a8:	20 7e       	andi	r18, 0xE0	; 224
    16aa:	fc 01       	movw	r30, r24
    16ac:	20 83       	st	Z, r18
    16ae:	8f ee       	ldi	r24, 0xEF	; 239
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	2f ee       	ldi	r18, 0xEF	; 239
    16b4:	30 e0       	ldi	r19, 0x00	; 0
    16b6:	f9 01       	movw	r30, r18
    16b8:	20 81       	ld	r18, Z
    16ba:	2f 7e       	andi	r18, 0xEF	; 239
    16bc:	fc 01       	movw	r30, r24
    16be:	20 83       	st	Z, r18
          for (cpt=0;cpt<cmd->dlc;cpt++) CANMSG = *(cmd->pt_data + cpt);
    16c0:	19 82       	std	Y+1, r1	; 0x01
    16c2:	13 c0       	rjmp	.+38     	; 0x16ea <__stack+0xdeb>
    16c4:	8a ef       	ldi	r24, 0xFA	; 250
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	29 85       	ldd	r18, Y+9	; 0x09
    16ca:	3a 85       	ldd	r19, Y+10	; 0x0a
    16cc:	f9 01       	movw	r30, r18
    16ce:	47 81       	ldd	r20, Z+7	; 0x07
    16d0:	50 85       	ldd	r21, Z+8	; 0x08
    16d2:	29 81       	ldd	r18, Y+1	; 0x01
    16d4:	22 2f       	mov	r18, r18
    16d6:	30 e0       	ldi	r19, 0x00	; 0
    16d8:	24 0f       	add	r18, r20
    16da:	35 1f       	adc	r19, r21
    16dc:	f9 01       	movw	r30, r18
    16de:	20 81       	ld	r18, Z
    16e0:	fc 01       	movw	r30, r24
    16e2:	20 83       	st	Z, r18
    16e4:	89 81       	ldd	r24, Y+1	; 0x01
    16e6:	8f 5f       	subi	r24, 0xFF	; 255
    16e8:	89 83       	std	Y+1, r24	; 0x01
    16ea:	89 85       	ldd	r24, Y+9	; 0x09
    16ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    16ee:	fc 01       	movw	r30, r24
    16f0:	96 81       	ldd	r25, Z+6	; 0x06
    16f2:	89 81       	ldd	r24, Y+1	; 0x01
    16f4:	89 17       	cp	r24, r25
    16f6:	30 f3       	brcs	.-52     	; 0x16c4 <__stack+0xdc5>
          u32_temp=~0; Can_set_ext_msk(u32_temp);
    16f8:	8f ef       	ldi	r24, 0xFF	; 255
    16fa:	9f ef       	ldi	r25, 0xFF	; 255
    16fc:	dc 01       	movw	r26, r24
    16fe:	8d 83       	std	Y+5, r24	; 0x05
    1700:	9e 83       	std	Y+6, r25	; 0x06
    1702:	af 83       	std	Y+7, r26	; 0x07
    1704:	b8 87       	std	Y+8, r27	; 0x08
    1706:	27 ef       	ldi	r18, 0xF7	; 247
    1708:	30 e0       	ldi	r19, 0x00	; 0
    170a:	ce 01       	movw	r24, r28
    170c:	05 96       	adiw	r24, 0x05	; 5
    170e:	03 96       	adiw	r24, 0x03	; 3
    1710:	fc 01       	movw	r30, r24
    1712:	80 81       	ld	r24, Z
    1714:	48 2f       	mov	r20, r24
    1716:	44 0f       	add	r20, r20
    1718:	44 0f       	add	r20, r20
    171a:	44 0f       	add	r20, r20
    171c:	ce 01       	movw	r24, r28
    171e:	05 96       	adiw	r24, 0x05	; 5
    1720:	02 96       	adiw	r24, 0x02	; 2
    1722:	fc 01       	movw	r30, r24
    1724:	80 81       	ld	r24, Z
    1726:	82 95       	swap	r24
    1728:	86 95       	lsr	r24
    172a:	87 70       	andi	r24, 0x07	; 7
    172c:	84 0f       	add	r24, r20
    172e:	f9 01       	movw	r30, r18
    1730:	80 83       	st	Z, r24
    1732:	26 ef       	ldi	r18, 0xF6	; 246
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	ce 01       	movw	r24, r28
    1738:	05 96       	adiw	r24, 0x05	; 5
    173a:	02 96       	adiw	r24, 0x02	; 2
    173c:	fc 01       	movw	r30, r24
    173e:	80 81       	ld	r24, Z
    1740:	48 2f       	mov	r20, r24
    1742:	44 0f       	add	r20, r20
    1744:	44 0f       	add	r20, r20
    1746:	44 0f       	add	r20, r20
    1748:	ce 01       	movw	r24, r28
    174a:	05 96       	adiw	r24, 0x05	; 5
    174c:	01 96       	adiw	r24, 0x01	; 1
    174e:	fc 01       	movw	r30, r24
    1750:	80 81       	ld	r24, Z
    1752:	82 95       	swap	r24
    1754:	86 95       	lsr	r24
    1756:	87 70       	andi	r24, 0x07	; 7
    1758:	84 0f       	add	r24, r20
    175a:	f9 01       	movw	r30, r18
    175c:	80 83       	st	Z, r24
    175e:	25 ef       	ldi	r18, 0xF5	; 245
    1760:	30 e0       	ldi	r19, 0x00	; 0
    1762:	ce 01       	movw	r24, r28
    1764:	05 96       	adiw	r24, 0x05	; 5
    1766:	01 96       	adiw	r24, 0x01	; 1
    1768:	fc 01       	movw	r30, r24
    176a:	80 81       	ld	r24, Z
    176c:	48 2f       	mov	r20, r24
    176e:	44 0f       	add	r20, r20
    1770:	44 0f       	add	r20, r20
    1772:	44 0f       	add	r20, r20
    1774:	ce 01       	movw	r24, r28
    1776:	05 96       	adiw	r24, 0x05	; 5
    1778:	fc 01       	movw	r30, r24
    177a:	80 81       	ld	r24, Z
    177c:	82 95       	swap	r24
    177e:	86 95       	lsr	r24
    1780:	87 70       	andi	r24, 0x07	; 7
    1782:	84 0f       	add	r24, r20
    1784:	f9 01       	movw	r30, r18
    1786:	80 83       	st	Z, r24
    1788:	84 ef       	ldi	r24, 0xF4	; 244
    178a:	90 e0       	ldi	r25, 0x00	; 0
    178c:	9e 01       	movw	r18, r28
    178e:	2b 5f       	subi	r18, 0xFB	; 251
    1790:	3f 4f       	sbci	r19, 0xFF	; 255
    1792:	f9 01       	movw	r30, r18
    1794:	20 81       	ld	r18, Z
    1796:	22 0f       	add	r18, r18
    1798:	22 0f       	add	r18, r18
    179a:	22 0f       	add	r18, r18
    179c:	fc 01       	movw	r30, r24
    179e:	20 83       	st	Z, r18
          Can_set_dlc(cmd->dlc);
    17a0:	8f ee       	ldi	r24, 0xEF	; 239
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	2f ee       	ldi	r18, 0xEF	; 239
    17a6:	30 e0       	ldi	r19, 0x00	; 0
    17a8:	f9 01       	movw	r30, r18
    17aa:	40 81       	ld	r20, Z
    17ac:	29 85       	ldd	r18, Y+9	; 0x09
    17ae:	3a 85       	ldd	r19, Y+10	; 0x0a
    17b0:	f9 01       	movw	r30, r18
    17b2:	26 81       	ldd	r18, Z+6	; 0x06
    17b4:	24 2b       	or	r18, r20
    17b6:	fc 01       	movw	r30, r24
    17b8:	20 83       	st	Z, r18
          cmd->ctrl.rtr=1; Can_set_rtrmsk(); Can_set_rtr();
    17ba:	89 85       	ldd	r24, Y+9	; 0x09
    17bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    17be:	21 e0       	ldi	r18, 0x01	; 1
    17c0:	fc 01       	movw	r30, r24
    17c2:	22 87       	std	Z+10, r18	; 0x0a
    17c4:	84 ef       	ldi	r24, 0xF4	; 244
    17c6:	90 e0       	ldi	r25, 0x00	; 0
    17c8:	24 ef       	ldi	r18, 0xF4	; 244
    17ca:	30 e0       	ldi	r19, 0x00	; 0
    17cc:	f9 01       	movw	r30, r18
    17ce:	20 81       	ld	r18, Z
    17d0:	24 60       	ori	r18, 0x04	; 4
    17d2:	fc 01       	movw	r30, r24
    17d4:	20 83       	st	Z, r18
    17d6:	80 ef       	ldi	r24, 0xF0	; 240
    17d8:	90 e0       	ldi	r25, 0x00	; 0
    17da:	20 ef       	ldi	r18, 0xF0	; 240
    17dc:	30 e0       	ldi	r19, 0x00	; 0
    17de:	f9 01       	movw	r30, r18
    17e0:	20 81       	ld	r18, Z
    17e2:	24 60       	ori	r18, 0x04	; 4
    17e4:	fc 01       	movw	r30, r24
    17e6:	20 83       	st	Z, r18
          Can_set_rplv();
    17e8:	8f ee       	ldi	r24, 0xEF	; 239
    17ea:	90 e0       	ldi	r25, 0x00	; 0
    17ec:	2f ee       	ldi	r18, 0xEF	; 239
    17ee:	30 e0       	ldi	r19, 0x00	; 0
    17f0:	f9 01       	movw	r30, r18
    17f2:	20 81       	ld	r18, Z
    17f4:	20 62       	ori	r18, 0x20	; 32
    17f6:	fc 01       	movw	r30, r24
    17f8:	20 83       	st	Z, r18
          Can_set_idemsk();
    17fa:	84 ef       	ldi	r24, 0xF4	; 244
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	24 ef       	ldi	r18, 0xF4	; 244
    1800:	30 e0       	ldi	r19, 0x00	; 0
    1802:	f9 01       	movw	r30, r18
    1804:	20 81       	ld	r18, Z
    1806:	21 60       	ori	r18, 0x01	; 1
    1808:	fc 01       	movw	r30, r24
    180a:	20 83       	st	Z, r18
          Can_config_rx();       
    180c:	8f ee       	ldi	r24, 0xEF	; 239
    180e:	90 e0       	ldi	r25, 0x00	; 0
    1810:	2f ee       	ldi	r18, 0xEF	; 239
    1812:	30 e0       	ldi	r19, 0x00	; 0
    1814:	f9 01       	movw	r30, r18
    1816:	20 81       	ld	r18, Z
    1818:	2f 73       	andi	r18, 0x3F	; 63
    181a:	fc 01       	movw	r30, r24
    181c:	20 83       	st	Z, r18
    181e:	8f ee       	ldi	r24, 0xEF	; 239
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	2f ee       	ldi	r18, 0xEF	; 239
    1824:	30 e0       	ldi	r19, 0x00	; 0
    1826:	f9 01       	movw	r30, r18
    1828:	20 81       	ld	r18, Z
    182a:	20 68       	ori	r18, 0x80	; 128
    182c:	fc 01       	movw	r30, r24
    182e:	20 83       	st	Z, r18
          break;
    1830:	0d c0       	rjmp	.+26     	; 0x184c <__stack+0xf4d>
        //------------      
        default:
          // case CMD_NONE or not implemented command
          cmd->status = STATUS_CLEARED; 
    1832:	89 85       	ldd	r24, Y+9	; 0x09
    1834:	9a 85       	ldd	r25, Y+10	; 0x0a
    1836:	fc 01       	movw	r30, r24
    1838:	11 86       	std	Z+9, r1	; 0x09
          break;
    183a:	00 00       	nop
    183c:	07 c0       	rjmp	.+14     	; 0x184c <__stack+0xf4d>
        //------------      
      } // switch (cmd ...
    } // if (mob_handle ...
    else
    {
      cmd->status = MOB_NOT_REACHED;
    183e:	89 85       	ldd	r24, Y+9	; 0x09
    1840:	9a 85       	ldd	r25, Y+10	; 0x0a
    1842:	2f e1       	ldi	r18, 0x1F	; 31
    1844:	fc 01       	movw	r30, r24
    1846:	21 87       	std	Z+9, r18	; 0x09
      return CAN_CMD_REFUSED;
    1848:	8f ef       	ldi	r24, 0xFF	; 255
    184a:	01 c0       	rjmp	.+2      	; 0x184e <__stack+0xf4f>
    }
  } // else of no CMD_ABORT
  return CAN_CMD_ACCEPTED;
    184c:	80 e0       	ldi	r24, 0x00	; 0
}
    184e:	2a 96       	adiw	r28, 0x0a	; 10
    1850:	0f b6       	in	r0, 0x3f	; 63
    1852:	f8 94       	cli
    1854:	de bf       	out	0x3e, r29	; 62
    1856:	0f be       	out	0x3f, r0	; 63
    1858:	cd bf       	out	0x3d, r28	; 61
    185a:	df 91       	pop	r29
    185c:	cf 91       	pop	r28
    185e:	08 95       	ret

00001860 <can_get_status>:
//!         CAN_STATUS_ERROR         - Error in configuration or in the
//!                                    CAN communication
//!
//------------------------------------------------------------------------------
uint8_t can_get_status (st_cmd_t* cmd)
{
    1860:	cf 93       	push	r28
    1862:	df 93       	push	r29
    1864:	00 d0       	rcall	.+0      	; 0x1866 <can_get_status+0x6>
    1866:	00 d0       	rcall	.+0      	; 0x1868 <can_get_status+0x8>
    1868:	cd b7       	in	r28, 0x3d	; 61
    186a:	de b7       	in	r29, 0x3e	; 62
    186c:	9c 83       	std	Y+4, r25	; 0x04
    186e:	8b 83       	std	Y+3, r24	; 0x03
    uint8_t a_status, rtn_val;
     
    a_status = cmd->status;
    1870:	8b 81       	ldd	r24, Y+3	; 0x03
    1872:	9c 81       	ldd	r25, Y+4	; 0x04
    1874:	fc 01       	movw	r30, r24
    1876:	81 85       	ldd	r24, Z+9	; 0x09
    1878:	8a 83       	std	Y+2, r24	; 0x02
    if ((a_status==STATUS_CLEARED)||(a_status==MOB_NOT_REACHED)||(a_status==MOB_DISABLE))
    187a:	8a 81       	ldd	r24, Y+2	; 0x02
    187c:	88 23       	and	r24, r24
    187e:	31 f0       	breq	.+12     	; 0x188c <can_get_status+0x2c>
    1880:	8a 81       	ldd	r24, Y+2	; 0x02
    1882:	8f 31       	cpi	r24, 0x1F	; 31
    1884:	19 f0       	breq	.+6      	; 0x188c <can_get_status+0x2c>
    1886:	8a 81       	ldd	r24, Y+2	; 0x02
    1888:	8f 3f       	cpi	r24, 0xFF	; 255
    188a:	11 f4       	brne	.+4      	; 0x1890 <can_get_status+0x30>
    {
        return CAN_STATUS_ERROR;
    188c:	82 e0       	ldi	r24, 0x02	; 2
    188e:	14 c1       	rjmp	.+552    	; 0x1ab8 <can_get_status+0x258>
    }

    Can_set_mob(cmd->handle);
    1890:	8d ee       	ldi	r24, 0xED	; 237
    1892:	90 e0       	ldi	r25, 0x00	; 0
    1894:	2b 81       	ldd	r18, Y+3	; 0x03
    1896:	3c 81       	ldd	r19, Y+4	; 0x04
    1898:	f9 01       	movw	r30, r18
    189a:	20 81       	ld	r18, Z
    189c:	22 95       	swap	r18
    189e:	20 7f       	andi	r18, 0xF0	; 240
    18a0:	fc 01       	movw	r30, r24
    18a2:	20 83       	st	Z, r18
    a_status = can_get_mob_status();
    18a4:	0e 94 fd 00 	call	0x1fa	; 0x1fa <can_get_mob_status>
    18a8:	8a 83       	std	Y+2, r24	; 0x02
    
    switch (a_status)
    18aa:	8a 81       	ldd	r24, Y+2	; 0x02
    18ac:	88 2f       	mov	r24, r24
    18ae:	90 e0       	ldi	r25, 0x00	; 0
    18b0:	80 32       	cpi	r24, 0x20	; 32
    18b2:	91 05       	cpc	r25, r1
    18b4:	89 f0       	breq	.+34     	; 0x18d8 <can_get_status+0x78>
    18b6:	81 32       	cpi	r24, 0x21	; 33
    18b8:	91 05       	cpc	r25, r1
    18ba:	1c f4       	brge	.+6      	; 0x18c2 <can_get_status+0x62>
    18bc:	89 2b       	or	r24, r25
    18be:	49 f0       	breq	.+18     	; 0x18d2 <can_get_status+0x72>
    18c0:	e5 c0       	rjmp	.+458    	; 0x1a8c <can_get_status+0x22c>
    18c2:	80 34       	cpi	r24, 0x40	; 64
    18c4:	91 05       	cpc	r25, r1
    18c6:	09 f4       	brne	.+2      	; 0x18ca <can_get_status+0x6a>
    18c8:	cd c0       	rjmp	.+410    	; 0x1a64 <can_get_status+0x204>
    18ca:	80 3a       	cpi	r24, 0xA0	; 160
    18cc:	91 05       	cpc	r25, r1
    18ce:	21 f0       	breq	.+8      	; 0x18d8 <can_get_status+0x78>
    18d0:	dd c0       	rjmp	.+442    	; 0x1a8c <can_get_status+0x22c>
    {
        case MOB_NOT_COMPLETED:
            // cmd->status not updated
            rtn_val = CAN_STATUS_NOT_COMPLETED;
    18d2:	81 e0       	ldi	r24, 0x01	; 1
    18d4:	89 83       	std	Y+1, r24	; 0x01
            break;
    18d6:	ef c0       	rjmp	.+478    	; 0x1ab6 <can_get_status+0x256>
        //---------------      
        case MOB_RX_COMPLETED:     
        case MOB_RX_COMPLETED_DLCW:
            cmd->dlc = Can_get_dlc();
    18d8:	8f ee       	ldi	r24, 0xEF	; 239
    18da:	90 e0       	ldi	r25, 0x00	; 0
    18dc:	fc 01       	movw	r30, r24
    18de:	80 81       	ld	r24, Z
    18e0:	28 2f       	mov	r18, r24
    18e2:	2f 70       	andi	r18, 0x0F	; 15
    18e4:	8b 81       	ldd	r24, Y+3	; 0x03
    18e6:	9c 81       	ldd	r25, Y+4	; 0x04
    18e8:	fc 01       	movw	r30, r24
    18ea:	26 83       	std	Z+6, r18	; 0x06
            can_get_data(cmd->pt_data);
    18ec:	8b 81       	ldd	r24, Y+3	; 0x03
    18ee:	9c 81       	ldd	r25, Y+4	; 0x04
    18f0:	fc 01       	movw	r30, r24
    18f2:	87 81       	ldd	r24, Z+7	; 0x07
    18f4:	90 85       	ldd	r25, Z+8	; 0x08
    18f6:	0e 94 2f 01 	call	0x25e	; 0x25e <can_get_data>
            cmd->ctrl.rtr = Can_get_rtr();
    18fa:	80 ef       	ldi	r24, 0xF0	; 240
    18fc:	90 e0       	ldi	r25, 0x00	; 0
    18fe:	fc 01       	movw	r30, r24
    1900:	80 81       	ld	r24, Z
    1902:	88 2f       	mov	r24, r24
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	84 70       	andi	r24, 0x04	; 4
    1908:	99 27       	eor	r25, r25
    190a:	95 95       	asr	r25
    190c:	87 95       	ror	r24
    190e:	95 95       	asr	r25
    1910:	87 95       	ror	r24
    1912:	21 e0       	ldi	r18, 0x01	; 1
    1914:	89 2b       	or	r24, r25
    1916:	09 f4       	brne	.+2      	; 0x191a <can_get_status+0xba>
    1918:	20 e0       	ldi	r18, 0x00	; 0
    191a:	8b 81       	ldd	r24, Y+3	; 0x03
    191c:	9c 81       	ldd	r25, Y+4	; 0x04
    191e:	fc 01       	movw	r30, r24
    1920:	22 87       	std	Z+10, r18	; 0x0a
            if (Can_get_ide()) // if extended frame
    1922:	8f ee       	ldi	r24, 0xEF	; 239
    1924:	90 e0       	ldi	r25, 0x00	; 0
    1926:	fc 01       	movw	r30, r24
    1928:	80 81       	ld	r24, Z
    192a:	88 2f       	mov	r24, r24
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	80 71       	andi	r24, 0x10	; 16
    1930:	99 27       	eor	r25, r25
    1932:	95 95       	asr	r25
    1934:	87 95       	ror	r24
    1936:	95 95       	asr	r25
    1938:	87 95       	ror	r24
    193a:	95 95       	asr	r25
    193c:	87 95       	ror	r24
    193e:	95 95       	asr	r25
    1940:	87 95       	ror	r24
    1942:	89 2b       	or	r24, r25
    1944:	09 f4       	brne	.+2      	; 0x1948 <can_get_status+0xe8>
    1946:	54 c0       	rjmp	.+168    	; 0x19f0 <can_get_status+0x190>
            {
                cmd->ctrl.ide = 1; // extended frame
    1948:	8b 81       	ldd	r24, Y+3	; 0x03
    194a:	9c 81       	ldd	r25, Y+4	; 0x04
    194c:	21 e0       	ldi	r18, 0x01	; 1
    194e:	fc 01       	movw	r30, r24
    1950:	23 87       	std	Z+11, r18	; 0x0b
                Can_get_ext_id(cmd->id.ext);
    1952:	8b 81       	ldd	r24, Y+3	; 0x03
    1954:	9c 81       	ldd	r25, Y+4	; 0x04
    1956:	02 96       	adiw	r24, 0x02	; 2
    1958:	03 96       	adiw	r24, 0x03	; 3
    195a:	23 ef       	ldi	r18, 0xF3	; 243
    195c:	30 e0       	ldi	r19, 0x00	; 0
    195e:	f9 01       	movw	r30, r18
    1960:	20 81       	ld	r18, Z
    1962:	26 95       	lsr	r18
    1964:	26 95       	lsr	r18
    1966:	26 95       	lsr	r18
    1968:	fc 01       	movw	r30, r24
    196a:	20 83       	st	Z, r18
    196c:	8b 81       	ldd	r24, Y+3	; 0x03
    196e:	9c 81       	ldd	r25, Y+4	; 0x04
    1970:	02 96       	adiw	r24, 0x02	; 2
    1972:	02 96       	adiw	r24, 0x02	; 2
    1974:	22 ef       	ldi	r18, 0xF2	; 242
    1976:	30 e0       	ldi	r19, 0x00	; 0
    1978:	f9 01       	movw	r30, r18
    197a:	20 81       	ld	r18, Z
    197c:	42 2f       	mov	r20, r18
    197e:	46 95       	lsr	r20
    1980:	46 95       	lsr	r20
    1982:	46 95       	lsr	r20
    1984:	23 ef       	ldi	r18, 0xF3	; 243
    1986:	30 e0       	ldi	r19, 0x00	; 0
    1988:	f9 01       	movw	r30, r18
    198a:	20 81       	ld	r18, Z
    198c:	22 95       	swap	r18
    198e:	22 0f       	add	r18, r18
    1990:	20 7e       	andi	r18, 0xE0	; 224
    1992:	24 0f       	add	r18, r20
    1994:	fc 01       	movw	r30, r24
    1996:	20 83       	st	Z, r18
    1998:	8b 81       	ldd	r24, Y+3	; 0x03
    199a:	9c 81       	ldd	r25, Y+4	; 0x04
    199c:	02 96       	adiw	r24, 0x02	; 2
    199e:	01 96       	adiw	r24, 0x01	; 1
    19a0:	21 ef       	ldi	r18, 0xF1	; 241
    19a2:	30 e0       	ldi	r19, 0x00	; 0
    19a4:	f9 01       	movw	r30, r18
    19a6:	20 81       	ld	r18, Z
    19a8:	42 2f       	mov	r20, r18
    19aa:	46 95       	lsr	r20
    19ac:	46 95       	lsr	r20
    19ae:	46 95       	lsr	r20
    19b0:	22 ef       	ldi	r18, 0xF2	; 242
    19b2:	30 e0       	ldi	r19, 0x00	; 0
    19b4:	f9 01       	movw	r30, r18
    19b6:	20 81       	ld	r18, Z
    19b8:	22 95       	swap	r18
    19ba:	22 0f       	add	r18, r18
    19bc:	20 7e       	andi	r18, 0xE0	; 224
    19be:	24 0f       	add	r18, r20
    19c0:	fc 01       	movw	r30, r24
    19c2:	20 83       	st	Z, r18
    19c4:	8b 81       	ldd	r24, Y+3	; 0x03
    19c6:	9c 81       	ldd	r25, Y+4	; 0x04
    19c8:	02 96       	adiw	r24, 0x02	; 2
    19ca:	20 ef       	ldi	r18, 0xF0	; 240
    19cc:	30 e0       	ldi	r19, 0x00	; 0
    19ce:	f9 01       	movw	r30, r18
    19d0:	20 81       	ld	r18, Z
    19d2:	42 2f       	mov	r20, r18
    19d4:	46 95       	lsr	r20
    19d6:	46 95       	lsr	r20
    19d8:	46 95       	lsr	r20
    19da:	21 ef       	ldi	r18, 0xF1	; 241
    19dc:	30 e0       	ldi	r19, 0x00	; 0
    19de:	f9 01       	movw	r30, r18
    19e0:	20 81       	ld	r18, Z
    19e2:	22 95       	swap	r18
    19e4:	22 0f       	add	r18, r18
    19e6:	20 7e       	andi	r18, 0xE0	; 224
    19e8:	24 0f       	add	r18, r20
    19ea:	fc 01       	movw	r30, r24
    19ec:	20 83       	st	Z, r18
    19ee:	26 c0       	rjmp	.+76     	; 0x1a3c <can_get_status+0x1dc>
            }
            else // else standard frame
                {
                    cmd->ctrl.ide = 0;
    19f0:	8b 81       	ldd	r24, Y+3	; 0x03
    19f2:	9c 81       	ldd	r25, Y+4	; 0x04
    19f4:	fc 01       	movw	r30, r24
    19f6:	13 86       	std	Z+11, r1	; 0x0b
                    Can_get_std_id(cmd->id.std);
    19f8:	8b 81       	ldd	r24, Y+3	; 0x03
    19fa:	9c 81       	ldd	r25, Y+4	; 0x04
    19fc:	02 96       	adiw	r24, 0x02	; 2
    19fe:	01 96       	adiw	r24, 0x01	; 1
    1a00:	23 ef       	ldi	r18, 0xF3	; 243
    1a02:	30 e0       	ldi	r19, 0x00	; 0
    1a04:	f9 01       	movw	r30, r18
    1a06:	20 81       	ld	r18, Z
    1a08:	22 95       	swap	r18
    1a0a:	26 95       	lsr	r18
    1a0c:	27 70       	andi	r18, 0x07	; 7
    1a0e:	fc 01       	movw	r30, r24
    1a10:	20 83       	st	Z, r18
    1a12:	8b 81       	ldd	r24, Y+3	; 0x03
    1a14:	9c 81       	ldd	r25, Y+4	; 0x04
    1a16:	02 96       	adiw	r24, 0x02	; 2
    1a18:	22 ef       	ldi	r18, 0xF2	; 242
    1a1a:	30 e0       	ldi	r19, 0x00	; 0
    1a1c:	f9 01       	movw	r30, r18
    1a1e:	20 81       	ld	r18, Z
    1a20:	42 2f       	mov	r20, r18
    1a22:	42 95       	swap	r20
    1a24:	46 95       	lsr	r20
    1a26:	47 70       	andi	r20, 0x07	; 7
    1a28:	23 ef       	ldi	r18, 0xF3	; 243
    1a2a:	30 e0       	ldi	r19, 0x00	; 0
    1a2c:	f9 01       	movw	r30, r18
    1a2e:	20 81       	ld	r18, Z
    1a30:	22 0f       	add	r18, r18
    1a32:	22 0f       	add	r18, r18
    1a34:	22 0f       	add	r18, r18
    1a36:	24 0f       	add	r18, r20
    1a38:	fc 01       	movw	r30, r24
    1a3a:	20 83       	st	Z, r18
                }
            // Status field of descriptor: 0x20 if Rx completed
            // Status field of descriptor: 0xA0 if Rx completed with DLCWarning    
            cmd->status = a_status;
    1a3c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a3e:	9c 81       	ldd	r25, Y+4	; 0x04
    1a40:	2a 81       	ldd	r18, Y+2	; 0x02
    1a42:	fc 01       	movw	r30, r24
    1a44:	21 87       	std	Z+9, r18	; 0x09
            Can_mob_abort();        // Freed the MOB
    1a46:	8f ee       	ldi	r24, 0xEF	; 239
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	2f ee       	ldi	r18, 0xEF	; 239
    1a4c:	30 e0       	ldi	r19, 0x00	; 0
    1a4e:	f9 01       	movw	r30, r18
    1a50:	20 81       	ld	r18, Z
    1a52:	2f 73       	andi	r18, 0x3F	; 63
    1a54:	fc 01       	movw	r30, r24
    1a56:	20 83       	st	Z, r18
            Can_clear_status_mob(); //   and reset MOb status
    1a58:	8e ee       	ldi	r24, 0xEE	; 238
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	fc 01       	movw	r30, r24
    1a5e:	10 82       	st	Z, r1
            rtn_val = CAN_STATUS_COMPLETED;
    1a60:	19 82       	std	Y+1, r1	; 0x01
            break;
    1a62:	29 c0       	rjmp	.+82     	; 0x1ab6 <can_get_status+0x256>
        //---------------      
        case MOB_TX_COMPLETED:     
            // Status field of descriptor: 0x40 if Tx completed
            cmd->status = a_status;
    1a64:	8b 81       	ldd	r24, Y+3	; 0x03
    1a66:	9c 81       	ldd	r25, Y+4	; 0x04
    1a68:	2a 81       	ldd	r18, Y+2	; 0x02
    1a6a:	fc 01       	movw	r30, r24
    1a6c:	21 87       	std	Z+9, r18	; 0x09
            Can_mob_abort();        // Freed the MOB
    1a6e:	8f ee       	ldi	r24, 0xEF	; 239
    1a70:	90 e0       	ldi	r25, 0x00	; 0
    1a72:	2f ee       	ldi	r18, 0xEF	; 239
    1a74:	30 e0       	ldi	r19, 0x00	; 0
    1a76:	f9 01       	movw	r30, r18
    1a78:	20 81       	ld	r18, Z
    1a7a:	2f 73       	andi	r18, 0x3F	; 63
    1a7c:	fc 01       	movw	r30, r24
    1a7e:	20 83       	st	Z, r18
            Can_clear_status_mob(); //   and reset MOb status
    1a80:	8e ee       	ldi	r24, 0xEE	; 238
    1a82:	90 e0       	ldi	r25, 0x00	; 0
    1a84:	fc 01       	movw	r30, r24
    1a86:	10 82       	st	Z, r1
            rtn_val = CAN_STATUS_COMPLETED;
    1a88:	19 82       	std	Y+1, r1	; 0x01
            break;
    1a8a:	15 c0       	rjmp	.+42     	; 0x1ab6 <can_get_status+0x256>
        //---------------      
        default:
            // Status field of descriptor: (bin)000b.scfa if MOb error
            cmd->status = a_status;
    1a8c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a8e:	9c 81       	ldd	r25, Y+4	; 0x04
    1a90:	2a 81       	ldd	r18, Y+2	; 0x02
    1a92:	fc 01       	movw	r30, r24
    1a94:	21 87       	std	Z+9, r18	; 0x09
            Can_mob_abort();        // Freed the MOB
    1a96:	8f ee       	ldi	r24, 0xEF	; 239
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	2f ee       	ldi	r18, 0xEF	; 239
    1a9c:	30 e0       	ldi	r19, 0x00	; 0
    1a9e:	f9 01       	movw	r30, r18
    1aa0:	20 81       	ld	r18, Z
    1aa2:	2f 73       	andi	r18, 0x3F	; 63
    1aa4:	fc 01       	movw	r30, r24
    1aa6:	20 83       	st	Z, r18
            Can_clear_status_mob(); //   and reset MOb status
    1aa8:	8e ee       	ldi	r24, 0xEE	; 238
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	fc 01       	movw	r30, r24
    1aae:	10 82       	st	Z, r1
            rtn_val = CAN_STATUS_ERROR;
    1ab0:	82 e0       	ldi	r24, 0x02	; 2
    1ab2:	89 83       	std	Y+1, r24	; 0x01
            break;
    1ab4:	00 00       	nop
             
    } // switch (a_status...
 
    return (rtn_val);
    1ab6:	89 81       	ldd	r24, Y+1	; 0x01
}
    1ab8:	0f 90       	pop	r0
    1aba:	0f 90       	pop	r0
    1abc:	0f 90       	pop	r0
    1abe:	0f 90       	pop	r0
    1ac0:	df 91       	pop	r29
    1ac2:	cf 91       	pop	r28
    1ac4:	08 95       	ret

00001ac6 <__bswap_16>:
#define LED3_ON			(LEDS_PORT |= (1 << LED3))
#define LED3_OFF		(LEDS_PORT &= ~(1 << LED3))
#define LED3_TOG		(LEDS_PORT ^= (1 << LED3))

static __inline uint16_t __bswap_16(uint16_t __x)
{
    1ac6:	cf 93       	push	r28
    1ac8:	df 93       	push	r29
    1aca:	00 d0       	rcall	.+0      	; 0x1acc <__bswap_16+0x6>
    1acc:	cd b7       	in	r28, 0x3d	; 61
    1ace:	de b7       	in	r29, 0x3e	; 62
    1ad0:	9a 83       	std	Y+2, r25	; 0x02
    1ad2:	89 83       	std	Y+1, r24	; 0x01
	return (__x << 8)|(__x >> 8);
    1ad4:	89 81       	ldd	r24, Y+1	; 0x01
    1ad6:	9a 81       	ldd	r25, Y+2	; 0x02
    1ad8:	98 27       	eor	r25, r24
    1ada:	89 27       	eor	r24, r25
    1adc:	98 27       	eor	r25, r24
}
    1ade:	0f 90       	pop	r0
    1ae0:	0f 90       	pop	r0
    1ae2:	df 91       	pop	r29
    1ae4:	cf 91       	pop	r28
    1ae6:	08 95       	ret

00001ae8 <main>:
#include "config.h"

static void chip_init (void);

int main(void)
{
    1ae8:	cf 93       	push	r28
    1aea:	df 93       	push	r29
    1aec:	cd b7       	in	r28, 0x3d	; 61
    1aee:	de b7       	in	r29, 0x3e	; 62
    1af0:	6c 97       	sbiw	r28, 0x1c	; 28
    1af2:	0f b6       	in	r0, 0x3f	; 63
    1af4:	f8 94       	cli
    1af6:	de bf       	out	0x3e, r29	; 62
    1af8:	0f be       	out	0x3f, r0	; 63
    1afa:	cd bf       	out	0x3d, r28	; 61
	chip_init();
    1afc:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <chip_init>
	can_init(0);
    1b00:	80 e0       	ldi	r24, 0x00	; 0
    1b02:	0e 94 7d 01 	call	0x2fa	; 0x2fa <can_init>
	adc_init();
    1b06:	0e 94 55 00 	call	0xaa	; 0xaa <adc_init>
	sei();
    1b0a:	78 94       	sei
	
   	uint8_t pt_data[CAN_DLC];
	st_cmd_t msg;
	msg.id.ext = CAN_ID;
    1b0c:	80 e8       	ldi	r24, 0x80	; 128
    1b0e:	91 e0       	ldi	r25, 0x01	; 1
    1b10:	a0 e0       	ldi	r26, 0x00	; 0
    1b12:	b0 e0       	ldi	r27, 0x00	; 0
    1b14:	8b 8b       	std	Y+19, r24	; 0x13
    1b16:	9c 8b       	std	Y+20, r25	; 0x14
    1b18:	ad 8b       	std	Y+21, r26	; 0x15
    1b1a:	be 8b       	std	Y+22, r27	; 0x16
	msg.dlc = CAN_DLC;
    1b1c:	88 e0       	ldi	r24, 0x08	; 8
    1b1e:	8f 8b       	std	Y+23, r24	; 0x17
	msg.cmd = CMD_TX_DATA;
    1b20:	82 e0       	ldi	r24, 0x02	; 2
    1b22:	8a 8b       	std	Y+18, r24	; 0x12
	
	uint16_t lambda = 10000;
    1b24:	80 e1       	ldi	r24, 0x10	; 16
    1b26:	97 e2       	ldi	r25, 0x27	; 39
    1b28:	9a 83       	std	Y+2, r25	; 0x02
    1b2a:	89 83       	std	Y+1, r24	; 0x01
	lambda = bswap_16(lambda);
    1b2c:	89 81       	ldd	r24, Y+1	; 0x01
    1b2e:	9a 81       	ldd	r25, Y+2	; 0x02
    1b30:	0e 94 63 0d 	call	0x1ac6	; 0x1ac6 <__bswap_16>
    1b34:	9a 83       	std	Y+2, r25	; 0x02
    1b36:	89 83       	std	Y+1, r24	; 0x01
		
	pt_data[0] = lambda;
    1b38:	89 81       	ldd	r24, Y+1	; 0x01
    1b3a:	89 87       	std	Y+9, r24	; 0x09
	pt_data[1] = (uint8_t)(lambda >> 8);
    1b3c:	89 81       	ldd	r24, Y+1	; 0x01
    1b3e:	9a 81       	ldd	r25, Y+2	; 0x02
    1b40:	89 2f       	mov	r24, r25
    1b42:	99 27       	eor	r25, r25
    1b44:	8a 87       	std	Y+10, r24	; 0x0a
	
	float oxygen = 0.1f * 1000.0f;
    1b46:	80 e0       	ldi	r24, 0x00	; 0
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	a8 ec       	ldi	r26, 0xC8	; 200
    1b4c:	b2 e4       	ldi	r27, 0x42	; 66
    1b4e:	8b 83       	std	Y+3, r24	; 0x03
    1b50:	9c 83       	std	Y+4, r25	; 0x04
    1b52:	ad 83       	std	Y+5, r26	; 0x05
    1b54:	be 83       	std	Y+6, r27	; 0x06
	uint16_t oxy = bswap_16((uint16_t)oxygen);
    1b56:	6b 81       	ldd	r22, Y+3	; 0x03
    1b58:	7c 81       	ldd	r23, Y+4	; 0x04
    1b5a:	8d 81       	ldd	r24, Y+5	; 0x05
    1b5c:	9e 81       	ldd	r25, Y+6	; 0x06
    1b5e:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <__fixunssfsi>
    1b62:	dc 01       	movw	r26, r24
    1b64:	cb 01       	movw	r24, r22
    1b66:	0e 94 63 0d 	call	0x1ac6	; 0x1ac6 <__bswap_16>
    1b6a:	98 87       	std	Y+8, r25	; 0x08
    1b6c:	8f 83       	std	Y+7, r24	; 0x07
	
	pt_data[2] = oxy;
    1b6e:	8f 81       	ldd	r24, Y+7	; 0x07
    1b70:	8b 87       	std	Y+11, r24	; 0x0b
	pt_data[3] = (uint8_t)(oxy >> 8);
    1b72:	8f 81       	ldd	r24, Y+7	; 0x07
    1b74:	98 85       	ldd	r25, Y+8	; 0x08
    1b76:	89 2f       	mov	r24, r25
    1b78:	99 27       	eor	r25, r25
    1b7a:	8c 87       	std	Y+12, r24	; 0x0c
	
	// pt_data[4] = (uint8_t)((uint32_t) adc_ad12v() * 24500UL / 1023UL/ 100UL );
	pt_data[4] = (uint8_t)((uint32_t) adc_ad12v() * 245UL / 1023UL );
    1b7c:	0e 94 74 00 	call	0xe8	; 0xe8 <adc_ad12v>
    1b80:	9c 01       	movw	r18, r24
    1b82:	40 e0       	ldi	r20, 0x00	; 0
    1b84:	50 e0       	ldi	r21, 0x00	; 0
    1b86:	85 ef       	ldi	r24, 0xF5	; 245
    1b88:	90 e0       	ldi	r25, 0x00	; 0
    1b8a:	dc 01       	movw	r26, r24
    1b8c:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <__muluhisi3>
    1b90:	dc 01       	movw	r26, r24
    1b92:	cb 01       	movw	r24, r22
    1b94:	2f ef       	ldi	r18, 0xFF	; 255
    1b96:	33 e0       	ldi	r19, 0x03	; 3
    1b98:	40 e0       	ldi	r20, 0x00	; 0
    1b9a:	50 e0       	ldi	r21, 0x00	; 0
    1b9c:	bc 01       	movw	r22, r24
    1b9e:	cd 01       	movw	r24, r26
    1ba0:	0e 94 92 0f 	call	0x1f24	; 0x1f24 <__udivmodsi4>
    1ba4:	da 01       	movw	r26, r20
    1ba6:	c9 01       	movw	r24, r18
    1ba8:	8d 87       	std	Y+13, r24	; 0x0d
	pt_data[5] = (uint8_t)((float) pt_data[4] *0.85f);
    1baa:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bac:	88 2f       	mov	r24, r24
    1bae:	90 e0       	ldi	r25, 0x00	; 0
    1bb0:	a0 e0       	ldi	r26, 0x00	; 0
    1bb2:	b0 e0       	ldi	r27, 0x00	; 0
    1bb4:	bc 01       	movw	r22, r24
    1bb6:	cd 01       	movw	r24, r26
    1bb8:	0e 94 97 0e 	call	0x1d2e	; 0x1d2e <__floatunsisf>
    1bbc:	dc 01       	movw	r26, r24
    1bbe:	cb 01       	movw	r24, r22
    1bc0:	2a e9       	ldi	r18, 0x9A	; 154
    1bc2:	39 e9       	ldi	r19, 0x99	; 153
    1bc4:	49 e5       	ldi	r20, 0x59	; 89
    1bc6:	5f e3       	ldi	r21, 0x3F	; 63
    1bc8:	bc 01       	movw	r22, r24
    1bca:	cd 01       	movw	r24, r26
    1bcc:	0e 94 25 0f 	call	0x1e4a	; 0x1e4a <__mulsf3>
    1bd0:	dc 01       	movw	r26, r24
    1bd2:	cb 01       	movw	r24, r22
    1bd4:	bc 01       	movw	r22, r24
    1bd6:	cd 01       	movw	r24, r26
    1bd8:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <__fixunssfsi>
    1bdc:	dc 01       	movw	r26, r24
    1bde:	cb 01       	movw	r24, r22
    1be0:	8e 87       	std	Y+14, r24	; 0x0e
	
	pt_data[6] = (1 << 7)|(1 << 4)|(1 << 1);	// bosch lsu4.9, heater pid locked, lambda valid
    1be2:	82 e9       	ldi	r24, 0x92	; 146
    1be4:	8f 87       	std	Y+15, r24	; 0x0f
	pt_data[7] = 0x06;
    1be6:	86 e0       	ldi	r24, 0x06	; 6
    1be8:	88 8b       	std	Y+16, r24	; 0x10
	
	msg.pt_data = &pt_data[0];
    1bea:	ce 01       	movw	r24, r28
    1bec:	09 96       	adiw	r24, 0x09	; 9
    1bee:	99 8f       	std	Y+25, r25	; 0x19
    1bf0:	88 8f       	std	Y+24, r24	; 0x18
	
    while (1) 
    {
		while(can_cmd(&msg) != CAN_CMD_ACCEPTED); // wait for MOb to configure
    1bf2:	00 00       	nop
    1bf4:	ce 01       	movw	r24, r28
    1bf6:	41 96       	adiw	r24, 0x11	; 17
    1bf8:	0e 94 9a 01 	call	0x334	; 0x334 <can_cmd>
    1bfc:	88 23       	and	r24, r24
    1bfe:	d1 f7       	brne	.-12     	; 0x1bf4 <main+0x10c>
		while(can_get_status(&msg) == CAN_STATUS_NOT_COMPLETED); // wait for a transmit request to come in, and send a response
    1c00:	00 00       	nop
    1c02:	ce 01       	movw	r24, r28
    1c04:	41 96       	adiw	r24, 0x11	; 17
    1c06:	0e 94 30 0c 	call	0x1860	; 0x1860 <can_get_status>
    1c0a:	81 30       	cpi	r24, 0x01	; 1
    1c0c:	d1 f3       	breq	.-12     	; 0x1c02 <main+0x11a>
		LED2_TOG;
    1c0e:	85 e2       	ldi	r24, 0x25	; 37
    1c10:	90 e0       	ldi	r25, 0x00	; 0
    1c12:	25 e2       	ldi	r18, 0x25	; 37
    1c14:	30 e0       	ldi	r19, 0x00	; 0
    1c16:	f9 01       	movw	r30, r18
    1c18:	30 81       	ld	r19, Z
    1c1a:	20 e2       	ldi	r18, 0x20	; 32
    1c1c:	23 27       	eor	r18, r19
    1c1e:	fc 01       	movw	r30, r24
    1c20:	20 83       	st	Z, r18
		timer_delay_ms(10);	
    1c22:	8a e0       	ldi	r24, 0x0A	; 10
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <timer_delay_ms>
    }
    1c2a:	e3 cf       	rjmp	.-58     	; 0x1bf2 <main+0x10a>

00001c2c <chip_init>:
}

void chip_init (void)
{
    1c2c:	cf 93       	push	r28
    1c2e:	df 93       	push	r29
    1c30:	cd b7       	in	r28, 0x3d	; 61
    1c32:	de b7       	in	r29, 0x3e	; 62
	CLKPR = 0x00;
	*/
	
	// leds at pb5 (led2) and pb6 (led3), active high
	// leds are off
	LEDS |= (1 << LED2)|(1 << LED3);
    1c34:	84 e2       	ldi	r24, 0x24	; 36
    1c36:	90 e0       	ldi	r25, 0x00	; 0
    1c38:	24 e2       	ldi	r18, 0x24	; 36
    1c3a:	30 e0       	ldi	r19, 0x00	; 0
    1c3c:	f9 01       	movw	r30, r18
    1c3e:	20 81       	ld	r18, Z
    1c40:	20 66       	ori	r18, 0x60	; 96
    1c42:	fc 01       	movw	r30, r24
    1c44:	20 83       	st	Z, r18
	LEDS_PORT &= ~((1 << LED2)|(1 << LED3));
    1c46:	85 e2       	ldi	r24, 0x25	; 37
    1c48:	90 e0       	ldi	r25, 0x00	; 0
    1c4a:	25 e2       	ldi	r18, 0x25	; 37
    1c4c:	30 e0       	ldi	r19, 0x00	; 0
    1c4e:	f9 01       	movw	r30, r18
    1c50:	20 81       	ld	r18, Z
    1c52:	2f 79       	andi	r18, 0x9F	; 159
    1c54:	fc 01       	movw	r30, r24
    1c56:	20 83       	st	Z, r18
}
    1c58:	00 00       	nop
    1c5a:	df 91       	pop	r29
    1c5c:	cf 91       	pop	r28
    1c5e:	08 95       	ret

00001c60 <timer_delay_ms>:
	TIMSK0 |= (1 << TOIE0);
	
}

void timer_delay_ms (uint16_t delay)
{
    1c60:	cf 93       	push	r28
    1c62:	df 93       	push	r29
    1c64:	00 d0       	rcall	.+0      	; 0x1c66 <timer_delay_ms+0x6>
    1c66:	cd b7       	in	r28, 0x3d	; 61
    1c68:	de b7       	in	r29, 0x3e	; 62
    1c6a:	9a 83       	std	Y+2, r25	; 0x02
    1c6c:	89 83       	std	Y+1, r24	; 0x01
	do
	{
		TCNT0 = 6;
    1c6e:	86 e4       	ldi	r24, 0x46	; 70
    1c70:	90 e0       	ldi	r25, 0x00	; 0
    1c72:	26 e0       	ldi	r18, 0x06	; 6
    1c74:	fc 01       	movw	r30, r24
    1c76:	20 83       	st	Z, r18
		TCCR0B |= (1 << CS01)|(1 << CS00);
    1c78:	85 e4       	ldi	r24, 0x45	; 69
    1c7a:	90 e0       	ldi	r25, 0x00	; 0
    1c7c:	25 e4       	ldi	r18, 0x45	; 69
    1c7e:	30 e0       	ldi	r19, 0x00	; 0
    1c80:	f9 01       	movw	r30, r18
    1c82:	20 81       	ld	r18, Z
    1c84:	23 60       	ori	r18, 0x03	; 3
    1c86:	fc 01       	movw	r30, r24
    1c88:	20 83       	st	Z, r18
		while ((TIFR0 & (1 << TOV0)) == 0);
    1c8a:	00 00       	nop
    1c8c:	85 e3       	ldi	r24, 0x35	; 53
    1c8e:	90 e0       	ldi	r25, 0x00	; 0
    1c90:	fc 01       	movw	r30, r24
    1c92:	80 81       	ld	r24, Z
    1c94:	88 2f       	mov	r24, r24
    1c96:	90 e0       	ldi	r25, 0x00	; 0
    1c98:	81 70       	andi	r24, 0x01	; 1
    1c9a:	99 27       	eor	r25, r25
    1c9c:	89 2b       	or	r24, r25
    1c9e:	b1 f3       	breq	.-20     	; 0x1c8c <timer_delay_ms+0x2c>
		TIFR0 |= (1 << TOV0);
    1ca0:	85 e3       	ldi	r24, 0x35	; 53
    1ca2:	90 e0       	ldi	r25, 0x00	; 0
    1ca4:	25 e3       	ldi	r18, 0x35	; 53
    1ca6:	30 e0       	ldi	r19, 0x00	; 0
    1ca8:	f9 01       	movw	r30, r18
    1caa:	20 81       	ld	r18, Z
    1cac:	21 60       	ori	r18, 0x01	; 1
    1cae:	fc 01       	movw	r30, r24
    1cb0:	20 83       	st	Z, r18
		delay--;
    1cb2:	89 81       	ldd	r24, Y+1	; 0x01
    1cb4:	9a 81       	ldd	r25, Y+2	; 0x02
    1cb6:	01 97       	sbiw	r24, 0x01	; 1
    1cb8:	9a 83       	std	Y+2, r25	; 0x02
    1cba:	89 83       	std	Y+1, r24	; 0x01
	} while (delay > 0);
    1cbc:	89 81       	ldd	r24, Y+1	; 0x01
    1cbe:	9a 81       	ldd	r25, Y+2	; 0x02
    1cc0:	89 2b       	or	r24, r25
    1cc2:	a9 f6       	brne	.-86     	; 0x1c6e <timer_delay_ms+0xe>
}
    1cc4:	00 00       	nop
    1cc6:	0f 90       	pop	r0
    1cc8:	0f 90       	pop	r0
    1cca:	df 91       	pop	r29
    1ccc:	cf 91       	pop	r28
    1cce:	08 95       	ret

00001cd0 <__fixunssfsi>:
    1cd0:	0e 94 04 0f 	call	0x1e08	; 0x1e08 <__fp_splitA>
    1cd4:	88 f0       	brcs	.+34     	; 0x1cf8 <__fixunssfsi+0x28>
    1cd6:	9f 57       	subi	r25, 0x7F	; 127
    1cd8:	98 f0       	brcs	.+38     	; 0x1d00 <__fixunssfsi+0x30>
    1cda:	b9 2f       	mov	r27, r25
    1cdc:	99 27       	eor	r25, r25
    1cde:	b7 51       	subi	r27, 0x17	; 23
    1ce0:	b0 f0       	brcs	.+44     	; 0x1d0e <__fixunssfsi+0x3e>
    1ce2:	e1 f0       	breq	.+56     	; 0x1d1c <__fixunssfsi+0x4c>
    1ce4:	66 0f       	add	r22, r22
    1ce6:	77 1f       	adc	r23, r23
    1ce8:	88 1f       	adc	r24, r24
    1cea:	99 1f       	adc	r25, r25
    1cec:	1a f0       	brmi	.+6      	; 0x1cf4 <__fixunssfsi+0x24>
    1cee:	ba 95       	dec	r27
    1cf0:	c9 f7       	brne	.-14     	; 0x1ce4 <__fixunssfsi+0x14>
    1cf2:	14 c0       	rjmp	.+40     	; 0x1d1c <__fixunssfsi+0x4c>
    1cf4:	b1 30       	cpi	r27, 0x01	; 1
    1cf6:	91 f0       	breq	.+36     	; 0x1d1c <__fixunssfsi+0x4c>
    1cf8:	0e 94 1e 0f 	call	0x1e3c	; 0x1e3c <__fp_zero>
    1cfc:	b1 e0       	ldi	r27, 0x01	; 1
    1cfe:	08 95       	ret
    1d00:	0c 94 1e 0f 	jmp	0x1e3c	; 0x1e3c <__fp_zero>
    1d04:	67 2f       	mov	r22, r23
    1d06:	78 2f       	mov	r23, r24
    1d08:	88 27       	eor	r24, r24
    1d0a:	b8 5f       	subi	r27, 0xF8	; 248
    1d0c:	39 f0       	breq	.+14     	; 0x1d1c <__fixunssfsi+0x4c>
    1d0e:	b9 3f       	cpi	r27, 0xF9	; 249
    1d10:	cc f3       	brlt	.-14     	; 0x1d04 <__fixunssfsi+0x34>
    1d12:	86 95       	lsr	r24
    1d14:	77 95       	ror	r23
    1d16:	67 95       	ror	r22
    1d18:	b3 95       	inc	r27
    1d1a:	d9 f7       	brne	.-10     	; 0x1d12 <__fixunssfsi+0x42>
    1d1c:	3e f4       	brtc	.+14     	; 0x1d2c <__fixunssfsi+0x5c>
    1d1e:	90 95       	com	r25
    1d20:	80 95       	com	r24
    1d22:	70 95       	com	r23
    1d24:	61 95       	neg	r22
    1d26:	7f 4f       	sbci	r23, 0xFF	; 255
    1d28:	8f 4f       	sbci	r24, 0xFF	; 255
    1d2a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d2c:	08 95       	ret

00001d2e <__floatunsisf>:
    1d2e:	e8 94       	clt
    1d30:	09 c0       	rjmp	.+18     	; 0x1d44 <__floatsisf+0x12>

00001d32 <__floatsisf>:
    1d32:	97 fb       	bst	r25, 7
    1d34:	3e f4       	brtc	.+14     	; 0x1d44 <__floatsisf+0x12>
    1d36:	90 95       	com	r25
    1d38:	80 95       	com	r24
    1d3a:	70 95       	com	r23
    1d3c:	61 95       	neg	r22
    1d3e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d40:	8f 4f       	sbci	r24, 0xFF	; 255
    1d42:	9f 4f       	sbci	r25, 0xFF	; 255
    1d44:	99 23       	and	r25, r25
    1d46:	a9 f0       	breq	.+42     	; 0x1d72 <__floatsisf+0x40>
    1d48:	f9 2f       	mov	r31, r25
    1d4a:	96 e9       	ldi	r25, 0x96	; 150
    1d4c:	bb 27       	eor	r27, r27
    1d4e:	93 95       	inc	r25
    1d50:	f6 95       	lsr	r31
    1d52:	87 95       	ror	r24
    1d54:	77 95       	ror	r23
    1d56:	67 95       	ror	r22
    1d58:	b7 95       	ror	r27
    1d5a:	f1 11       	cpse	r31, r1
    1d5c:	f8 cf       	rjmp	.-16     	; 0x1d4e <__floatsisf+0x1c>
    1d5e:	fa f4       	brpl	.+62     	; 0x1d9e <__floatsisf+0x6c>
    1d60:	bb 0f       	add	r27, r27
    1d62:	11 f4       	brne	.+4      	; 0x1d68 <__floatsisf+0x36>
    1d64:	60 ff       	sbrs	r22, 0
    1d66:	1b c0       	rjmp	.+54     	; 0x1d9e <__floatsisf+0x6c>
    1d68:	6f 5f       	subi	r22, 0xFF	; 255
    1d6a:	7f 4f       	sbci	r23, 0xFF	; 255
    1d6c:	8f 4f       	sbci	r24, 0xFF	; 255
    1d6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d70:	16 c0       	rjmp	.+44     	; 0x1d9e <__floatsisf+0x6c>
    1d72:	88 23       	and	r24, r24
    1d74:	11 f0       	breq	.+4      	; 0x1d7a <__floatsisf+0x48>
    1d76:	96 e9       	ldi	r25, 0x96	; 150
    1d78:	11 c0       	rjmp	.+34     	; 0x1d9c <__floatsisf+0x6a>
    1d7a:	77 23       	and	r23, r23
    1d7c:	21 f0       	breq	.+8      	; 0x1d86 <__floatsisf+0x54>
    1d7e:	9e e8       	ldi	r25, 0x8E	; 142
    1d80:	87 2f       	mov	r24, r23
    1d82:	76 2f       	mov	r23, r22
    1d84:	05 c0       	rjmp	.+10     	; 0x1d90 <__floatsisf+0x5e>
    1d86:	66 23       	and	r22, r22
    1d88:	71 f0       	breq	.+28     	; 0x1da6 <__floatsisf+0x74>
    1d8a:	96 e8       	ldi	r25, 0x86	; 134
    1d8c:	86 2f       	mov	r24, r22
    1d8e:	70 e0       	ldi	r23, 0x00	; 0
    1d90:	60 e0       	ldi	r22, 0x00	; 0
    1d92:	2a f0       	brmi	.+10     	; 0x1d9e <__floatsisf+0x6c>
    1d94:	9a 95       	dec	r25
    1d96:	66 0f       	add	r22, r22
    1d98:	77 1f       	adc	r23, r23
    1d9a:	88 1f       	adc	r24, r24
    1d9c:	da f7       	brpl	.-10     	; 0x1d94 <__floatsisf+0x62>
    1d9e:	88 0f       	add	r24, r24
    1da0:	96 95       	lsr	r25
    1da2:	87 95       	ror	r24
    1da4:	97 f9       	bld	r25, 7
    1da6:	08 95       	ret

00001da8 <__fp_inf>:
    1da8:	97 f9       	bld	r25, 7
    1daa:	9f 67       	ori	r25, 0x7F	; 127
    1dac:	80 e8       	ldi	r24, 0x80	; 128
    1dae:	70 e0       	ldi	r23, 0x00	; 0
    1db0:	60 e0       	ldi	r22, 0x00	; 0
    1db2:	08 95       	ret

00001db4 <__fp_nan>:
    1db4:	9f ef       	ldi	r25, 0xFF	; 255
    1db6:	80 ec       	ldi	r24, 0xC0	; 192
    1db8:	08 95       	ret

00001dba <__fp_pscA>:
    1dba:	00 24       	eor	r0, r0
    1dbc:	0a 94       	dec	r0
    1dbe:	16 16       	cp	r1, r22
    1dc0:	17 06       	cpc	r1, r23
    1dc2:	18 06       	cpc	r1, r24
    1dc4:	09 06       	cpc	r0, r25
    1dc6:	08 95       	ret

00001dc8 <__fp_pscB>:
    1dc8:	00 24       	eor	r0, r0
    1dca:	0a 94       	dec	r0
    1dcc:	12 16       	cp	r1, r18
    1dce:	13 06       	cpc	r1, r19
    1dd0:	14 06       	cpc	r1, r20
    1dd2:	05 06       	cpc	r0, r21
    1dd4:	08 95       	ret

00001dd6 <__fp_round>:
    1dd6:	09 2e       	mov	r0, r25
    1dd8:	03 94       	inc	r0
    1dda:	00 0c       	add	r0, r0
    1ddc:	11 f4       	brne	.+4      	; 0x1de2 <__fp_round+0xc>
    1dde:	88 23       	and	r24, r24
    1de0:	52 f0       	brmi	.+20     	; 0x1df6 <__fp_round+0x20>
    1de2:	bb 0f       	add	r27, r27
    1de4:	40 f4       	brcc	.+16     	; 0x1df6 <__fp_round+0x20>
    1de6:	bf 2b       	or	r27, r31
    1de8:	11 f4       	brne	.+4      	; 0x1dee <__fp_round+0x18>
    1dea:	60 ff       	sbrs	r22, 0
    1dec:	04 c0       	rjmp	.+8      	; 0x1df6 <__fp_round+0x20>
    1dee:	6f 5f       	subi	r22, 0xFF	; 255
    1df0:	7f 4f       	sbci	r23, 0xFF	; 255
    1df2:	8f 4f       	sbci	r24, 0xFF	; 255
    1df4:	9f 4f       	sbci	r25, 0xFF	; 255
    1df6:	08 95       	ret

00001df8 <__fp_split3>:
    1df8:	57 fd       	sbrc	r21, 7
    1dfa:	90 58       	subi	r25, 0x80	; 128
    1dfc:	44 0f       	add	r20, r20
    1dfe:	55 1f       	adc	r21, r21
    1e00:	59 f0       	breq	.+22     	; 0x1e18 <__fp_splitA+0x10>
    1e02:	5f 3f       	cpi	r21, 0xFF	; 255
    1e04:	71 f0       	breq	.+28     	; 0x1e22 <__fp_splitA+0x1a>
    1e06:	47 95       	ror	r20

00001e08 <__fp_splitA>:
    1e08:	88 0f       	add	r24, r24
    1e0a:	97 fb       	bst	r25, 7
    1e0c:	99 1f       	adc	r25, r25
    1e0e:	61 f0       	breq	.+24     	; 0x1e28 <__fp_splitA+0x20>
    1e10:	9f 3f       	cpi	r25, 0xFF	; 255
    1e12:	79 f0       	breq	.+30     	; 0x1e32 <__fp_splitA+0x2a>
    1e14:	87 95       	ror	r24
    1e16:	08 95       	ret
    1e18:	12 16       	cp	r1, r18
    1e1a:	13 06       	cpc	r1, r19
    1e1c:	14 06       	cpc	r1, r20
    1e1e:	55 1f       	adc	r21, r21
    1e20:	f2 cf       	rjmp	.-28     	; 0x1e06 <__fp_split3+0xe>
    1e22:	46 95       	lsr	r20
    1e24:	f1 df       	rcall	.-30     	; 0x1e08 <__fp_splitA>
    1e26:	08 c0       	rjmp	.+16     	; 0x1e38 <__fp_splitA+0x30>
    1e28:	16 16       	cp	r1, r22
    1e2a:	17 06       	cpc	r1, r23
    1e2c:	18 06       	cpc	r1, r24
    1e2e:	99 1f       	adc	r25, r25
    1e30:	f1 cf       	rjmp	.-30     	; 0x1e14 <__fp_splitA+0xc>
    1e32:	86 95       	lsr	r24
    1e34:	71 05       	cpc	r23, r1
    1e36:	61 05       	cpc	r22, r1
    1e38:	08 94       	sec
    1e3a:	08 95       	ret

00001e3c <__fp_zero>:
    1e3c:	e8 94       	clt

00001e3e <__fp_szero>:
    1e3e:	bb 27       	eor	r27, r27
    1e40:	66 27       	eor	r22, r22
    1e42:	77 27       	eor	r23, r23
    1e44:	cb 01       	movw	r24, r22
    1e46:	97 f9       	bld	r25, 7
    1e48:	08 95       	ret

00001e4a <__mulsf3>:
    1e4a:	0e 94 38 0f 	call	0x1e70	; 0x1e70 <__mulsf3x>
    1e4e:	0c 94 eb 0e 	jmp	0x1dd6	; 0x1dd6 <__fp_round>
    1e52:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <__fp_pscA>
    1e56:	38 f0       	brcs	.+14     	; 0x1e66 <__mulsf3+0x1c>
    1e58:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <__fp_pscB>
    1e5c:	20 f0       	brcs	.+8      	; 0x1e66 <__mulsf3+0x1c>
    1e5e:	95 23       	and	r25, r21
    1e60:	11 f0       	breq	.+4      	; 0x1e66 <__mulsf3+0x1c>
    1e62:	0c 94 d4 0e 	jmp	0x1da8	; 0x1da8 <__fp_inf>
    1e66:	0c 94 da 0e 	jmp	0x1db4	; 0x1db4 <__fp_nan>
    1e6a:	11 24       	eor	r1, r1
    1e6c:	0c 94 1f 0f 	jmp	0x1e3e	; 0x1e3e <__fp_szero>

00001e70 <__mulsf3x>:
    1e70:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__fp_split3>
    1e74:	70 f3       	brcs	.-36     	; 0x1e52 <__mulsf3+0x8>

00001e76 <__mulsf3_pse>:
    1e76:	95 9f       	mul	r25, r21
    1e78:	c1 f3       	breq	.-16     	; 0x1e6a <__mulsf3+0x20>
    1e7a:	95 0f       	add	r25, r21
    1e7c:	50 e0       	ldi	r21, 0x00	; 0
    1e7e:	55 1f       	adc	r21, r21
    1e80:	62 9f       	mul	r22, r18
    1e82:	f0 01       	movw	r30, r0
    1e84:	72 9f       	mul	r23, r18
    1e86:	bb 27       	eor	r27, r27
    1e88:	f0 0d       	add	r31, r0
    1e8a:	b1 1d       	adc	r27, r1
    1e8c:	63 9f       	mul	r22, r19
    1e8e:	aa 27       	eor	r26, r26
    1e90:	f0 0d       	add	r31, r0
    1e92:	b1 1d       	adc	r27, r1
    1e94:	aa 1f       	adc	r26, r26
    1e96:	64 9f       	mul	r22, r20
    1e98:	66 27       	eor	r22, r22
    1e9a:	b0 0d       	add	r27, r0
    1e9c:	a1 1d       	adc	r26, r1
    1e9e:	66 1f       	adc	r22, r22
    1ea0:	82 9f       	mul	r24, r18
    1ea2:	22 27       	eor	r18, r18
    1ea4:	b0 0d       	add	r27, r0
    1ea6:	a1 1d       	adc	r26, r1
    1ea8:	62 1f       	adc	r22, r18
    1eaa:	73 9f       	mul	r23, r19
    1eac:	b0 0d       	add	r27, r0
    1eae:	a1 1d       	adc	r26, r1
    1eb0:	62 1f       	adc	r22, r18
    1eb2:	83 9f       	mul	r24, r19
    1eb4:	a0 0d       	add	r26, r0
    1eb6:	61 1d       	adc	r22, r1
    1eb8:	22 1f       	adc	r18, r18
    1eba:	74 9f       	mul	r23, r20
    1ebc:	33 27       	eor	r19, r19
    1ebe:	a0 0d       	add	r26, r0
    1ec0:	61 1d       	adc	r22, r1
    1ec2:	23 1f       	adc	r18, r19
    1ec4:	84 9f       	mul	r24, r20
    1ec6:	60 0d       	add	r22, r0
    1ec8:	21 1d       	adc	r18, r1
    1eca:	82 2f       	mov	r24, r18
    1ecc:	76 2f       	mov	r23, r22
    1ece:	6a 2f       	mov	r22, r26
    1ed0:	11 24       	eor	r1, r1
    1ed2:	9f 57       	subi	r25, 0x7F	; 127
    1ed4:	50 40       	sbci	r21, 0x00	; 0
    1ed6:	9a f0       	brmi	.+38     	; 0x1efe <__mulsf3_pse+0x88>
    1ed8:	f1 f0       	breq	.+60     	; 0x1f16 <__mulsf3_pse+0xa0>
    1eda:	88 23       	and	r24, r24
    1edc:	4a f0       	brmi	.+18     	; 0x1ef0 <__mulsf3_pse+0x7a>
    1ede:	ee 0f       	add	r30, r30
    1ee0:	ff 1f       	adc	r31, r31
    1ee2:	bb 1f       	adc	r27, r27
    1ee4:	66 1f       	adc	r22, r22
    1ee6:	77 1f       	adc	r23, r23
    1ee8:	88 1f       	adc	r24, r24
    1eea:	91 50       	subi	r25, 0x01	; 1
    1eec:	50 40       	sbci	r21, 0x00	; 0
    1eee:	a9 f7       	brne	.-22     	; 0x1eda <__mulsf3_pse+0x64>
    1ef0:	9e 3f       	cpi	r25, 0xFE	; 254
    1ef2:	51 05       	cpc	r21, r1
    1ef4:	80 f0       	brcs	.+32     	; 0x1f16 <__mulsf3_pse+0xa0>
    1ef6:	0c 94 d4 0e 	jmp	0x1da8	; 0x1da8 <__fp_inf>
    1efa:	0c 94 1f 0f 	jmp	0x1e3e	; 0x1e3e <__fp_szero>
    1efe:	5f 3f       	cpi	r21, 0xFF	; 255
    1f00:	e4 f3       	brlt	.-8      	; 0x1efa <__mulsf3_pse+0x84>
    1f02:	98 3e       	cpi	r25, 0xE8	; 232
    1f04:	d4 f3       	brlt	.-12     	; 0x1efa <__mulsf3_pse+0x84>
    1f06:	86 95       	lsr	r24
    1f08:	77 95       	ror	r23
    1f0a:	67 95       	ror	r22
    1f0c:	b7 95       	ror	r27
    1f0e:	f7 95       	ror	r31
    1f10:	e7 95       	ror	r30
    1f12:	9f 5f       	subi	r25, 0xFF	; 255
    1f14:	c1 f7       	brne	.-16     	; 0x1f06 <__mulsf3_pse+0x90>
    1f16:	fe 2b       	or	r31, r30
    1f18:	88 0f       	add	r24, r24
    1f1a:	91 1d       	adc	r25, r1
    1f1c:	96 95       	lsr	r25
    1f1e:	87 95       	ror	r24
    1f20:	97 f9       	bld	r25, 7
    1f22:	08 95       	ret

00001f24 <__udivmodsi4>:
    1f24:	a1 e2       	ldi	r26, 0x21	; 33
    1f26:	1a 2e       	mov	r1, r26
    1f28:	aa 1b       	sub	r26, r26
    1f2a:	bb 1b       	sub	r27, r27
    1f2c:	fd 01       	movw	r30, r26
    1f2e:	0d c0       	rjmp	.+26     	; 0x1f4a <__udivmodsi4_ep>

00001f30 <__udivmodsi4_loop>:
    1f30:	aa 1f       	adc	r26, r26
    1f32:	bb 1f       	adc	r27, r27
    1f34:	ee 1f       	adc	r30, r30
    1f36:	ff 1f       	adc	r31, r31
    1f38:	a2 17       	cp	r26, r18
    1f3a:	b3 07       	cpc	r27, r19
    1f3c:	e4 07       	cpc	r30, r20
    1f3e:	f5 07       	cpc	r31, r21
    1f40:	20 f0       	brcs	.+8      	; 0x1f4a <__udivmodsi4_ep>
    1f42:	a2 1b       	sub	r26, r18
    1f44:	b3 0b       	sbc	r27, r19
    1f46:	e4 0b       	sbc	r30, r20
    1f48:	f5 0b       	sbc	r31, r21

00001f4a <__udivmodsi4_ep>:
    1f4a:	66 1f       	adc	r22, r22
    1f4c:	77 1f       	adc	r23, r23
    1f4e:	88 1f       	adc	r24, r24
    1f50:	99 1f       	adc	r25, r25
    1f52:	1a 94       	dec	r1
    1f54:	69 f7       	brne	.-38     	; 0x1f30 <__udivmodsi4_loop>
    1f56:	60 95       	com	r22
    1f58:	70 95       	com	r23
    1f5a:	80 95       	com	r24
    1f5c:	90 95       	com	r25
    1f5e:	9b 01       	movw	r18, r22
    1f60:	ac 01       	movw	r20, r24
    1f62:	bd 01       	movw	r22, r26
    1f64:	cf 01       	movw	r24, r30
    1f66:	08 95       	ret

00001f68 <__tablejump2__>:
    1f68:	ee 0f       	add	r30, r30
    1f6a:	ff 1f       	adc	r31, r31
    1f6c:	05 90       	lpm	r0, Z+
    1f6e:	f4 91       	lpm	r31, Z
    1f70:	e0 2d       	mov	r30, r0
    1f72:	09 94       	ijmp

00001f74 <__muluhisi3>:
    1f74:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <__umulhisi3>
    1f78:	a5 9f       	mul	r26, r21
    1f7a:	90 0d       	add	r25, r0
    1f7c:	b4 9f       	mul	r27, r20
    1f7e:	90 0d       	add	r25, r0
    1f80:	a4 9f       	mul	r26, r20
    1f82:	80 0d       	add	r24, r0
    1f84:	91 1d       	adc	r25, r1
    1f86:	11 24       	eor	r1, r1
    1f88:	08 95       	ret

00001f8a <__umulhisi3>:
    1f8a:	a2 9f       	mul	r26, r18
    1f8c:	b0 01       	movw	r22, r0
    1f8e:	b3 9f       	mul	r27, r19
    1f90:	c0 01       	movw	r24, r0
    1f92:	a3 9f       	mul	r26, r19
    1f94:	70 0d       	add	r23, r0
    1f96:	81 1d       	adc	r24, r1
    1f98:	11 24       	eor	r1, r1
    1f9a:	91 1d       	adc	r25, r1
    1f9c:	b2 9f       	mul	r27, r18
    1f9e:	70 0d       	add	r23, r0
    1fa0:	81 1d       	adc	r24, r1
    1fa2:	11 24       	eor	r1, r1
    1fa4:	91 1d       	adc	r25, r1
    1fa6:	08 95       	ret

00001fa8 <_exit>:
    1fa8:	f8 94       	cli

00001faa <__stop_program>:
    1faa:	ff cf       	rjmp	.-2      	; 0x1faa <__stop_program>
